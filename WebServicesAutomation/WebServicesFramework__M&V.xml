<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="WebServicesFramework" resourceRoot="" soapui-version="4.6.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="ProjectSettings@shadowPassword"/></con:settings><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="SelectMemberClaimSummaryDataServiceV5ServiceSoapBinding" type="wsdl" bindingName="{http://upm3.uhc.com/claimshighway/selectmemberclaimsummarydata/v5}SelectMemberClaimSummaryDataServiceV5ServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="https://aesystestproxy-vm.uhc.com:33443/upm3/claimshighway/SelectMemberClaimSummaryDataV5?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://aesystestproxy-vm.uhc.com:33443/upm3/claimshighway/SelectMemberClaimSummaryDataV5?wsdl"><con:part><con:url>https://aesystestproxy-vm.uhc.com:33443/upm3/claimshighway/SelectMemberClaimSummaryDataV5?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SelectMemberClaimSummaryDataServiceV5Service" targetNamespace="http://upm3.uhc.com/claimshighway/selectmemberclaimsummarydata/v5" xmlns:ns1="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://upm3.uhc.com/claimshighway/selectmemberclaimsummarydata/v5" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://upm3.uhc.com/claimshighway/selectmemberclaimsummarydata/v5" xmlns:ns1="http://upm3.uhc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://upm3.uhc.com"/>
      <xs:element name="internalUse" type="ns1:internalUse"/>
      <xs:element name="keyValuePair" type="ns1:keyValuePair"/>
      <xs:element name="logLevel" type="ns1:logLevel"/>
      <xs:element name="pingHop" type="ns1:pingHop"/>
      <xs:element name="pingRequest" type="ns1:pingRequest"/>
      <xs:element name="pingResponse" type="ns1:pingResponse"/>
      <xs:element name="requestBase" type="ns1:requestBase"/>
      <xs:element name="requestHeader" type="ns1:requestHeader"/>
      <xs:element name="responseBase" type="ns1:responseBase"/>
      <xs:element name="responseHeader" type="ns1:responseHeader"/>
      <xs:element name="serviceCallStatus" type="ns1:serviceCallStatus"/>
      <xs:element name="serviceHop" type="ns1:serviceHop"/>
      <xs:element name="statusMessage" type="ns1:statusMessage"/>
      <xs:element name="statusMessageLevel" type="ns1:statusMessageLevel"/>
      <xs:element name="vr1StatusContainer" type="ns1:vr1StatusContainer"/>
      <xs:element name="vrcStatusGroup" type="ns1:vrcStatusGroup"/>
      <xs:complexType name="selectMemberClaimSummaryDataRequest">
        <xs:complexContent>
          <xs:extension base="ns1:requestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="controlModifiers" type="tns:controlModifierType"/>
              <xs:element minOccurs="0" name="searchType" type="xs:string"/>
              <xs:element minOccurs="0" name="mpin" type="xs:string"/>
              <xs:element minOccurs="0" name="claimSourceID" type="xs:string"/>
              <xs:element minOccurs="0" name="tin" type="xs:string"/>
              <xs:element minOccurs="0" name="npiId" type="xs:string"/>
              <xs:element minOccurs="0" name="policyNumber" type="xs:string"/>
              <xs:element minOccurs="0" name="employeeId" type="xs:string"/>
              <xs:element minOccurs="0" name="caeClaimNumber" type="xs:string"/>
              <xs:element minOccurs="0" name="patientFirstName" type="xs:string"/>
              <xs:element minOccurs="0" name="patientDateOfBirth" type="xs:string"/>
              <xs:element minOccurs="0" name="claimFirstDate" type="xs:string"/>
              <xs:element minOccurs="0" name="claimLastDate" type="xs:string"/>
              <xs:element minOccurs="0" name="dateType" type="xs:string"/>
              <xs:element minOccurs="0" name="claimStatus" type="xs:string"/>
              <xs:element minOccurs="0" name="submittedChargeAmount" type="xs:string"/>
              <xs:element minOccurs="0" name="cosmosDivisionCode" type="xs:string"/>
              <xs:element minOccurs="0" name="phsCompanyNumber" type="xs:string"/>
              <xs:element minOccurs="0" name="reconTrackingNumber" type="xs:string"/>
              <xs:element minOccurs="0" name="suffixCode" type="xs:string"/>
              <xs:element minOccurs="0" name="pagingState" type="tns:pagingStateType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="controlModifierType">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimsHighwaySystemParameter" type="tns:claimsHighwaySystemParameterType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="claimsHighwaySystemParameterType">
        <xs:sequence>
          <xs:element minOccurs="0" name="applicationID" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pagingStateType">
        <xs:sequence>
          <xs:element minOccurs="0" name="moreData" type="xs:string"/>
          <xs:element minOccurs="0" name="nextClaimFirstDate" type="xs:string"/>
          <xs:element minOccurs="0" name="nextClaimLastDate" type="xs:string"/>
          <xs:element minOccurs="0" name="nextICN" type="xs:string"/>
          <xs:element minOccurs="0" name="nextICNType" type="xs:string"/>
          <xs:element minOccurs="0" name="nextSingleDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="selectMemberClaimSummaryDataResponse">
        <xs:complexContent>
          <xs:extension base="ns1:responseBase">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="claimData" nillable="true" type="tns:claimDataType"/>
              <xs:element minOccurs="0" name="pagingState" type="tns:pagingStateType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="claimDataType">
        <xs:sequence>
          <xs:element minOccurs="0" name="adjustedDate" type="xs:string"/>
          <xs:element minOccurs="0" name="adjustedTime" type="xs:string"/>
          <xs:element minOccurs="0" name="billType" type="xs:string"/>
          <xs:element minOccurs="0" name="billingProviderName" type="xs:string"/>
          <xs:element minOccurs="0" name="caeClaimNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="capitationIndicator" type="xs:string"/>
          <xs:element minOccurs="0" name="checkNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="checkPaymentEFTIndicator" type="xs:string"/>
          <xs:element minOccurs="0" name="checkSeriesDesignator" type="xs:string"/>
          <xs:element minOccurs="0" name="claimCARCCode" type="xs:string"/>
          <xs:element minOccurs="0" name="claimCARCCount" type="xs:string"/>
          <xs:element minOccurs="0" name="claimFirstServiceDate" type="xs:string"/>
          <xs:element minOccurs="0" name="claimINNOon" type="xs:string"/>
          <xs:element minOccurs="0" name="claimLastServiceDate" type="xs:string"/>
          <xs:element minOccurs="0" name="claimMoreCARCSIndicator" type="xs:string"/>
          <xs:element minOccurs="0" name="claimRARCCode" type="xs:string"/>
          <xs:element minOccurs="0" name="claimRemarkCode" type="xs:string"/>
          <xs:element minOccurs="0" name="claimStatusCode" type="xs:string"/>
          <xs:element minOccurs="0" name="claimsHighwayICN" type="xs:string"/>
          <xs:element minOccurs="0" name="detailCall" type="xs:string"/>
          <xs:element minOccurs="0" name="draftNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="drgNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="employeeID" type="xs:string"/>
          <xs:element minOccurs="0" name="facilityOrProfessionalCode" type="xs:string"/>
          <xs:element minOccurs="0" name="fundingType" type="xs:string"/>
          <xs:element minOccurs="0" name="niceClaimStatusCode" type="xs:string"/>
          <xs:element minOccurs="0" name="niceClaimTypeCode" type="xs:string"/>
          <xs:element minOccurs="0" name="originalClaimNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="paperlessIndicator" type="xs:string"/>
          <xs:element minOccurs="0" name="partitionId" type="xs:string"/>
          <xs:element minOccurs="0" name="patientAccountNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="patientFirstName" type="xs:string"/>
          <xs:element minOccurs="0" name="patientLastName" type="xs:string"/>
          <xs:element minOccurs="0" name="patientRelationship" type="xs:string"/>
          <xs:element minOccurs="0" name="payIssueDate" type="xs:string"/>
          <xs:element minOccurs="0" name="payStatusCode" type="xs:string"/>
          <xs:element minOccurs="0" name="paymentAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="pendCode" type="xs:string"/>
          <xs:element minOccurs="0" name="policyNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="processDate" type="xs:string"/>
          <xs:element minOccurs="0" name="providerBillingNPIId" type="xs:string"/>
          <xs:element minOccurs="0" name="providerPreferredTINNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="providerPreferredTINPrefix" type="xs:string"/>
          <xs:element minOccurs="0" name="providerPreferredTINSuffix" type="xs:string"/>
          <xs:element minOccurs="0" name="providerRenderingNPIId" type="xs:string"/>
          <xs:element minOccurs="0" name="receivedDate" type="xs:string"/>
          <xs:element minOccurs="0" name="reconTrackingNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="renderingProviderName" type="xs:string"/>
          <xs:element minOccurs="0" name="resubmittedCAEClaimNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="statusEffectiveDate" type="xs:string"/>
          <xs:element minOccurs="0" name="topsClaimClosedIndicator" type="xs:string"/>
          <xs:element minOccurs="0" name="topsClaimPaidIndicator" type="xs:string"/>
          <xs:element minOccurs="0" name="topsClaimPendedIndicator" type="xs:string"/>
          <xs:element minOccurs="0" name="topsClaimRejectedIndicator" type="xs:string"/>
          <xs:element minOccurs="0" name="topsClaimUnprocessedIndicator" type="xs:string"/>
          <xs:element minOccurs="0" name="totalChargeAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="totalCopayAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="totalNotCoveredAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="totalPaidAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="totalPatientResponsibilityAmount" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ServiceException" type="tns:ServiceException"/>
      <xs:complexType name="ServiceException">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="invokePing" type="tns:invokePing"/>
      <xs:complexType name="invokePing">
        <xs:sequence>
          <xs:element minOccurs="0" name="arg0" type="ns1:pingRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="invokePingResponse" type="tns:invokePingResponse"/>
      <xs:complexType name="invokePingResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="ns1:pingResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="invokeService" type="tns:invokeService"/>
      <xs:complexType name="invokeService">
        <xs:sequence>
          <xs:element minOccurs="0" name="arg0" type="tns:selectMemberClaimSummaryDataRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="invokeServiceResponse" type="tns:invokeServiceResponse"/>
      <xs:complexType name="invokeServiceResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:selectMemberClaimSummaryDataResponse"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://upm3.uhc.com" xmlns:ns1="http://upm3.uhc.com/claimshighway/selectmemberclaimsummarydata/v5" xmlns:tns="http://upm3.uhc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://upm3.uhc.com/claimshighway/selectmemberclaimsummarydata/v5"/>
      <xs:complexType name="pingRequest">
        <xs:complexContent>
          <xs:extension base="tns:requestBase">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType abstract="true" name="requestBase">
        <xs:sequence>
          <xs:element name="requestHeader" type="tns:requestHeader"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="requestHeader">
        <xs:sequence>
          <xs:element name="applicationName" type="xs:string"/>
          <xs:element name="applicationInstanceName" nillable="true" type="xs:string"/>
          <xs:element name="logLevel" type="tns:logLevel"/>
          <xs:element minOccurs="0" name="externalId" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceOption" nillable="true" type="tns:keyValuePair"/>
          <xs:element minOccurs="0" name="internalUse" nillable="true" type="tns:internalUse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="keyValuePair">
        <xs:sequence>
          <xs:element name="key" type="xs:string"/>
          <xs:element name="value" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="internalUse">
        <xs:sequence>
          <xs:element name="uid" nillable="true" type="xs:string"/>
          <xs:element name="serviceName" nillable="true" type="xs:string"/>
          <xs:element name="serviceVersion" nillable="true" type="xs:string"/>
          <xs:element name="originalConsumer" nillable="true" type="xs:string"/>
          <xs:element name="originalServiceName" nillable="true" type="xs:string"/>
          <xs:element name="originalServiceVersion" nillable="true" type="xs:string"/>
          <xs:element name="logSequence" nillable="true" type="xs:int"/>
          <xs:element name="uidGeneratedBy" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pingResponse">
        <xs:complexContent>
          <xs:extension base="tns:responseBase">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="pingHops" type="tns:pingHop"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType abstract="true" name="responseBase">
        <xs:sequence>
          <xs:element name="responseHeader" type="tns:responseHeader"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pingHop">
        <xs:sequence>
          <xs:element minOccurs="0" name="className" type="xs:string"/>
          <xs:element minOccurs="0" name="bundleName" type="xs:string"/>
          <xs:element minOccurs="0" name="bundleVersion" type="xs:string"/>
          <xs:element minOccurs="0" name="bundleId" type="xs:string"/>
          <xs:element minOccurs="0" name="timestamp" type="xs:string"/>
          <xs:element minOccurs="0" name="applicationAuthorized" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="configurationInformation" nillable="true" type="tns:keyValuePair"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="responseHeader">
        <xs:sequence>
          <xs:element name="serviceCallStatus" type="tns:serviceCallStatus"/>
          <xs:element name="externalId" nillable="true" type="xs:string"/>
          <xs:element name="serviceName" type="xs:string"/>
          <xs:element name="serviceVersion" type="xs:string"/>
          <xs:element name="logLevel" type="tns:logLevel"/>
          <xs:element name="upmEnvironment" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceHops" nillable="true" type="tns:serviceHop"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="statusMessages" nillable="true" type="tns:statusMessage"/>
          <xs:element name="internalUse" type="tns:internalUse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="serviceHop">
        <xs:sequence>
          <xs:element minOccurs="0" name="bundleName" type="xs:string"/>
          <xs:element minOccurs="0" name="bundleVersion" type="xs:string"/>
          <xs:element minOccurs="0" name="bundleId" type="xs:string"/>
          <xs:element minOccurs="0" name="startTimestamp" type="xs:string"/>
          <xs:element minOccurs="0" name="endTimestamp" type="xs:string"/>
          <xs:element minOccurs="0" name="totalTimeInMilliseconds" type="xs:string"/>
          <xs:element minOccurs="0" name="location" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="statusMessage">
        <xs:sequence>
          <xs:element name="statusMessageLevel" type="tns:statusMessageLevel"/>
          <xs:element name="messageType" type="xs:string"/>
          <xs:element name="statusMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="hopLocation" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="stackTrace" nillable="true" type="xs:string"/>
          <xs:element name="statusOrigin" type="xs:string"/>
          <xs:element minOccurs="0" name="vrcStatusGroup" nillable="true" type="tns:vrcStatusGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="vrcStatusGroup">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="statusContainerBeans" nillable="true" type="tns:vr1StatusContainer"/>
          <xs:element minOccurs="0" name="vr1_status_container_num_occ" type="xs:string"/>
          <xs:element minOccurs="0" name="vrc_status_generated_by" type="xs:string"/>
          <xs:element minOccurs="0" name="vrc_status_orig_channel" type="xs:string"/>
          <xs:element minOccurs="0" name="vrc_status_owned_by" type="xs:string"/>
          <xs:element minOccurs="0" name="vrc_status_service_name" type="xs:string"/>
          <xs:element minOccurs="0" name="vrc_status_service_version" type="xs:string"/>
          <xs:element minOccurs="0" name="vrc_status_system" type="xs:string"/>
          <xs:element minOccurs="0" name="vrc_status_transid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="vr1StatusContainer">
        <xs:sequence>
          <xs:element minOccurs="0" name="vr1_status_additional_info" type="xs:string"/>
          <xs:element minOccurs="0" name="vr1_status_code" type="xs:string"/>
          <xs:element minOccurs="0" name="vr1_status_code_desc" type="xs:string"/>
          <xs:element minOccurs="0" name="vr1_status_code_type_desc" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="logLevel">
        <xs:restriction base="xs:string">
          <xs:enumeration value="DEFAULT"/>
          <xs:enumeration value="TRACE"/>
          <xs:enumeration value="DEBUG"/>
          <xs:enumeration value="INFO"/>
          <xs:enumeration value="WARN"/>
          <xs:enumeration value="ERROR"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="serviceCallStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="SUCCESS"/>
          <xs:enumeration value="INFO"/>
          <xs:enumeration value="ERROR"/>
          <xs:enumeration value="EXCEPTION"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="statusMessageLevel">
        <xs:restriction base="xs:string">
          <xs:enumeration value="INFORMATIONAL"/>
          <xs:enumeration value="FAULT"/>
          <xs:enumeration value="EXCEPTION"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="invokeServiceResponse">
    <wsdl:part element="tns:invokeServiceResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="invokePingResponse">
    <wsdl:part element="tns:invokePingResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="invokePing">
    <wsdl:part element="tns:invokePing" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ServiceException">
    <wsdl:part element="tns:ServiceException" name="ServiceException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="invokeService">
    <wsdl:part element="tns:invokeService" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="SelectMemberClaimSummaryData">
    <wsdl:operation name="invokePing">
      <wsdl:input message="tns:invokePing" name="invokePing"></wsdl:input>
      <wsdl:output message="tns:invokePingResponse" name="invokePingResponse"></wsdl:output>
      <wsdl:fault message="tns:ServiceException" name="ServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="invokeService">
      <wsdl:input message="tns:invokeService" name="invokeService"></wsdl:input>
      <wsdl:output message="tns:invokeServiceResponse" name="invokeServiceResponse"></wsdl:output>
      <wsdl:fault message="tns:ServiceException" name="ServiceException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SelectMemberClaimSummaryDataServiceV5ServiceSoapBinding" type="tns:SelectMemberClaimSummaryData">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="invokePing">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="invokePing">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="invokePingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceException">
        <soap:fault name="ServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="invokeService">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="invokeService">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="invokeServiceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceException">
        <soap:fault name="ServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SelectMemberClaimSummaryDataServiceV5Service">
    <wsdl:port binding="tns:SelectMemberClaimSummaryDataServiceV5ServiceSoapBinding" name="SelectMemberClaimSummaryDataPort">
      <soap:address location="http://u3cbravo.uhc.com/upm3_gateway/upm3/claimshighway/SelectMemberClaimSummaryDataV5"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://u3cbravo.uhc.com/upm3_gateway/upm3/claimshighway/SelectMemberClaimSummaryDataV5</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="invokePing" bindingOperationName="invokePing" type="Request-Response" outputName="invokePingResponse" inputName="invokePing" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://u3cbravo.uhc.com/upm3_gateway/upm3/claimshighway/SelectMemberClaimSummaryDataV5</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://upm3.uhc.com/claimshighway/selectmemberclaimsummarydata/v5">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:invokePing>
         <!--Optional:-->
         <arg0>
            <requestHeader>
               <applicationName>?</applicationName>
               <applicationInstanceName>?</applicationInstanceName>
               <logLevel>?</logLevel>
               <!--Optional:-->
               <externalId>?</externalId>
               <!--Zero or more repetitions:-->
               <serviceOption>
                  <key>?</key>
                  <value>?</value>
               </serviceOption>
               <!--Optional:-->
               <internalUse>
                  <uid>?</uid>
                  <serviceName>?</serviceName>
                  <serviceVersion>?</serviceVersion>
                  <originalConsumer>?</originalConsumer>
                  <originalServiceName>?</originalServiceName>
                  <originalServiceVersion>?</originalServiceVersion>
                  <logSequence>?</logSequence>
                  <uidGeneratedBy>?</uidGeneratedBy>
               </internalUse>
            </requestHeader>
         </arg0>
      </v5:invokePing>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://upm3.uhc.com/claimshighway/selectmemberclaimsummarydata/v5/SelectMemberClaimSummaryData/invokePing"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="invokeService" bindingOperationName="invokeService" type="Request-Response" outputName="invokeServiceResponse" inputName="invokeService" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="CHWY_UNET" outgoingWss="test"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://uhgservicegateway-tst.uhc.com/uhgservices/alpha/upm3/claimshighway/SelectMemberClaimSummaryDataV5</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://upm3.uhc.com/claimshighway/selectmemberclaimsummarydata/v5">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:invokeService>
         <!--Optional:-->
         <arg0>
            <requestHeader>
               <applicationName>PTRCR</applicationName>
               <applicationInstanceName>PTRCR</applicationInstanceName>
               <logLevel>DEBUG</logLevel>
               <!--Optional:-->
               <externalId></externalId>
               <!--Zero or more repetitions:-->
               <serviceOption>
                  <key></key>
                  <value></value>
               </serviceOption>
               <!--Optional:-->
               <internalUse>
                  <uid></uid>
                  <serviceName></serviceName>
                  <serviceVersion></serviceVersion>
                  <originalConsumer></originalConsumer>
                  <originalServiceName></originalServiceName>
                  <originalServiceVersion></originalServiceVersion>
                  <logSequence></logSequence>
                  <uidGeneratedBy></uidGeneratedBy>
               </internalUse>
            </requestHeader>
            <!--Optional:-->
            <controlModifiers>
               <!--Optional:-->
               <claimsHighwaySystemParameter>
                  <!--Optional:-->
                  <applicationID>PTRCR</applicationID>
               </claimsHighwaySystemParameter>
            </controlModifiers>
            <!--Optional:-->
            <searchType>CLAIM NUMBER</searchType>
            <!--Optional:-->
            <mpin>002057390</mpin>
            <!--Optional:-->
            <claimSourceID>01</claimSourceID>
            <!--Optional:-->
            <tin>030476360</tin>
            <!--Optional:-->
            <npiId></npiId>
            <!--Optional:-->
            <policyNumber></policyNumber>
            <!--Optional:-->
            <employeeId></employeeId>
            <!--Optional:-->
            <caeClaimNumber>1003730680</caeClaimNumber>
            <!--Optional:-->
            <patientFirstName></patientFirstName>
            <!--Optional:-->
            <patientDateOfBirth></patientDateOfBirth>
            <!--Optional:-->
            <claimFirstDate></claimFirstDate>
            <!--Optional:-->
            <claimLastDate></claimLastDate>
            <!--Optional:-->
            <dateType></dateType>
            <!--Optional:-->
            <claimStatus></claimStatus>
            <!--Optional:-->
            <submittedChargeAmount></submittedChargeAmount>
            <!--Optional:-->
            <cosmosDivisionCode></cosmosDivisionCode>
            <!--Optional:-->
            <phsCompanyNumber></phsCompanyNumber>
            <!--Optional:-->
            <reconTrackingNumber></reconTrackingNumber>
            <!--Optional:-->
            <suffixCode></suffixCode>
            <!--Optional:-->
            <pagingState>
               <!--Optional:-->
               <moreData>false</moreData>
               <!--Optional:-->
               <nextClaimFirstDate></nextClaimFirstDate>
               <!--Optional:-->
               <nextClaimLastDate></nextClaimLastDate>
               <!--Optional:-->
               <nextICN></nextICN>
               <!--Optional:-->
               <nextICNType></nextICNType>
               <!--Optional:-->
               <nextSingleDate></nextSingleDate>
            </pagingState>
         </arg0>
      </v5:invokeService>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://upm3.uhc.com/claimshighway/selectmemberclaimsummarydata/v5/SelectMemberClaimSummaryData/invokeService"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="GetUUIDDetails" type="rest" basePath="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://cloudservicegateway-stg.optum.com:4460</con:endpoint></con:endpoints><con:resource name="GetUUIDResource" path="/test2/healthapi/user/esso-rest/user/v1/"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:method name="GETMethod" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="https://cloudservicegateway-stg.optum.com/test2/healthapi/user/esso-rest/user/v1/">v1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="https://cloudservicegateway-stg.optum.com/test2/healthapi/user/esso-rest/user/v1/">v1:Fault</con:element></con:representation><con:request name="GetUUIDRequest" mediaType="application/json" sslKeystore="odin-keystore.jks"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://cloudservicegateway-stg.optum.com:4460</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="test0005" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="OptumRallyAPI" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://api-stg.optum.com:8443</con:endpoint></con:endpoints><con:resource name="BiometricsResource" path="/stage/phr/biometrics/v1.0"><con:settings/><con:parameters/><con:method name="POSTMethod" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="https://api-stg.optum.com/stage/phr/biometrics/v1.0">v1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Biometrics" mediaType="application/json" postQueryString="false" sslKeystore="optumservicesApi2015new.jks"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api-stg.optum.com:8443</con:endpoint><con:request>{
   "consumerApplicationName": "RALLY",
   "ownerIdSet": {"personId": "20644244"},
   "type": "0",
   "startDate": "2014-12-10T00:00:00Z",
   "endDate": "2015-04-13T23:59:59Z",
   "page": "1",
   "itemsPerPage": "10"
}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="ConditionsResource" path="/stage/phr/conditions/v1.0"><con:settings/><con:parameters/><con:method name="POSTMethod" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="https://api-stg.optum.com/stage/phr/biometrics/v1.0">v1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Conditions" mediaType="application/json" postQueryString="false" sslKeystore="optumservicesApi2015new.jks"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api-stg.optum.com:8443</con:endpoint><con:request>{
   "consumerApplicationName": "RALLY",
   "ownerIdSet": {"personId": "20644244"},
   "type": "0",
   "startDate": "2014-12-10T00:00:00Z",
   "endDate": "2015-04-13T23:59:59Z",
   "page": "1",
   "itemsPerPage": "10"
}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="MedicationsResource" path="/stage/phr/medications/v1.0"><con:settings/><con:parameters/><con:method name="POSTMethod" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="https://api-stg.optum.com/stage/phr/biometrics/v1.0">v1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Medications" mediaType="application/json" postQueryString="false" sslKeystore="optumservicesApi2015new.jks"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api-stg.optum.com:8443</con:endpoint><con:request>{
   "consumerApplicationName": "RALLY",
   "ownerIdSet": {"personId": "20644244"},
   "type": "0",
   "startDate": "2014-12-10T00:00:00Z",
   "endDate": "2015-04-13T23:59:59Z",
   "page": "1",
   "itemsPerPage": "10"
}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="SurgeryProceduresResource" path="/stage/phr/surgeryprocedures/v1.0"><con:settings/><con:parameters/><con:method name="POSTMethod" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="https://api-stg.optum.com/stage/phr/biometrics/v1.0">v1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="SurgeryProcedures" mediaType="application/json" postQueryString="false" sslKeystore="optumservicesApi2015new.jks"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api-stg.optum.com:8443</con:endpoint><con:request>{
   "consumerApplicationName": "RALLY",
   "ownerIdSet": {"personId": "20644244"},
   "type": "0",
   "startDate": "2014-12-10T00:00:00Z",
   "endDate": "2015-04-13T23:59:59Z",
   "page": "1",
   "itemsPerPage": "10"
}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="ProvidersResource" path="/stage/phr/providers/v1.0"><con:settings/><con:parameters/><con:method name="POSTMethod" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="https://api-stg.optum.com/stage/phr/biometrics/v1.0">v1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Providers" mediaType="application/json" postQueryString="false" sslKeystore="optumservicesApi2015new.jks"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api-stg.optum.com:8443</con:endpoint><con:request>{
   "consumerApplicationName": "RALLY",
   "ownerIdSet": {"personId": "20644244"},
   "type": "0",
   "startDate": "2014-12-10T00:00:00Z",
   "endDate": "2015-04-13T23:59:59Z",
   "page": "1",
   "itemsPerPage": "10"
}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PregnanciesResource" path="/stage/phr/pregnancies/v1.0"><con:settings/><con:parameters/><con:method name="POSTMethod" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="https://api-stg.optum.com/stage/phr/biometrics/v1.0">v1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Pregnancies" mediaType="application/json" postQueryString="false" sslKeystore="optumservicesApi2015new.jks"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api-stg.optum.com:8443</con:endpoint><con:request>{
   "consumerApplicationName": "RALLY",
   "ownerIdSet": {"personId": "20644244"},
   "type": "0",
   "startDate": "2014-12-10T00:00:00Z",
   "endDate": "2015-04-13T23:59:59Z",
   "page": "1",
   "itemsPerPage": "10"
}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="AllergiesResource" path="/stage/phr/allergies/v1.0"><con:settings/><con:parameters/><con:method name="POSTMethod" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="https://api-stg.optum.com/stage/phr/biometrics/v1.0">v1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Allergies" mediaType="application/json" postQueryString="false" sslKeystore="optumservicesApi2015new.jks"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api-stg.optum.com:8443</con:endpoint><con:request>{
   "consumerApplicationName": "RALLY",
   "ownerIdSet": {"personId": "20644244"},
   "type": "0",
   "startDate": "2014-12-10T00:00:00Z",
   "endDate": "2015-04-13T23:59:59Z",
   "page": "1",
   "itemsPerPage": "10"
}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="EligibilityResource" path="/stage/eligibility/wellness/v1.0"><con:settings/><con:parameters/><con:method name="POSTMethod" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="https://api-stg.optum.com/stage/phr/biometrics/v1.0">v1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Eligibility" mediaType="application/json" postQueryString="false" sslKeystore="optumservicesApi2015new.jks"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api-stg.optum.com:8443</con:endpoint><con:request>{
   "consumerApplicationName": "RALLY",
   "ownerIdSet": {"personId": "20644244"},
   "type": "0",
   "startDate": "2014-12-10T00:00:00Z",
   "endDate": "2015-04-13T23:59:59Z",
   "page": "1",
   "itemsPerPage": "10"
}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ConsumerServiceExport_ConsumerServiceHttpBinding" type="wsdl" bindingName="{http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00/Binding}ConsumerServiceExport_ConsumerServiceHttpBinding" soapVersion="1_2" anonymous="optional" definition="https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/wsdl/ConsumerServiceMediation_ConsumerServiceExport.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/wsdl/ConsumerServiceMediation_ConsumerServiceExport.wsdl"><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/wsdl/ConsumerServiceMediation_ConsumerServiceExport.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="ConsumerServiceExport_ConsumerServiceHttp_Service" targetNamespace="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00/Binding" xmlns:Port_0="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:this="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00/Binding" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
  <wsdl:import namespace="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00" location="ConsumerService.wsdl"></wsdl:import>
  <wsdl:binding name="ConsumerServiceExport_ConsumerServiceHttpBinding" type="Port_0:ConsumerService">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="findConsumer">
      <soap12:operation soapAction="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00/ConsumerService/findConsumer"/>
      <wsdl:input name="findConsumerRequest">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findConsumerResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ConsumerServiceExport_ConsumerServiceHttpService">
    <wsdl:port name="ConsumerServiceExport_ConsumerServiceHttpPort" binding="this:ConsumerServiceExport_ConsumerServiceHttpBinding">
      <soap12:address location="https://soe-wesb-tst:9446/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/wsdl/ConsumerService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="ConsumerService" targetNamespace="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00" xmlns:bons1="http://usf.uhc.com/schema/2009/05/01/common">
  <wsdl:types>
    <xsd:schema targetNamespace="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00">
      <xsd:import namespace="http://usf.uhc.com/schema/2009/05/01/common" schemaLocation="../schema/UnmodeledFault.xsd"/>
      <xsd:include schemaLocation="../service/ConsumerService.xsd"/>
      <xsd:element name="findConsumer">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="findConsumerRequest" nillable="true" type="tns:FindConsumerRequestType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findConsumerResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="findConsumerResponse" nillable="true" type="tns:FindConsumerResponseType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findConsumerFault1_fault" nillable="true" type="bons1:UnmodeledFault"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="findConsumerRequestMsg">
    <wsdl:part name="findConsumerParameters" element="tns:findConsumer"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findConsumer_faultMsg">
    <wsdl:part name="fault" element="tns:findConsumerFault1_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findConsumerResponseMsg">
    <wsdl:part name="findConsumerResult" element="tns:findConsumerResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ConsumerService">
    <wsdl:operation name="findConsumer">
      <wsdl:input name="findConsumerRequest" message="tns:findConsumerRequestMsg"></wsdl:input>
      <wsdl:output name="findConsumerResponse" message="tns:findConsumerResponseMsg"></wsdl:output>
      <wsdl:fault name="fault" message="tns:findConsumer_faultMsg"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/schema/UnmodeledFault.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://usf.uhc.com/schema/2009/05/01/common" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://usf.uhc.com/schema/2009/05/01/common">
  <xsd:complexType name="UnmodeledFault">
    <xsd:sequence>
      <xsd:element name="FaultCode" type="xsd:string"/>
      <xsd:element name="FaultMessage" type="xsd:string"/>
      <xsd:element name="FaultActor" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Detail" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Origin" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/service/ConsumerService.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00" version="1.0.0" xmlns:bons0="http://ConsumerServiceMediation/service" xmlns:consvc="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00" xmlns:demo="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" xmlns:msgresp="http://enterprise.unitedhealthgroup.com/schema/message/messageresponse/v4_00" xmlns:ovbill="http://ovations.unitedhealthgroup.com/schema/ovations/billing/v2_10" xmlns:ovcons="http://ovations.unitedhealthgroup.com/schema/ovations/consumer/v2_10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:bons1="http://ovations.unitedhealthgroup.com/schema/ovations/account/v2_10">
  <xs:import schemaLocation="../ovations/ovations_account.xsd" namespace="http://ovations.unitedhealthgroup.com/schema/ovations/account/v2_10"></xs:import>
  <xs:include schemaLocation="ConsumerSearchList.xsd"/>
  <xs:import namespace="http://ConsumerServiceMediation/service" schemaLocation="ControlModifier.xsd"></xs:import>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/message/messageresponse/v4_00" schemaLocation="../ovations/response/messageresponse.xsd"/>
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/consumer/v2_10" schemaLocation="../ovations/ovations_consumer.xsd"/>
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/billing/v2_10" schemaLocation="../ovations/ovations_billing.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" schemaLocation="../canonical/demographic.xsd"/>
  <xs:complexType name="FindConsumerRequestType">
    <xs:sequence>
      <xs:element minOccurs="0" name="SocialSecurityNbr" nillable="true" type="demo:SocialSecurityNumberType"/>
      <xs:element minOccurs="0" name="MedicareClaimNumber" nillable="true" type="demo:MedicareClaimNumberType"/>
      <xs:element minOccurs="0" name="FirstName" nillable="true" type="demo:PersonNamePartType"/>
      <xs:element minOccurs="0" name="LastName" nillable="true" type="demo:PersonNamePartType"/>
      <xs:element minOccurs="0" name="DateOfBirth" nillable="true" type="xs:date"/>
      <xs:element minOccurs="0" name="ContactTypeCode" nillable="true" type="demo:ContactTypeCodeType"/>
      <xs:element minOccurs="0" name="Area" nillable="true" type="demo:PhoneAreaCodeType"/>
      <xs:element minOccurs="0" name="Subscriber" nillable="true" type="demo:PhoneSubscriberNumberType"/>
      <xs:element minOccurs="0" name="Extension" nillable="true" type="demo:PhoneExtensionNumberType"/>
      <xs:element minOccurs="0" name="StateCode" nillable="true" type="demo:USStateTerritoryCodeType"/>
      <xs:element minOccurs="0" name="Zip5" nillable="true">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\d{5}"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="Zip4" nillable="true">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\d{4}"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="FirstNameSoundex" nillable="true" type="xs:boolean"/>
      <xs:element minOccurs="0" name="LastNameSoundex" nillable="true" type="xs:boolean"/>
      <xs:element minOccurs="0" name="RoutingNumber" nillable="true" type="ovbill:RoutingNumberType"/>
      <xs:element minOccurs="0" name="AccountNumber" nillable="true" type="ovbill:AccountNumberType"/>
      <xs:element maxOccurs="2" minOccurs="1" name="ControlModifier" type="bons0:ControlModifier"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="FindConsumerResponseType">
    <xs:complexContent mixed="false">
      <xs:extension base="msgresp:messageResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="Consumer" nillable="true" type="consvc:ConsumerSearchList"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ExtendedOvationsConsumerPersonProfileType">
    <xs:annotation>
      <xs:documentation>Structure Element to define Ovations Consumer Person
  			Profile Details</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="ovcons:OvationsConsumerPersonProfileType">
        <xs:sequence>
          <xs:element minOccurs="0" name="AccountID" nillable="true" type="bons1:AccountIDType"/>
          <xs:element minOccurs="0" name="IndividualID" nillable="true" type="bons1:IndividualIDType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/ovations/ovations_account.xsd</con:url><con:content><![CDATA[<!--edited with XMLSPY v5 rel. 4 U (http://www.xmlspy.com) by Kurt Fattig (United HealthCare)-->
<!--edited with XMLSpy v2010 rel. 2 (http://www.altova.com) by Ramanujan
		Gopalan (UNITED HEALTHGROUP)-->
<xs:schema targetNamespace="http://ovations.unitedhealthgroup.com/schema/ovations/account/v2_10" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.1.0" xmlns:cons="http://enterprise.unitedhealthgroup.com/schema/canoncial/consumer/v4_03" xmlns:demo="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://ovations.unitedhealthgroup.com/schema/ovations/account/v2_10">
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/consumer/v4_03" schemaLocation="../canonical/consumer.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" schemaLocation="../canonical/demographic.xsd"/>
  <xs:complexType name="OvationConsumerAccountType">
    <xs:annotation>
      <xs:documentation>Consumer Account details</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="IndividualID" type="IndividualIDType" nillable="true" minOccurs="0"/>
      <xs:element name="AccountID" type="AccountIDType" nillable="true" minOccurs="0"/>
      <xs:element name="UpdateAction" type="UpdateActionType" nillable="true" minOccurs="0"/>
      <xs:sequence>
        <xs:element name="ContactMechanism" nillable="true" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Address" type="demo:AddressType" nillable="true" minOccurs="0"/>
              <xs:element name="Phone" type="demo:PhoneType" nillable="true" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:element name="MemberNo" type="cons:ConsumerIDType" nillable="true" minOccurs="0"/>
      <xs:element name="AssociationCode" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="SpecialHandling" type="SpecialHandlingType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="IndividualIDType">
    <xs:annotation>
      <xs:documentation>Individual ID pertaining to specific
				system like GPS, Compas etc.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="50"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AccountIDType">
    <xs:annotation>
      <xs:documentation>Account ID same as HouseHold Id</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="50"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UpdateActionType">
    <xs:annotation>
      <xs:documentation>UpdateAddress - 1, UpdateMemberNumber - 2, UpdateCondition - 3 , This field will be used by Compas</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:integer">
      <xs:minInclusive value="1"/>
      <xs:maxExclusive value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="SpecialHandlingType">
    <xs:sequence>
      <xs:element name="SpecialHandlingTypeID" type="xs:string" minOccurs="0"/>
      <xs:element name="SpecialHandlingFlag" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/canonical/consumer.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/consumer/v4_03" elementFormDefault="qualified" attributeFormDefault="unqualified" version="4.0.3" xmlns="http://enterprise.unitedhealthgroup.com/schema/canoncial/consumer/v4_03" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:common="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" xmlns:demo="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03">
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" schemaLocation="common.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" schemaLocation="demographic.xsd"/>
  <xs:simpleType name="ConsumerRoleTypeCodeType">
    <xs:annotation>
      <xs:documentation>These are the possible role types for a Consumer. Example, Member, Prospect, Individual Consumer, Employee, Contact, Subscriber, etc.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="EnterpriseConsumerIDType">
    <xs:annotation>
      <xs:documentation>Enterprise Consumer Identifier</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ConsumerIDType"/>
  </xs:simpleType>
  <xs:simpleType name="ConsumerIDType">
    <xs:annotation>
      <xs:documentation>Consumer Identifier</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:complexType name="ConsumerPersonProfileType">
    <xs:annotation>
      <xs:documentation>Element contains all Consumer Identification and Contact Information</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ConsumerEnterpriseID" type="EnterpriseConsumerIDType" nillable="true" minOccurs="0"/>
      <xs:element name="ConsumerPerson" type="ConsumerPersonType" nillable="true" minOccurs="0"/>
      <xs:element name="ConsumerRole" type="ConsumerRole" nillable="true" minOccurs="0" maxOccurs="5"/>
      <xs:element name="ConsumerEligibleRelationship" type="ConsumerRelationship" nillable="true" minOccurs="0" maxOccurs="5"/>
      <xs:element name="ConsumerPreference" type="ConsumerContactPreferenceType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Consumer">
    <xs:annotation>
      <xs:documentation>A CONSUMER is a person who may obtain health service products from UnitedHealth Group (UHG) through another person, a subscriber, and who is identified by their relationship with that subscriber; or a person who may purchase health service products coverage directly from UHG</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ConsumerPersonProfile" type="ConsumerPersonProfileType" nillable="true" minOccurs="0" maxOccurs="10"/>
        <xs:element name="ConsumerHealthProfile" type="HealthProfileType" nillable="true" minOccurs="0" maxOccurs="10"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="ConsumerRelationshipTypeCodeType">
    <xs:annotation>
      <xs:documentation>Defines Consumer Relationship Type, e.g. Familiy, Employement, etc</xs:documentation>
    </xs:annotation>
    <xs:restriction base="common:CodeDomainType"/>
  </xs:simpleType>
  <xs:complexType name="ConsumerPersonType">
    <xs:annotation>
      <xs:documentation>Structure Element to define Consumer Person Details includes Consumer Person Details as well as Medicare and Medicaid details</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ConsumerPersonDetail">
        <xs:annotation>
          <xs:documentation>Consumer Person Details</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="demo:ExtendedPersonType">
              <xs:sequence>
                <xs:element name="HospiceInd" type="xs:string" nillable="true" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>Indicates HOSPICE</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="HospiceEffDate" type="common:EffDateRangeType" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>Hospice Effective Dates</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="InstitutionalNHCInd" type="xs:string" nillable="true" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>Institutional NHC Indicator</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="InstitutionalNhcEffDate" type="common:EffDateRangeType" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>Institutional NHC Effective Dates</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="ESRDInd" type="xs:string" nillable="true" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>ESRD Indicator</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="ERSDEffDate" type="common:EffDateRangeType" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>ERSD Effective Dates</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="EmployerGroupHealthPlanInd" type="demo:ActiveIndType" nillable="true" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>Employer Group Health Plan Indicator</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="UncoveredMonths" type="UncoveredMonthsType" nillable="true" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>Uncovered Months</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="Subsidy" type="ConsumerSubsidyType" nillable="true" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>Subsidy</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="RetireeInfo" type="RetireeInfoType" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>Retiree Information</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="EffectiveDates" type="common:DateRangeType" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>Effective Dates</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="ConsumerMedicareDetail" nillable="true" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Consumer Medicare Details</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="MedicarePartDetailType">
              <xs:sequence>
                <xs:element name="AutomatedClaimFilingInd" type="xs:boolean" nillable="true" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>Automated Claim Filing Indicator</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="MedicareHistory" type="MedicarePartDetailType" minOccurs="0" maxOccurs="10"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="ConsumerMedicaidDetail" nillable="true" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Consumer Medicaid Details</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="demo:MedicaidIDStateValuePairType">
              <xs:sequence>
                <xs:element name="MedicaidLevel" type="xs:string" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>Medicaid Level specifies whether Coverage is Full or Partial</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="MedicaidEffDate" type="common:DateRangeType" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>Medicaid Effective Dates</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ConsumerRelationship">
    <xs:annotation>
      <xs:documentation>Defines Consumer Relationship with Effective Dates; DO NOT USE THIS IS WORK IN PROGRESS</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ConsumerRelationshipType" type="ConsumerRelationshipTypeCodeType"/>
      <xs:element name="ConsumerRelationshipEffectiveDate" type="common:DateRangeType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ConsumerRole">
    <xs:annotation>
      <xs:documentation>Defines Consumer Role with Effective Dates; DO NOT USE THIS IS WORK IN PROGRESS</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ConsumerRoleType" type="ConsumerRoleTypeCodeType"/>
      <xs:element name="ConsumerRoleEffectiveDate" type="common:DateRangeType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="HealthProfileType">
    <xs:annotation>
      <xs:documentation>Structured health Profile details; DO NOT USE THIS IS WORK IN PROGRESS</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="ConsumerContactPreferenceType">
    <xs:annotation>
      <xs:documentation>Structured Consumer Contact Preferences include Contact Mechanism, Language Preference, Correspondance Preference, etc</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ContactPreference" type="demo:PersonContactPreferenceType" nillable="true" minOccurs="0"/>
      <xs:element name="ContactMechanism" type="demo:ContactInfoType" nillable="true" minOccurs="0"/>
      <xs:element name="AutoEnrollmentOptOutInd" type="xs:boolean" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MedicarePartDetailType">
    <xs:annotation>
      <xs:documentation>Structured Medicare Eligibility Part Type includes Effective Dates and Part Type Code</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="MedicareClaimNumber" type="demo:MedicareClaimNumberType" nillable="true" minOccurs="0"/>
      <xs:element name="MedicarePartDOptInFlag" type="MedicarePartDOptInFlag" nillable="true" minOccurs="0"/>
      <xs:element name="MedicareEligibility" type="MedicareEligibility" nillable="true" minOccurs="0" maxOccurs="10"/>
      <xs:element name="InstitutionalizedInd" type="demo:ActiveIndType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="MedicareEligibilityPartCodeType">
    <xs:annotation>
      <xs:documentation>Codes Examples: A = Medicare eligible due to age; G = Medicare eligible due to disability; D = Medicare eligible due to disability but actively at work; B = Medicare eligible due to ESRD; U = CES Default value - Reason for Medicare eligibility unknown</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:length value="1"/>
      <xs:enumeration value="A"/>
      <xs:enumeration value="B"/>
      <xs:enumeration value="D"/>
      <xs:enumeration value="G"/>
      <xs:enumeration value="U"/>
      <xs:enumeration value="C"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MedicarePartDOptInFlag">
    <xs:annotation>
      <xs:documentation>Element to represent Consumer's Preference to Opt In or Opt Out of Medicare Part D Enrollment. Y - Opted In, N - Opted Out</xs:documentation>
    </xs:annotation>
    <xs:restriction base="demo:OptInIndType"/>
  </xs:simpleType>
  <xs:complexType name="MedicareEligibility">
    <xs:sequence>
      <xs:element name="MedicareEligibilityPart" type="MedicareEligibilityPartCodeType" nillable="true" minOccurs="0"/>
      <xs:element name="MedicareEligPartEffectiveDate" type="common:DateRangeType" nillable="true" minOccurs="0"/>
      <xs:element name="ActiveFlag" type="demo:ActiveIndType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UncoveredMonthsType">
    <xs:annotation>
      <xs:documentation>Uncovered Months</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="CalculatedUncoveredMonths" type="CalculatedUncoveredMonthsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Calculated Uncovered Months</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PotentialUncoveredMonths" type="PotentialUncoveredMonthsType" minOccurs="0" maxOccurs="20">
        <xs:annotation>
          <xs:documentation>Potential Uncovered Months</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CalculatedUncoveredMonthsType">
    <xs:annotation>
      <xs:documentation>Calculated Uncovered Months</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="NumberOfMonths" type="xs:int" minOccurs="0"/>
      <xs:element name="StartYearMonth" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PotentialUncoveredMonthsType">
    <xs:annotation>
      <xs:documentation>Potential Uncovered Months</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="UncoveredMonthsInd" type="xs:string" minOccurs="0"/>
      <xs:element name="NumberOfMonths" type="xs:int" minOccurs="0"/>
      <xs:element name="TotalNumberOfMonths" type="xs:int" minOccurs="0"/>
      <xs:element name="StartDate" type="xs:date" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ConsumerSubsidyType">
    <xs:annotation>
      <xs:documentation>Consumer Subsidy</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="LowIncomeSubsidy" type="SubsidyType" minOccurs="0" maxOccurs="2"/>
      <xs:element name="RetireeSubsidyHistory" type="SubsidyType" minOccurs="0" maxOccurs="10"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SubsidyType">
    <xs:annotation>
      <xs:documentation>Subsidy</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="SubsidyEffectiveDates" type="common:DateRangeType" minOccurs="0"/>
      <xs:element name="CopayLevel" type="xs:string" minOccurs="0"/>
      <xs:element name="PartDPremiumSubsidyPct" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="RetireeSimpleType">
    <xs:annotation>
      <xs:documentation>RetireeSimpleType</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:complexType name="RetireeInfoType">
    <xs:annotation>
      <xs:documentation>Retiree Information</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="EmployerAccountIDType" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="RetireeType" type="RetireeSimpleType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/canonical/common.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2010 rel. 3 (http://www.altova.com) by Aditya Mehta (UNITED HEALTHGROUP)-->
<xs:schema targetNamespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" elementFormDefault="qualified" attributeFormDefault="unqualified" version="4.0.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:common="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" xmlns:stds="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/standards/v4_00">
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/standards/v4_00" schemaLocation="standards.xsd"/>
  <xs:complexType name="AnyType">
    <xs:annotation>
      <xs:documentation>Constrains processing of xs:any, for use where you want to allow extensions via generic content.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##any" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NameValuePairType">
    <xs:annotation>
      <xs:documentation>A name-value pair, using common:AnyType to allow the value to be any XML type.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="Value" type="xs:anyType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="DayOfWeekType">
    <xs:annotation>
      <xs:documentation>Days of Week Type Code</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SUN"/>
      <xs:enumeration value="MON"/>
      <xs:enumeration value="TUE"/>
      <xs:enumeration value="WED"/>
      <xs:enumeration value="THU"/>
      <xs:enumeration value="FRI"/>
      <xs:enumeration value="SAT"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MonthType">
    <xs:annotation>
      <xs:documentation>Months Type Code</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="JAN"/>
      <xs:enumeration value="FEB"/>
      <xs:enumeration value="MAR"/>
      <xs:enumeration value="APR"/>
      <xs:enumeration value="MAY"/>
      <xs:enumeration value="JUN"/>
      <xs:enumeration value="JUL"/>
      <xs:enumeration value="AUG"/>
      <xs:enumeration value="SEP"/>
      <xs:enumeration value="OCT"/>
      <xs:enumeration value="NOV"/>
      <xs:enumeration value="DEC"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MapCoordinateType">
    <xs:annotation>
      <xs:documentation>A latitude or longitude</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="-?\d{1,3}(\.\d{1,6})?"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="HoursOfOperationType">
    <xs:annotation>
      <xs:documentation>Hours of operation for a day.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Day" type="common:DayOfWeekType"/>
      <xs:element name="Time" type="xs:string" nillable="true" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If the hours are not available as a discrete time range, put it in this free-form field.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TimeRange" type="common:TimeRangeType" nillable="true" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Begin and end times.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LatLongType">
    <xs:annotation>
      <xs:documentation>Latitude and longitude.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Lat" type="common:MapCoordinateType"/>
      <xs:element name="Long" type="common:MapCoordinateType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="DistanceType">
    <xs:annotation>
      <xs:documentation>Distance, typically miles.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:decimal">
      <xs:minInclusive value="0.00"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="GeoAccuracyType">
    <xs:annotation>
      <xs:documentation>Accuracy of a geocode.
            COUNTRY = 1;
            REGION = 2;
            SUB_REGION = 3;
            TOWN = 4;
            ZIP_CODE = 5;
            STREET = 6;
            INTERSECTION = 7;
            ADDRESS = 8;                        
            PREMISE = 9;</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:positiveInteger">
      <xs:minInclusive value="1"/>
      <xs:maxInclusive value="9"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="GeoClassificationType">
    <xs:annotation>
      <xs:documentation>Classification of area density.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="URBAN"/>
      <xs:enumeration value="SUBURBAN"/>
      <xs:enumeration value="RURAL"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="DateRangeType">
    <xs:annotation>
      <xs:documentation>A range of dates.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="StartDate" type="xs:date"/>
      <xs:element name="StopDate" type="xs:date" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PositiveIntegerRangeType">
    <xs:annotation>
      <xs:documentation>A range of integers.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Min" type="xs:positiveInteger" nillable="true" minOccurs="0"/>
      <xs:element name="Max" type="xs:positiveInteger" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NonNegativeIntegerRangeType">
    <xs:annotation>
      <xs:documentation>A range of non negative integers.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Min" type="xs:nonNegativeInteger" nillable="true" minOccurs="0"/>
      <xs:element name="Max" type="xs:nonNegativeInteger" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TimeRangeType">
    <xs:annotation>
      <xs:documentation>A range of times.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="StartTime" type="xs:time"/>
      <xs:element name="EndTime" type="xs:time"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="CodeNameType">
    <xs:annotation>
      <xs:documentation>For use in generic code lookup services as the primary code name, e.g. "county" or "language".</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="100"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CodeDomainType">
    <xs:annotation>
      <xs:documentation>For use in generic code lookup services that need to quality the code name with a domain, e.g. "provider" or "claims".</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="100"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CodeEntityType">
    <xs:annotation>
      <xs:documentation>For use in generic code lookup services that need qualify the code name with an entity, e.g. "person" or "facility".</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="100"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="CodeName" type="common:CodeNameType">
    <xs:annotation>
      <xs:documentation>For use in generic code lookup services as the primary code name, e.g. "county" or "language".  Overridable via substitution group.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="CodeDomain" type="common:CodeDomainType">
    <xs:annotation>
      <xs:documentation>For use in generic code lookup services that need to quality the code name with a domain, e.g. "provider" or "claims".  Overridable via substitution group.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="CodeEntity" type="common:CodeEntityType">
    <xs:annotation>
      <xs:documentation>For use in generic code lookup services that need qualify the code name with an entity, e.g. "person" or "facility".  Overridable via substitution group.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:simpleType name="AmountValueType">
    <xs:annotation>
      <xs:documentation>Simple Type Element to cover Amount Value Elements</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:decimal"/>
  </xs:simpleType>
  <xs:complexType name="AmountType">
    <xs:annotation>
      <xs:documentation>Standard Structure for Amount Type elements, includes ISO Currency Codes</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="AmountValue" type="common:AmountValueType"/>
      <xs:element name="CurrencyType" type="stds:ISOCurrencyType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EffDateRangeType">
    <xs:annotation>
      <xs:documentation>Combination of Effective Start and Cancel Date, similar to DateRangeType.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="EffStartDate" type="xs:date" minOccurs="0">
        <xs:annotation>
          <xs:documentation>This is the Effective Start date for an aggrement or arrangement or Contract or Service</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EffCancelDate" type="xs:date" minOccurs="0">
        <xs:annotation>
          <xs:documentation>This is the Effective End date or Cancel Date for an aggrement or arrangement or Contract or Service</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/canonical/standards.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2010 rel. 3 (http://www.altova.com) by Aditya Mehta (UNITED HEALTHGROUP)-->
<!--created with XMLSpy v2010 rel. 3 (http://www.altova.com) by Aditya Mehta (UNITED HEALTHGROUP)-->
<xs:schema targetNamespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/standards/v4_00" elementFormDefault="qualified" attributeFormDefault="unqualified" version="4.0.0" xmlns:stds="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/standards/v4_00" xmlns:common="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="CurrencyCodeAlpha3Type">
    <xs:annotation>
      <xs:documentation>The ISO 4217 currency code is composed of the country's two-character ISO 3166 country code plus an extra character to denote the currency unit. For example, the code for Canadian Dollars is simply Canada's two-character ISO 3166 code ("CA") plus a one-character currency designator ("D").</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ADP">
        <xs:annotation>
          <xs:documentation>Andorran Peseta</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AED">
        <xs:annotation>
          <xs:documentation>UAE Dirham</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AFA">
        <xs:annotation>
          <xs:documentation>Afghani</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ALL">
        <xs:annotation>
          <xs:documentation>Lek</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AMD">
        <xs:annotation>
          <xs:documentation>Armenian Dram</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ANG">
        <xs:annotation>
          <xs:documentation>Netherlands Antillian Guilder</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AOA">
        <xs:annotation>
          <xs:documentation>Kwanza</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ARS">
        <xs:annotation>
          <xs:documentation>Argentine Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ATS">
        <xs:annotation>
          <xs:documentation>Schilling</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AUD">
        <xs:annotation>
          <xs:documentation>Australian Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AWG">
        <xs:annotation>
          <xs:documentation>Aruban Guilder</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AZM">
        <xs:annotation>
          <xs:documentation>Azerbaijanian Manat</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BAM">
        <xs:annotation>
          <xs:documentation>Convertible Marks</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BBD">
        <xs:annotation>
          <xs:documentation>Barbados Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BDT">
        <xs:annotation>
          <xs:documentation>Taka</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BEF">
        <xs:annotation>
          <xs:documentation>Belgian Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BGL">
        <xs:annotation>
          <xs:documentation>Lev</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BGN">
        <xs:annotation>
          <xs:documentation>Bulgarian Lev</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BHD">
        <xs:annotation>
          <xs:documentation>Bahraini Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BIF">
        <xs:annotation>
          <xs:documentation>Burundi Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BMD">
        <xs:annotation>
          <xs:documentation>Bermudian Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BND">
        <xs:annotation>
          <xs:documentation>Brunei Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BOB">
        <xs:annotation>
          <xs:documentation>Boliviano</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BOV">
        <xs:annotation>
          <xs:documentation>Mvdol</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BRL">
        <xs:annotation>
          <xs:documentation>Brazilian Real</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BSD">
        <xs:annotation>
          <xs:documentation>Bahamian Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BTN">
        <xs:annotation>
          <xs:documentation>Ngultrum</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BWP">
        <xs:annotation>
          <xs:documentation>Pula</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BYB">
        <xs:annotation>
          <xs:documentation>Belarussian Ruble</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BYR">
        <xs:annotation>
          <xs:documentation>Belarussian Ruble</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BZD">
        <xs:annotation>
          <xs:documentation>Belize Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CAD">
        <xs:annotation>
          <xs:documentation>Canadian Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CDF">
        <xs:annotation>
          <xs:documentation>Franc Congolais</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CHF">
        <xs:annotation>
          <xs:documentation>Swiss Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CLF">
        <xs:annotation>
          <xs:documentation>Unidades de fomento</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CLP">
        <xs:annotation>
          <xs:documentation>Chilean Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CNY">
        <xs:annotation>
          <xs:documentation>Yuan Renminbi</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="COP">
        <xs:annotation>
          <xs:documentation>Colombian Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CRC">
        <xs:annotation>
          <xs:documentation>Costa Rican Colon</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CUP">
        <xs:annotation>
          <xs:documentation>Cuban Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CVE">
        <xs:annotation>
          <xs:documentation>Cape Verde Escudo</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CYP">
        <xs:annotation>
          <xs:documentation>Cyprus Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CZK">
        <xs:annotation>
          <xs:documentation>Czech Koruna</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEM">
        <xs:annotation>
          <xs:documentation>Deutsche Mark</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DJF">
        <xs:annotation>
          <xs:documentation>Djibouti Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DKK">
        <xs:annotation>
          <xs:documentation>Danish Krone</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DOP">
        <xs:annotation>
          <xs:documentation>Dominican Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DZD">
        <xs:annotation>
          <xs:documentation>Algerian Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EEK">
        <xs:annotation>
          <xs:documentation>Kroon</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EGP">
        <xs:annotation>
          <xs:documentation>Egyptian Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ERN">
        <xs:annotation>
          <xs:documentation>Nakfa</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ESP">
        <xs:annotation>
          <xs:documentation>Spanish Peseta</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ETB">
        <xs:annotation>
          <xs:documentation>Ethiopian Birr</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FIM">
        <xs:annotation>
          <xs:documentation>Markka</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FJD">
        <xs:annotation>
          <xs:documentation>Fiji Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FKP">
        <xs:annotation>
          <xs:documentation>Falkland Islands Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FRF">
        <xs:annotation>
          <xs:documentation>French Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GBP">
        <xs:annotation>
          <xs:documentation>Pound Sterling</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GEL">
        <xs:annotation>
          <xs:documentation>Lari</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GHC">
        <xs:annotation>
          <xs:documentation>Cedi</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GIP">
        <xs:annotation>
          <xs:documentation>Gibraltar Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GMD">
        <xs:annotation>
          <xs:documentation>Dalasi</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GNF">
        <xs:annotation>
          <xs:documentation>Guinea Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GRD">
        <xs:annotation>
          <xs:documentation>Drachma</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GTQ">
        <xs:annotation>
          <xs:documentation>Quetzal</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GWP">
        <xs:annotation>
          <xs:documentation>Guinea-Bissau Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GYD">
        <xs:annotation>
          <xs:documentation>Guyana Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HKD">
        <xs:annotation>
          <xs:documentation>Hong Kong Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HNL">
        <xs:annotation>
          <xs:documentation>Lempira</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HRK">
        <xs:annotation>
          <xs:documentation>Croatian kuna</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HTG">
        <xs:annotation>
          <xs:documentation>Gourde</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HUF">
        <xs:annotation>
          <xs:documentation>Forint</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IDR">
        <xs:annotation>
          <xs:documentation>Rupiah</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IEP">
        <xs:annotation>
          <xs:documentation>Irish Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ILS">
        <xs:annotation>
          <xs:documentation>New Israeli Sheqel</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INR">
        <xs:annotation>
          <xs:documentation>Indian Rupee</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IQD">
        <xs:annotation>
          <xs:documentation>Iraqi Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IRR">
        <xs:annotation>
          <xs:documentation>Iranian Rial</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISK">
        <xs:annotation>
          <xs:documentation>Iceland Krona</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ITL">
        <xs:annotation>
          <xs:documentation>Italian Lira</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JMD">
        <xs:annotation>
          <xs:documentation>Jamaican Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JOD">
        <xs:annotation>
          <xs:documentation>Jordanian Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JPY">
        <xs:annotation>
          <xs:documentation>Yen</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KES">
        <xs:annotation>
          <xs:documentation>Kenyan Shilling</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KGS">
        <xs:annotation>
          <xs:documentation>Som</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KHR">
        <xs:annotation>
          <xs:documentation>Riel</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KMF">
        <xs:annotation>
          <xs:documentation>Comoro Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KPW">
        <xs:annotation>
          <xs:documentation>North Korean Won</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KRW">
        <xs:annotation>
          <xs:documentation>Won</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KWD">
        <xs:annotation>
          <xs:documentation>Kuwaiti Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KYD">
        <xs:annotation>
          <xs:documentation>Cayman Islands Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KZT">
        <xs:annotation>
          <xs:documentation>Tenge</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LAK">
        <xs:annotation>
          <xs:documentation>Kip</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LBP">
        <xs:annotation>
          <xs:documentation>Lebanese Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LKR">
        <xs:annotation>
          <xs:documentation>Sri Lanka Rupee</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LRD">
        <xs:annotation>
          <xs:documentation>Liberian Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LSL">
        <xs:annotation>
          <xs:documentation>Loti</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LTL">
        <xs:annotation>
          <xs:documentation>Lithuanian Litus</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LUF">
        <xs:annotation>
          <xs:documentation>Luxembourg Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LVL">
        <xs:annotation>
          <xs:documentation>Latvian Lats</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LYD">
        <xs:annotation>
          <xs:documentation>Libyan Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MAD">
        <xs:annotation>
          <xs:documentation>Moroccan Dirham</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MDL">
        <xs:annotation>
          <xs:documentation>Moldovan Leu</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MGF">
        <xs:annotation>
          <xs:documentation>Malagasy Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MKD">
        <xs:annotation>
          <xs:documentation>Denar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MMK">
        <xs:annotation>
          <xs:documentation>Kyat</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MNT">
        <xs:annotation>
          <xs:documentation>Tugrik</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MOP">
        <xs:annotation>
          <xs:documentation>Pataca</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MRO">
        <xs:annotation>
          <xs:documentation>Ouguiya</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MTL">
        <xs:annotation>
          <xs:documentation>Maltese Lira</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MUR">
        <xs:annotation>
          <xs:documentation>Mauritius Rupee</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MVR">
        <xs:annotation>
          <xs:documentation>Rufiyaa</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MWK">
        <xs:annotation>
          <xs:documentation>Kwacha</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MXN">
        <xs:annotation>
          <xs:documentation>Mexican Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MXV">
        <xs:annotation>
          <xs:documentation>Mexican Unidad de Inversion (UDI)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MYR">
        <xs:annotation>
          <xs:documentation>Malaysian Ringgit</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MZM">
        <xs:annotation>
          <xs:documentation>Metical</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NAD">
        <xs:annotation>
          <xs:documentation>Namibia Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NGN">
        <xs:annotation>
          <xs:documentation>Naira</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NIO">
        <xs:annotation>
          <xs:documentation>Cordoba Oro</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NLG">
        <xs:annotation>
          <xs:documentation>Netherlands Guilder</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NOK">
        <xs:annotation>
          <xs:documentation>Norwegian Krone</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NPR">
        <xs:annotation>
          <xs:documentation>Nepalese Rupee</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NZD">
        <xs:annotation>
          <xs:documentation>New Zealand Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="OMR">
        <xs:annotation>
          <xs:documentation>Rial Omani</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PAB">
        <xs:annotation>
          <xs:documentation>Balboa</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PEN">
        <xs:annotation>
          <xs:documentation>Nuevo Sol</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PGK">
        <xs:annotation>
          <xs:documentation>Kina</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PHP">
        <xs:annotation>
          <xs:documentation>Philippine Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PKR">
        <xs:annotation>
          <xs:documentation>Pakistan Rupee</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PLN">
        <xs:annotation>
          <xs:documentation>Zloty</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PTE">
        <xs:annotation>
          <xs:documentation>Portuguese Escudo</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PYG">
        <xs:annotation>
          <xs:documentation>Guarani</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="QAR">
        <xs:annotation>
          <xs:documentation>Qatari Rial</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ROL">
        <xs:annotation>
          <xs:documentation>Leu</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RUB">
        <xs:annotation>
          <xs:documentation>Russian Ruble</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RUR">
        <xs:annotation>
          <xs:documentation>Russian Ruble</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RWF">
        <xs:annotation>
          <xs:documentation>Rwanda Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SAR">
        <xs:annotation>
          <xs:documentation>Saudi Riyal</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SBD">
        <xs:annotation>
          <xs:documentation>Solomon Islands Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SCR">
        <xs:annotation>
          <xs:documentation>Seychelles Rupee</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SDD">
        <xs:annotation>
          <xs:documentation>Sudanese Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SEK">
        <xs:annotation>
          <xs:documentation>Swedish Krona</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SGD">
        <xs:annotation>
          <xs:documentation>Singapore Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SHP">
        <xs:annotation>
          <xs:documentation>Saint Helena Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SIT">
        <xs:annotation>
          <xs:documentation>Tolar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SKK">
        <xs:annotation>
          <xs:documentation>Slovak Koruna</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SLL">
        <xs:annotation>
          <xs:documentation>Leone</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SOS">
        <xs:annotation>
          <xs:documentation>Somali Shilling</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SRG">
        <xs:annotation>
          <xs:documentation>Suriname Guilder</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="STD">
        <xs:annotation>
          <xs:documentation>Dobra</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SVC">
        <xs:annotation>
          <xs:documentation>El Salvador Colon</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SYP">
        <xs:annotation>
          <xs:documentation>Syrian Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SZL">
        <xs:annotation>
          <xs:documentation>Lilangeni</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="THB">
        <xs:annotation>
          <xs:documentation>Baht</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TJR">
        <xs:annotation>
          <xs:documentation>Tajik Ruble</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TMM">
        <xs:annotation>
          <xs:documentation>Manat</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TND">
        <xs:annotation>
          <xs:documentation>Tunisian Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TOP">
        <xs:annotation>
          <xs:documentation>Pa’anga</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TPE">
        <xs:annotation>
          <xs:documentation>Timor Escudo</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TRL">
        <xs:annotation>
          <xs:documentation>Turkish Lira</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TTD">
        <xs:annotation>
          <xs:documentation>Trinidad and Tobago Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TWD">
        <xs:annotation>
          <xs:documentation>New Taiwan Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TZS">
        <xs:annotation>
          <xs:documentation>Tanzanian Shilling</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UAH">
        <xs:annotation>
          <xs:documentation>Hryvnia</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UGX">
        <xs:annotation>
          <xs:documentation>Uganda Shilling</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="USD">
        <xs:annotation>
          <xs:documentation>US Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UYU">
        <xs:annotation>
          <xs:documentation>Peso Uruguayo</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UZS">
        <xs:annotation>
          <xs:documentation>Uzbekistan Sum</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VEB">
        <xs:annotation>
          <xs:documentation>Bolivar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VND">
        <xs:annotation>
          <xs:documentation>Dong</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VUV">
        <xs:annotation>
          <xs:documentation>Vatu</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WST">
        <xs:annotation>
          <xs:documentation>Tala</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="XAF">
        <xs:annotation>
          <xs:documentation>CFA Franc BEAC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="XCD">
        <xs:annotation>
          <xs:documentation>East Caribbean Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="XDR">
        <xs:annotation>
          <xs:documentation>SDR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="XOF">
        <xs:annotation>
          <xs:documentation>CFA Franc BCEAO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="XPF">
        <xs:annotation>
          <xs:documentation>CFP Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="YER">
        <xs:annotation>
          <xs:documentation>Yemeni Rial</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="YUM">
        <xs:annotation>
          <xs:documentation>Yugoslavian Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ZAR">
        <xs:annotation>
          <xs:documentation>Rand</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ZMK">
        <xs:annotation>
          <xs:documentation>Kwacha</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ZWD">
        <xs:annotation>
          <xs:documentation>Zimbabwe Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CurrencyCodeDigit3Type">
    <xs:annotation>
      <xs:documentation>Currency codes can be expressed as alpha 3 or numeric 3 codes.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:integer">
      <xs:enumeration value="004">
        <xs:annotation>
          <xs:documentation>Afghani</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="008">
        <xs:annotation>
          <xs:documentation>Lek</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="012">
        <xs:annotation>
          <xs:documentation>Algerian Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="020">
        <xs:annotation>
          <xs:documentation>Andorran Peseta</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="031">
        <xs:annotation>
          <xs:documentation>Azerbaijanian Manat</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="032">
        <xs:annotation>
          <xs:documentation>Argentine Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="036">
        <xs:annotation>
          <xs:documentation>Australian Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="040">
        <xs:annotation>
          <xs:documentation>Schilling</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="044">
        <xs:annotation>
          <xs:documentation>Bahamian Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="048">
        <xs:annotation>
          <xs:documentation>Bahraini Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="050">
        <xs:annotation>
          <xs:documentation>Taka</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="051">
        <xs:annotation>
          <xs:documentation>Armenian Dram</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="052">
        <xs:annotation>
          <xs:documentation>Barbados Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="056">
        <xs:annotation>
          <xs:documentation>Belgian Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="060">
        <xs:annotation>
          <xs:documentation>Bermudian Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="064">
        <xs:annotation>
          <xs:documentation>Ngultrum</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="068">
        <xs:annotation>
          <xs:documentation>Boliviano</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="072">
        <xs:annotation>
          <xs:documentation>Pula</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="084">
        <xs:annotation>
          <xs:documentation>Belize Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="090">
        <xs:annotation>
          <xs:documentation>Solomon Islands Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="096">
        <xs:annotation>
          <xs:documentation>Brunei Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="100">
        <xs:annotation>
          <xs:documentation>Lev</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="104">
        <xs:annotation>
          <xs:documentation>Kyat</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="108">
        <xs:annotation>
          <xs:documentation>Burundi Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="112">
        <xs:annotation>
          <xs:documentation>Belarussian Ruble</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="116">
        <xs:annotation>
          <xs:documentation>Riel</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="124">
        <xs:annotation>
          <xs:documentation>Canadian Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="132">
        <xs:annotation>
          <xs:documentation>Cape Verde Escudo</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="136">
        <xs:annotation>
          <xs:documentation>Cayman Islands Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="144">
        <xs:annotation>
          <xs:documentation>Sri Lanka Rupee</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="152">
        <xs:annotation>
          <xs:documentation>Chilean Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="156">
        <xs:annotation>
          <xs:documentation>Yuan Renminbi</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="170">
        <xs:annotation>
          <xs:documentation>Colombian Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="174">
        <xs:annotation>
          <xs:documentation>Comoro Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="188">
        <xs:annotation>
          <xs:documentation>Costa Rican Colon</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="191">
        <xs:annotation>
          <xs:documentation>Croatian kuna</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="192">
        <xs:annotation>
          <xs:documentation>Cuban Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="196">
        <xs:annotation>
          <xs:documentation>Cyprus Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="203">
        <xs:annotation>
          <xs:documentation>Czech Koruna</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="208">
        <xs:annotation>
          <xs:documentation>Danish Krone</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="214">
        <xs:annotation>
          <xs:documentation>Dominican Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="222">
        <xs:annotation>
          <xs:documentation>El Salvador Colon</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="230">
        <xs:annotation>
          <xs:documentation>Ethiopian Birr</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="232">
        <xs:annotation>
          <xs:documentation>Nakfa</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="233">
        <xs:annotation>
          <xs:documentation>Kroon</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="238">
        <xs:annotation>
          <xs:documentation>Falkland Islands Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="242">
        <xs:annotation>
          <xs:documentation>Fiji Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="246">
        <xs:annotation>
          <xs:documentation>Markka</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="250">
        <xs:annotation>
          <xs:documentation>French Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="262">
        <xs:annotation>
          <xs:documentation>Djibouti Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="270">
        <xs:annotation>
          <xs:documentation>Dalasi</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="276">
        <xs:annotation>
          <xs:documentation>Deutsche Mark</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="288">
        <xs:annotation>
          <xs:documentation>Cedi</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="292">
        <xs:annotation>
          <xs:documentation>Gibraltar Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="300">
        <xs:annotation>
          <xs:documentation>Drachma</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="320">
        <xs:annotation>
          <xs:documentation>Quetzal</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="324">
        <xs:annotation>
          <xs:documentation>Guinea Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="328">
        <xs:annotation>
          <xs:documentation>Guyana Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="332">
        <xs:annotation>
          <xs:documentation>Gourde</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="340">
        <xs:annotation>
          <xs:documentation>Lempira</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="344">
        <xs:annotation>
          <xs:documentation>Hong Kong Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="348">
        <xs:annotation>
          <xs:documentation>Forint</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="352">
        <xs:annotation>
          <xs:documentation>Iceland Krona</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="356">
        <xs:annotation>
          <xs:documentation>Indian Rupee</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="356">
        <xs:annotation>
          <xs:documentation>Indian Rupee</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="360">
        <xs:annotation>
          <xs:documentation>Rupiah</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="360">
        <xs:annotation>
          <xs:documentation>Rupiah</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="364">
        <xs:annotation>
          <xs:documentation>Iranian Rial</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="368">
        <xs:annotation>
          <xs:documentation>Iraqi Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="372">
        <xs:annotation>
          <xs:documentation>Irish Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="376">
        <xs:annotation>
          <xs:documentation>New Israeli Sheqel</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="380">
        <xs:annotation>
          <xs:documentation>Italian Lira</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="388">
        <xs:annotation>
          <xs:documentation>Jamaican Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="392">
        <xs:annotation>
          <xs:documentation>Yen</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="398">
        <xs:annotation>
          <xs:documentation>Tenge</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="400">
        <xs:annotation>
          <xs:documentation>Jordanian Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="404">
        <xs:annotation>
          <xs:documentation>Kenyan Shilling</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="408">
        <xs:annotation>
          <xs:documentation>North Korean Won</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="410">
        <xs:annotation>
          <xs:documentation>Won</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="414">
        <xs:annotation>
          <xs:documentation>Kuwaiti Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="417">
        <xs:annotation>
          <xs:documentation>Som</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="418">
        <xs:annotation>
          <xs:documentation>Kip</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="422">
        <xs:annotation>
          <xs:documentation>Lebanese Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="426">
        <xs:annotation>
          <xs:documentation>Loti</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="428">
        <xs:annotation>
          <xs:documentation>Latvian Lats</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="430">
        <xs:annotation>
          <xs:documentation>Liberian Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="434">
        <xs:annotation>
          <xs:documentation>Libyan Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="440">
        <xs:annotation>
          <xs:documentation>Lithuanian Litus</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="442">
        <xs:annotation>
          <xs:documentation>Luxembourg Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="446">
        <xs:annotation>
          <xs:documentation>Pataca</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="450">
        <xs:annotation>
          <xs:documentation>Malagasy Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="454">
        <xs:annotation>
          <xs:documentation>Kwacha</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="458">
        <xs:annotation>
          <xs:documentation>Malaysian Ringgit</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="462">
        <xs:annotation>
          <xs:documentation>Rufiyaa</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="470">
        <xs:annotation>
          <xs:documentation>Maltese Lira</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="478">
        <xs:annotation>
          <xs:documentation>Ouguiya</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="480">
        <xs:annotation>
          <xs:documentation>Mauritius Rupee</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="484">
        <xs:annotation>
          <xs:documentation>Mexican Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="496">
        <xs:annotation>
          <xs:documentation>Tugrik</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="498">
        <xs:annotation>
          <xs:documentation>Moldovan Leu</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="504">
        <xs:annotation>
          <xs:documentation>Moroccan Dirham</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="508">
        <xs:annotation>
          <xs:documentation>Metical</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="512">
        <xs:annotation>
          <xs:documentation>Rial Omani</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="516">
        <xs:annotation>
          <xs:documentation>Namibia Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="524">
        <xs:annotation>
          <xs:documentation>Nepalese Rupee</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="528">
        <xs:annotation>
          <xs:documentation>Netherlands Guilder</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="532">
        <xs:annotation>
          <xs:documentation>Netherlands Antillian Guilder</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="533">
        <xs:annotation>
          <xs:documentation>Aruban Guilder</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="548">
        <xs:annotation>
          <xs:documentation>Vatu</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="554">
        <xs:annotation>
          <xs:documentation>New Zealand Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="558">
        <xs:annotation>
          <xs:documentation>Cordoba Oro</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="566">
        <xs:annotation>
          <xs:documentation>Naira</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="578">
        <xs:annotation>
          <xs:documentation>Norwegian Krone</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="586">
        <xs:annotation>
          <xs:documentation>Pakistan Rupee</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="590">
        <xs:annotation>
          <xs:documentation>Balboa</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="598">
        <xs:annotation>
          <xs:documentation>Kina</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="600">
        <xs:annotation>
          <xs:documentation>Guarani</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="604">
        <xs:annotation>
          <xs:documentation>Nuevo Sol</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="608">
        <xs:annotation>
          <xs:documentation>Philippine Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="620">
        <xs:annotation>
          <xs:documentation>Portuguese Escudo</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="624">
        <xs:annotation>
          <xs:documentation>Guinea-Bissau Peso</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="626">
        <xs:annotation>
          <xs:documentation>Timor Escudo</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="634">
        <xs:annotation>
          <xs:documentation>Qatari Rial</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="642">
        <xs:annotation>
          <xs:documentation>Leu</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="643">
        <xs:annotation>
          <xs:documentation>Russian Ruble</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="646">
        <xs:annotation>
          <xs:documentation>Rwanda Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="654">
        <xs:annotation>
          <xs:documentation>Saint Helena Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="678">
        <xs:annotation>
          <xs:documentation>Dobra</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="682">
        <xs:annotation>
          <xs:documentation>Saudi Riyal</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="690">
        <xs:annotation>
          <xs:documentation>Seychelles Rupee</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="694">
        <xs:annotation>
          <xs:documentation>Leone</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="702">
        <xs:annotation>
          <xs:documentation>Singapore Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="703">
        <xs:annotation>
          <xs:documentation>Slovak Koruna</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="704">
        <xs:annotation>
          <xs:documentation>Dong</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="705">
        <xs:annotation>
          <xs:documentation>Tolar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="706">
        <xs:annotation>
          <xs:documentation>Somali Shilling</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="710">
        <xs:annotation>
          <xs:documentation>Rand</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="716">
        <xs:annotation>
          <xs:documentation>Zimbabwe Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="724">
        <xs:annotation>
          <xs:documentation>Spanish Peseta</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="736">
        <xs:annotation>
          <xs:documentation>Sudanese Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="740">
        <xs:annotation>
          <xs:documentation>Suriname Guilder</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="748">
        <xs:annotation>
          <xs:documentation>Lilangeni</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="752">
        <xs:annotation>
          <xs:documentation>Swedish Krona</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="756">
        <xs:annotation>
          <xs:documentation>Swiss Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="760">
        <xs:annotation>
          <xs:documentation>Syrian Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="762">
        <xs:annotation>
          <xs:documentation>Tajik Ruble</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="764">
        <xs:annotation>
          <xs:documentation>Baht</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="776">
        <xs:annotation>
          <xs:documentation>Pa’anga</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="780">
        <xs:annotation>
          <xs:documentation>Trinidad and Tobago Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="784">
        <xs:annotation>
          <xs:documentation>UAE Dirham</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="788">
        <xs:annotation>
          <xs:documentation>Tunisian Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="792">
        <xs:annotation>
          <xs:documentation>Turkish Lira</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="795">
        <xs:annotation>
          <xs:documentation>Manat</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="800">
        <xs:annotation>
          <xs:documentation>Uganda Shilling</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="807">
        <xs:annotation>
          <xs:documentation>Denar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="810">
        <xs:annotation>
          <xs:documentation>Russian Ruble</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="818">
        <xs:annotation>
          <xs:documentation>Egyptian Pound</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="826">
        <xs:annotation>
          <xs:documentation>Pound Sterling</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="834">
        <xs:annotation>
          <xs:documentation>Tanzanian Shilling</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="840">
        <xs:annotation>
          <xs:documentation>US Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="858">
        <xs:annotation>
          <xs:documentation>Peso Uruguayo</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="860">
        <xs:annotation>
          <xs:documentation>Uzbekistan Sum</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="862">
        <xs:annotation>
          <xs:documentation>Bolivar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="882">
        <xs:annotation>
          <xs:documentation>Tala</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="886">
        <xs:annotation>
          <xs:documentation>Yemeni Rial</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="891">
        <xs:annotation>
          <xs:documentation>Yugoslavian Dinar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="894">
        <xs:annotation>
          <xs:documentation>Kwacha</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="901">
        <xs:annotation>
          <xs:documentation>New Taiwan Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="950">
        <xs:annotation>
          <xs:documentation>CFA Franc BEAC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="951">
        <xs:annotation>
          <xs:documentation>East Caribbean Dollar</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="952">
        <xs:annotation>
          <xs:documentation>CFA Franc BCEAO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="953">
        <xs:annotation>
          <xs:documentation>CFP Franc</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="960">
        <xs:annotation>
          <xs:documentation>SDR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="973">
        <xs:annotation>
          <xs:documentation>Kwanza</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="974">
        <xs:annotation>
          <xs:documentation>Belarussian Ruble</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="975">
        <xs:annotation>
          <xs:documentation>Bulgarian Lev</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="976">
        <xs:annotation>
          <xs:documentation>Franc Congolais</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="977">
        <xs:annotation>
          <xs:documentation>Convertible Marks</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="979">
        <xs:annotation>
          <xs:documentation>Mexican Unidad de Inversion (UDI)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="980">
        <xs:annotation>
          <xs:documentation>Hryvnia</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="981">
        <xs:annotation>
          <xs:documentation>Lari</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="984">
        <xs:annotation>
          <xs:documentation>Mvdol</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="985">
        <xs:annotation>
          <xs:documentation>Zloty</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="986">
        <xs:annotation>
          <xs:documentation>Brazilian Real</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="990">
        <xs:annotation>
          <xs:documentation>Unidades de fomento</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ISOCurrencyType">
    <xs:annotation>
      <xs:documentation>Structured ISO Currecny Type Element contains both CurrencyCode Alpha 3 and CurrencyCode Digit 3</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="CurrencyCodeAlpha3" type="stds:CurrencyCodeAlpha3Type" minOccurs="0"/>
      <xs:element name="CurrencyCodeDigit3" type="stds:CurrencyCodeDigit3Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/canonical/demographic.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2009 (http://www.altova.com) by Praburaj Thangaraj (UNITED HEALTHGROUP)-->
<!--Created with Liquid XML Studio 1.0.8.0 (http://www.liquid-technologies.com)-->
<xs:schema targetNamespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" elementFormDefault="qualified" attributeFormDefault="unqualified" version="4.0.3" xmlns:demo="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" xmlns:common="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" schemaLocation="common.xsd"/>
  <xs:complexType name="MedicaidIDStateValuePairType">
    <xs:annotation>
      <xs:documentation>Combination of Medicaid ID and Issuing State</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="MedicaidID" type="xs:string" minOccurs="0"/>
      <xs:element name="MedicaidStateCode" type="demo:StateCodeType" minOccurs="0"/>
      <xs:element name="ActiveStatusFlag" type="demo:ActiveIndType" minOccurs="0"/>
      <xs:element name="MedicaidInd" type="demo:ActiveIndType" minOccurs="0"/>
      <xs:element name="AdditionalAttributes" type="demo:AdditionalAttributesType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="CountryNameType">
    <xs:annotation>
      <xs:documentation>Full Country Name</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="CountryCodeType">
    <xs:annotation>
      <xs:documentation>ISO 3166-1 compatible country code, either 3 digit alpha, 2 digit alpha, or 3 digit numeric . See http://en.wikipedia.org/wiki/ISO_3166-1 .</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="\d{3}|[A-Z]{2,3}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CountrySubDivisionCodeType">
    <xs:annotation>
      <xs:documentation>The Geographical Boundary component code used to identify the country subdivision. HIPAA 5010 Regulation requires that when the address is not in the United States of America territories, or Canada that the addresses identify country administrative subdivisions such as but not limited to states, provinces, cantons, etc.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="CountrySubDivisionNameType">
    <xs:annotation>
      <xs:documentation>The Geographical Boundary component code used to identify the country subdivision. HIPAA 5010 Regulation requires that when the address is not in the United States of America territories, or Canada that the addresses identify country administrative subdivisions such as but not limited to states, provinces, cantons, etc.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:complexType name="StateCountyCodeType">
    <xs:annotation>
      <xs:documentation>5-digit State County Code: 2 state + 3 county.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="StateCode" type="demo:StateCodeType" nillable="true" minOccurs="0"/>
      <xs:element name="CountyCode" type="demo:CountyCodeType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="StateCodeType">
    <xs:annotation>
      <xs:documentation>2-digit numeric state code</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CountyCodeType">
    <xs:annotation>
      <xs:documentation>county code should be of length between 3 and 9</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="\d{3,9}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CountyNameType">
    <xs:annotation>
      <xs:documentation>No specific requirements for maxLength</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="45"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ZipCodeType">
    <xs:annotation>
      <xs:documentation>Zip Code that represents ZIP + 4 codes.  See http://en.wikipedia.org/wiki/Zip_code#ZIP_.2B_4</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Zip5">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\d{5}"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Zip4" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="\d{4}"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="USStateCodeType">
    <xs:annotation>
      <xs:documentation>US 50 states + DC (51 total).  See http://en.wikipedia.org/wiki/US_state_codes</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="AL"/>
      <xs:enumeration value="AK"/>
      <xs:enumeration value="AZ"/>
      <xs:enumeration value="AR"/>
      <xs:enumeration value="CA"/>
      <xs:enumeration value="CO"/>
      <xs:enumeration value="CT"/>
      <xs:enumeration value="DE"/>
      <xs:enumeration value="DC"/>
      <xs:enumeration value="FL"/>
      <xs:enumeration value="GA"/>
      <xs:enumeration value="HI"/>
      <xs:enumeration value="ID"/>
      <xs:enumeration value="IL"/>
      <xs:enumeration value="IN"/>
      <xs:enumeration value="IA"/>
      <xs:enumeration value="KS"/>
      <xs:enumeration value="KY"/>
      <xs:enumeration value="LA"/>
      <xs:enumeration value="ME"/>
      <xs:enumeration value="MD"/>
      <xs:enumeration value="MA"/>
      <xs:enumeration value="MI"/>
      <xs:enumeration value="MN"/>
      <xs:enumeration value="MS"/>
      <xs:enumeration value="MO"/>
      <xs:enumeration value="MT"/>
      <xs:enumeration value="NE"/>
      <xs:enumeration value="NV"/>
      <xs:enumeration value="NH"/>
      <xs:enumeration value="NJ"/>
      <xs:enumeration value="NM"/>
      <xs:enumeration value="NY"/>
      <xs:enumeration value="NC"/>
      <xs:enumeration value="ND"/>
      <xs:enumeration value="OH"/>
      <xs:enumeration value="OK"/>
      <xs:enumeration value="OR"/>
      <xs:enumeration value="PA"/>
      <xs:enumeration value="RI"/>
      <xs:enumeration value="SC"/>
      <xs:enumeration value="SD"/>
      <xs:enumeration value="TN"/>
      <xs:enumeration value="TX"/>
      <xs:enumeration value="UT"/>
      <xs:enumeration value="VT"/>
      <xs:enumeration value="VA"/>
      <xs:enumeration value="WA"/>
      <xs:enumeration value="WV"/>
      <xs:enumeration value="WI"/>
      <xs:enumeration value="WY"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="USTerritoryCodeType">
    <xs:annotation>
      <xs:documentation>US Territories (not including DC, 8 total).  See http://en.wikipedia.org/wiki/US_state_codes</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="AS">
        <xs:annotation>
          <xs:documentation>AMERICAN SAMOA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FM">
        <xs:annotation>
          <xs:documentation>FEDERATED STATES OF MICRONESIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GU">
        <xs:annotation>
          <xs:documentation>GUAM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MH">
        <xs:annotation>
          <xs:documentation>MARSHALL ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MP">
        <xs:annotation>
          <xs:documentation>NORTHERN MARIANA ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PW">
        <xs:annotation>
          <xs:documentation>PALAU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PR">
        <xs:annotation>
          <xs:documentation>PUERTO RICO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VI">
        <xs:annotation>
          <xs:documentation>VIRGIN ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="USStateTerritoryCodeType">
    <xs:annotation>
      <xs:documentation>US 50 States + Terroriries + DC (59 total) + 3 Military Mail Codes 
			AA - (Armed Forces Americas (except Canada) (US Military mail)  
			AE - Armed Forces - Europe (Canada, Middle East, Africa) (US Military mail)  
			AP - Armed Forces Pacific (US Military mail)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="AA"/>
      <xs:enumeration value="AE"/>
      <xs:enumeration value="AP"/>
      <xs:enumeration value="AL"/>
      <xs:enumeration value="AK"/>
      <xs:enumeration value="AS"/>
      <xs:enumeration value="AZ"/>
      <xs:enumeration value="AR"/>
      <xs:enumeration value="CA"/>
      <xs:enumeration value="CO"/>
      <xs:enumeration value="CT"/>
      <xs:enumeration value="DE"/>
      <xs:enumeration value="DC"/>
      <xs:enumeration value="FM"/>
      <xs:enumeration value="FL"/>
      <xs:enumeration value="GA"/>
      <xs:enumeration value="GU"/>
      <xs:enumeration value="HI"/>
      <xs:enumeration value="ID"/>
      <xs:enumeration value="IL"/>
      <xs:enumeration value="IN"/>
      <xs:enumeration value="IA"/>
      <xs:enumeration value="KS"/>
      <xs:enumeration value="KY"/>
      <xs:enumeration value="LA"/>
      <xs:enumeration value="ME"/>
      <xs:enumeration value="MH"/>
      <xs:enumeration value="MD"/>
      <xs:enumeration value="MA"/>
      <xs:enumeration value="MI"/>
      <xs:enumeration value="MN"/>
      <xs:enumeration value="MS"/>
      <xs:enumeration value="MO"/>
      <xs:enumeration value="MT"/>
      <xs:enumeration value="NE"/>
      <xs:enumeration value="NV"/>
      <xs:enumeration value="NH"/>
      <xs:enumeration value="NJ"/>
      <xs:enumeration value="NM"/>
      <xs:enumeration value="NY"/>
      <xs:enumeration value="NC"/>
      <xs:enumeration value="ND"/>
      <xs:enumeration value="MP"/>
      <xs:enumeration value="OH"/>
      <xs:enumeration value="OK"/>
      <xs:enumeration value="OR"/>
      <xs:enumeration value="PW"/>
      <xs:enumeration value="PA"/>
      <xs:enumeration value="PR"/>
      <xs:enumeration value="RI"/>
      <xs:enumeration value="SC"/>
      <xs:enumeration value="SD"/>
      <xs:enumeration value="TN"/>
      <xs:enumeration value="TX"/>
      <xs:enumeration value="UT"/>
      <xs:enumeration value="VT"/>
      <xs:enumeration value="VI"/>
      <xs:enumeration value="VA"/>
      <xs:enumeration value="WA"/>
      <xs:enumeration value="WV"/>
      <xs:enumeration value="WI"/>
      <xs:enumeration value="WY"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PersonNamePartType">
    <xs:annotation>
      <xs:documentation>A part of a name, e.g. first, middle, or last name.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="40"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NamePrefixType">
    <xs:annotation>
      <xs:documentation>Name prefix.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="BROTHER"/>
      <xs:enumeration value="COL"/>
      <xs:enumeration value="CPT"/>
      <xs:enumeration value="DR"/>
      <xs:enumeration value="FATHER"/>
      <xs:enumeration value="JUDGE"/>
      <xs:enumeration value="LT"/>
      <xs:enumeration value="LT COL"/>
      <xs:enumeration value="MAJOR"/>
      <xs:enumeration value="MISS"/>
      <xs:enumeration value="MR"/>
      <xs:enumeration value="MRS"/>
      <xs:enumeration value="MS"/>
      <xs:enumeration value="PASTOR"/>
      <xs:enumeration value="PROF"/>
      <xs:enumeration value="RABBI"/>
      <xs:enumeration value="REV"/>
      <xs:enumeration value="SISTER"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NameSuffixType">
    <xs:annotation>
      <xs:documentation>Name suffix.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="CPA"/>
      <xs:enumeration value="DC"/>
      <xs:enumeration value="DD"/>
      <xs:enumeration value="DDS"/>
      <xs:enumeration value="DMD"/>
      <xs:enumeration value="DO"/>
      <xs:enumeration value="DSC"/>
      <xs:enumeration value="DVM"/>
      <xs:enumeration value="ESQ"/>
      <xs:enumeration value="I"/>
      <xs:enumeration value="II"/>
      <xs:enumeration value="III"/>
      <xs:enumeration value="IV"/>
      <xs:enumeration value="V"/>
      <xs:enumeration value="JR"/>
      <xs:enumeration value="LPN"/>
      <xs:enumeration value="MA"/>
      <xs:enumeration value="MBA"/>
      <xs:enumeration value="MD"/>
      <xs:enumeration value="MS"/>
      <xs:enumeration value="MSW"/>
      <xs:enumeration value="OD"/>
      <xs:enumeration value="PHD"/>
      <xs:enumeration value="PT"/>
      <xs:enumeration value="RN"/>
      <xs:enumeration value="SR"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="MaritalStatusType">
    <xs:annotation>
      <xs:documentation>Structured Marital Status with Effective Dates</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="MaritalStatusCode" type="demo:MaritalStatusCodeType"/>
      <xs:element name="EffectiveDates" type="common:DateRangeType"/>
      <xs:element name="ActiveStatusFlag" type="demo:ActiveIndType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="MaritalStatusCodeType">
    <xs:annotation>
      <xs:documentation>Person Marital Status, Values Single, Married, Divorced, etc</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="GenderCodeType">
    <xs:annotation>
      <xs:documentation>Gender</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="M">
        <xs:annotation>
          <xs:documentation>Male</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="F">
        <xs:annotation>
          <xs:documentation>Female</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="U">
        <xs:annotation>
          <xs:documentation>Unknown</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ISOLanguageCodeType">
    <xs:annotation>
      <xs:documentation>Language codes.  TODO finalize this - See http://en.wikipedia.org/wiki/Language_code, recommend ISO 639-3

                Top languages spoken in US:
                http://www.census.gov/population/www/socdemo/lang_use.html
                http://encarta.msn.com/media_701500641_761573010_-1_1/top_non-english_languages_spoken_in_the_united_states.html

                Top languages spoken worldwide:
                http://en.wikipedia.org/wiki/List_of_languages_by_number_of_native_speakers</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="3"/>
      <xs:maxLength value="3"/>
      <xs:pattern value="[A-Z]{3}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LanguageUsageByType">
    <xs:annotation>
      <xs:documentation>Holds the Language spoken by code, Valid Values for Language Usage by (Spoken or Written) are: 'P' - Physician, 'S' - Staff, 'B' - Both, 'U' - Unknown</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:length value="1"/>
      <xs:enumeration value="P"/>
      <xs:enumeration value="S"/>
      <xs:enumeration value="B"/>
      <xs:enumeration value="U"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LanguageUsageType">
    <xs:annotation>
      <xs:documentation>Language Usage Type, Values S - Spoken,W- Read and  Written, B - Both, U - Unknown etc</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:length value="1"/>
      <xs:enumeration value="S"/>
      <xs:enumeration value="W"/>
      <xs:enumeration value="B"/>
      <xs:enumeration value="U"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ISOLanguageNameType">
    <xs:annotation>
      <xs:documentation>Language Description</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="200"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="LanguageType">
    <xs:annotation>
      <xs:documentation>Langauge Spoken by Person.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="LanguageCode" type="demo:ISOLanguageCodeType" nillable="true" minOccurs="0"/>
      <xs:element name="LanguageName" type="demo:ISOLanguageNameType" nillable="true" minOccurs="0"/>
      <xs:element name="LanguageUsage" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="demo:LanguageUsageType">
            <xs:length value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="TaxIdentificationNumberType">
    <xs:annotation>
      <xs:documentation>Tax Identification Number</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="SocialSecurityNumberType">
    <xs:annotation>
      <xs:documentation>Social Security Number format: 999999999</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]{9}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MedicareClaimNumberType">
    <xs:annotation>
      <xs:documentation>Medicare claim number, also known as HICN Health Insurance Claim Number and Medicare Number</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="7"/>
      <xs:maxLength value="12"/>
      <xs:pattern value="([0-9]{9}([A-Za-z]{1}[0-9A-Za-z]{0,1}|[A-Za-z]{0,1})|[A-Za-z]{1,3}([0-9]{6}|[0-9]{9}))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LocationNameType">
    <xs:annotation>
      <xs:documentation>Location name</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="200"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ContactTypeCodeType">
    <xs:annotation>
      <xs:documentation>Address type code: TODO any others? e.g. "combo"?</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ADMIN"/>
      <xs:enumeration value="BILLING"/>
      <xs:enumeration value="DAYTIME"/>
      <xs:enumeration value="EVENING"/>
      <xs:enumeration value="HOME"/>
      <xs:enumeration value="MAILING"/>
      <xs:enumeration value="ONETIME"/>
      <xs:enumeration value="PERMANENT"/>
      <xs:enumeration value="SERVICE"/>
      <xs:enumeration value="TEMPORARY"/>
      <xs:enumeration value="VANITY"/>
      <xs:enumeration value="WORK"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DomesticIndType">
    <xs:annotation>
      <xs:documentation>Indicator for Domestic / Foreign Address  
				D - Domestic
				F - Foreign</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="D"/>
      <xs:enumeration value="F"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AddressLineType">
    <xs:annotation>
      <xs:documentation>Address line.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="200"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CityNameType">
    <xs:annotation>
      <xs:documentation>City name.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="100"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PersonAgeType">
    <xs:annotation>
      <xs:documentation>Element to handle Person Age</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:integer"/>
  </xs:simpleType>
  <xs:complexType name="PersonNameType">
    <xs:annotation>
      <xs:documentation>A person name composed of several parts.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Prefix" type="demo:NamePrefixType" nillable="true" minOccurs="0"/>
      <xs:element name="FirstName" type="demo:PersonNamePartType" nillable="true" minOccurs="0"/>
      <xs:element name="MiddleName" type="demo:PersonNamePartType" nillable="true" minOccurs="0"/>
      <xs:element name="LastName" type="demo:PersonNamePartType" nillable="true" minOccurs="0"/>
      <xs:element name="Suffix" type="demo:NameSuffixType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PassportDetailType">
    <xs:annotation>
      <xs:documentation>A person's Passport details, can be used as unique identifier for Person without SSN</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="PassportID" type="xs:string"/>
      <xs:element name="PassportIssueExpireDate" type="common:DateRangeType"/>
      <xs:element name="PassportIssueCountry" type="demo:CountryCodeType"/>
      <xs:element name="PassportIssueCity" type="demo:CityNameType"/>
      <xs:element name="ActiveStatusFlag" type="demo:ActiveIndType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ContactInfoType">
    <xs:annotation>
      <xs:documentation>Structured Element for Address, Phone and Electronic Address</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Address" type="demo:AddressType" nillable="true" minOccurs="0" maxOccurs="5"/>
      <xs:element name="Phone" type="demo:PhoneType" nillable="true" minOccurs="0" maxOccurs="5"/>
      <xs:element name="EMailAddress" type="demo:EMailType" nillable="true" minOccurs="0" maxOccurs="5"/>
      <xs:element name="WebSiteAddress" type="demo:WebSiteType" nillable="true" minOccurs="0" maxOccurs="5"/>
    </xs:sequence>
  </xs:complexType>
  <xs:group name="ContactInfoGroup">
    <xs:annotation>
      <xs:documentation>A collection of contact information.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Address" type="demo:AddressType" nillable="true" minOccurs="0" maxOccurs="5"/>
      <xs:element name="Phone" type="demo:PhoneType" nillable="true" minOccurs="0" maxOccurs="5"/>
      <xs:element name="EMailAddress" type="demo:EMailType" nillable="true" minOccurs="0" maxOccurs="5"/>
      <xs:element name="WebSiteAddress" type="demo:WebSiteType" nillable="true" minOccurs="0" maxOccurs="5"/>
    </xs:sequence>
  </xs:group>
  <xs:complexType name="PersonType">
    <xs:annotation>
      <xs:documentation>A basic person type.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Name" type="demo:PersonNameType" minOccurs="0"/>
      <xs:element name="DateOfBirth" type="xs:date" nillable="true" minOccurs="0"/>
      <xs:element name="Gender" type="demo:GenderCodeType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ExtendedPersonType">
    <xs:annotation>
      <xs:documentation>Structure Element Extension of PersonType</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="demo:PersonType">
        <xs:sequence>
          <xs:element name="SocialSecurityNbr" type="demo:SocialSecurityNumberType" nillable="true" minOccurs="0">
            <xs:annotation>
              <xs:documentation>An Individual's Social Security Nbr assigned by Social Security Administration</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Ethnicity" type="xs:string" nillable="true" minOccurs="0">
            <xs:annotation>
              <xs:documentation>An Individual's Ethnicity</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Race" type="xs:string" nillable="true" minOccurs="0">
            <xs:annotation>
              <xs:documentation>An Individual's Race</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Citizenship" type="demo:CitizenshipType" nillable="true" minOccurs="0" maxOccurs="5">
            <xs:annotation>
              <xs:documentation>An Individual's Citizenship Details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="PassportDetail" type="demo:PassportDetailType" nillable="true" minOccurs="0">
            <xs:annotation>
              <xs:documentation>An Individual's Passport Details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DriverLicense" type="demo:DriverLicenseStatePairType" nillable="true" minOccurs="0" maxOccurs="5">
            <xs:annotation>
              <xs:documentation>An Individual's Driving License Details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MaritalStatus" type="demo:MaritalStatusType" nillable="true" minOccurs="0" maxOccurs="5">
            <xs:annotation>
              <xs:documentation>An Individual's Marital Status</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DateofDeath" type="xs:date" nillable="true" minOccurs="0">
            <xs:annotation>
              <xs:documentation>An Individual's Date of Death; default could be blank or 9999-12-31</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="BankruptcyPetetionDate" type="demo:BankruptcyPetitionDateType" nillable="true" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Date on which an Individual might have filed Bankruptcy petition</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="PersonAge" type="demo:PersonAgeType" nillable="true" minOccurs="0">
            <xs:annotation>
              <xs:documentation>An Individual's Age</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DisabilityInd" type="xs:string" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Indicates if an Individual has a Disability, this does not specify the disability the person has.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="WorkingAgeInd" type="xs:string" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Indicates if the individual is of Working Age. This is based on the Criteria set by respective Application or System</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="LivingStatusInd" type="xs:string" nillable="true" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Indicates if Individual is Alive or Dead, Sample Values A - Alive, D - Dead, U - Unknown</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MemberUserName" nillable="true" minOccurs="0">
            <xs:annotation>
              <xs:documentation>The member login ID</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="ProspectSourceCode" type="demo:MarketingSourceCodeType" minOccurs="0">
            <xs:annotation>
              <xs:documentation>To track the source of the inquiry or enrollment</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocationType">
    <xs:annotation>
      <xs:documentation>A basic location type.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="LocationID" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="LocationName" type="demo:LocationNameType" nillable="true" minOccurs="0"/>
      <xs:group ref="demo:ContactInfoGroup"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ContactType" abstract="false">
    <xs:annotation>
      <xs:documentation>Base contact type.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ContactTypeCode" type="demo:ContactTypeCodeType" nillable="true" minOccurs="0"/>
      <xs:element name="EffectiveDates" type="common:DateRangeType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AddressType">
    <xs:annotation>
      <xs:documentation>A basic street address composed of several parts.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="demo:ContactType">
        <xs:sequence>
          <xs:element name="AddressID" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="LatLong" type="common:LatLongType" nillable="true" minOccurs="0"/>
          <xs:element name="AddressLine1" type="demo:AddressLineType" nillable="true" minOccurs="0"/>
          <xs:element name="AddressLine2" type="demo:AddressLineType" nillable="true" minOccurs="0"/>
          <xs:element name="AddressLine3" type="demo:AddressLineType" nillable="true" minOccurs="0"/>
          <xs:element name="City" type="demo:CityNameType" nillable="true" minOccurs="0"/>
          <xs:element name="State" type="demo:USStateTerritoryCodeType" nillable="true" minOccurs="0"/>
          <xs:element name="ZipCode" type="demo:ZipCodeType" nillable="true" minOccurs="0"/>
          <xs:element name="FipsCountyCode" type="demo:StateCountyCodeType" nillable="true" minOccurs="0"/>
          <xs:element name="CmsCountyCode" type="demo:StateCountyCodeType" nillable="true" minOccurs="0"/>
          <xs:element name="CountyName" type="demo:CountyNameType" nillable="true" minOccurs="0"/>
          <xs:element name="Island" type="demo:AddressLineType" nillable="true" minOccurs="0"/>
          <xs:element name="CountryCode" type="demo:CountryCodeType" nillable="true" minOccurs="0"/>
          <xs:element name="CountrySubDivisionCode" type="demo:CountrySubDivisionCodeType" nillable="true" minOccurs="0"/>
          <xs:element name="ActiveInd" type="demo:ActiveIndType" nillable="true" minOccurs="0"/>
          <xs:element name="OptInInd" type="demo:CorrespondanceSrvcAgrmntType" nillable="true" minOccurs="0"/>
          <xs:element name="DomesticInd" type="demo:DomesticIndType" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AccessibilityType">
    <xs:annotation>
      <xs:documentation>Common accessibility elements for an address.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="HandicapInd" type="xs:boolean" nillable="true" minOccurs="0"/>
      <xs:element name="PublicTransportationInd" type="xs:boolean" nillable="true" minOccurs="0"/>
      <xs:element name="OffStreetParkingInd" type="xs:boolean" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="PhoneCountryCodeType">
    <xs:annotation>
      <xs:documentation>Telephone country code. Up to 3 digits long.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="\d{1,3}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PhoneAreaCodeType">
    <xs:annotation>
      <xs:documentation>Telephone area code. Up to 5 digits long for international numbers. In the USA, this is 3 digits.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="\d{1,5}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PhoneSubscriberNumberType">
    <xs:annotation>
      <xs:documentation>Telephone subscriber number. Up to 14 digits long for international numbers.. In the USA, your local 7 digit number.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="\d{1,14}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PhoneExtensionNumberType">
    <xs:annotation>
      <xs:documentation>Telephone extension number. Up to 20 digits long.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="\d{1,20}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PhoneTypeCodeType">
    <xs:annotation>
      <xs:documentation>Phone categories.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="LANDLINE"/>
      <xs:enumeration value="MOBILE"/>
      <xs:enumeration value="FAX"/>
      <xs:enumeration value="PAGER"/>
      <xs:enumeration value="TDD"/>
      <xs:enumeration value="OTHER"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="PhoneType">
    <xs:annotation>
      <xs:documentation>Structured full international telephone number. Default country code "1" is United States. Example: 01 612 1234567 #54321</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="demo:ContactType">
        <xs:sequence>
          <xs:element name="PhoneTypeCode" type="demo:PhoneTypeCodeType" nillable="true" minOccurs="0"/>
          <xs:element name="Country" type="demo:PhoneCountryCodeType" default="1" nillable="true" minOccurs="0"/>
          <xs:element name="Area" type="demo:PhoneAreaCodeType" nillable="true" minOccurs="0"/>
          <xs:element name="Subscriber" type="demo:PhoneSubscriberNumberType" minOccurs="0"/>
          <xs:element name="Extension" type="demo:PhoneExtensionNumberType" nillable="true" minOccurs="0"/>
          <xs:element name="ActiveInd" type="demo:ActiveIndType" nillable="true" minOccurs="0"/>
          <xs:element name="OptInInd" type="demo:CorrespondanceSrvcAgrmntType" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="EMailType">
    <xs:annotation>
      <xs:documentation>Structured Electronic Address with Email</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="demo:ContactType">
        <xs:sequence>
          <xs:element name="EMailTypeCode" type="demo:EMailTypeCodeType" nillable="true" minOccurs="0"/>
          <xs:element name="EMailPreference" type="demo:EMailPreferenceType" nillable="true" minOccurs="0"/>
          <xs:element name="EMail" type="demo:EMailAddressType" nillable="true" minOccurs="0"/>
          <xs:element name="ValidInd" type="demo:ActiveIndType" nillable="true" minOccurs="0"/>
          <xs:element name="OptInInd" type="demo:CorrespondanceSrvcAgrmntType" nillable="true" minOccurs="0"/>
          <xs:element name="UndeliveredEmail" type="demo:UndeliveredEmailType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="EMailTypeCodeType">
    <xs:annotation>
      <xs:documentation>Email Categories: Primary, Secondary, etc</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
      <xs:enumeration value="PRIMARY"/>
      <xs:enumeration value="SECONDARY"/>
      <xs:enumeration value="UNKNOWN"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EMailAddressType">
    <xs:annotation>
      <xs:documentation>Email address.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="6"/>
      <xs:maxLength value="320"/>
      <xs:pattern value="([0-9a-zA-Z]+[\-\._+])*[0-9a-zA-Z]+@([\-0-9a-zA-Z]+[\.])+[a-zA-Z]{2,6}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EMailPreferenceType">
    <xs:annotation>
      <xs:documentation>Identifies a Person's preference to Share Email Address, options include 1- Person does not have an Email Address, 2 - Person has email Address but does not want to Share, 3 - Person Has email Address and has Shared it, 4 - Unknown</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
      <xs:enumeration value="NOEMAIL"/>
      <xs:enumeration value="SHARED"/>
      <xs:enumeration value="NOTSHARED"/>
      <xs:enumeration value="UNKNOWN"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="WebSiteAddressType">
    <xs:annotation>
      <xs:documentation>Web site URL address.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="12"/>
      <xs:maxLength value="300"/>
      <xs:pattern value="(http|HTTP)[sS]?://([\-0-9a-zA-Z]+[\.])+[a-zA-Z]{2,6}/?.*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="WebSiteType">
    <xs:annotation>
      <xs:documentation>Structured Element to define Website Address and Service Agrement</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="demo:ContactType">
        <xs:sequence>
          <xs:element name="Website" type="demo:WebSiteAddressType" nillable="true" minOccurs="0"/>
          <xs:element name="ActiveFlag" type="demo:ActiveIndType" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="CodeNameType">
    <xs:annotation>
      <xs:documentation>Demographic code names for use when extending the common:CodeName substitution group.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="common:CodeNameType">
      <xs:enumeration value="CONTACT_TYPE"/>
      <xs:enumeration value="DAY_OF_WEEK"/>
      <xs:enumeration value="GENDER"/>
      <xs:enumeration value="GEO_ACCURACY"/>
      <xs:enumeration value="LANGUAGE"/>
      <xs:enumeration value="MONTH"/>
      <xs:enumeration value="NAME_PREFIX"/>
      <xs:enumeration value="NAME_SUFFIX"/>
      <xs:enumeration value="PHONE_TYPE"/>
      <xs:enumeration value="STATE"/>
      <xs:enumeration value="TERRITORY"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CodeDomainType">
    <xs:annotation>
      <xs:documentation>Demographic code domains for use when extending the common:CodeDomain substitution group.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="common:CodeDomainType">
      <xs:enumeration value="COMMON"/>
      <xs:enumeration value="DEMOGRAPHIC"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CodeEntityType">
    <xs:annotation>
      <xs:documentation>Demographic code entities for use when extending the common:CodeEntity substitution group.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="common:CodeEntityType">
      <xs:enumeration value="ADDRESS"/>
      <xs:enumeration value="CONTACTINFO"/>
      <xs:enumeration value="LOCATION"/>
      <xs:enumeration value="PERSON"/>
      <xs:enumeration value="PERSONNAME"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="CodeName" type="demo:CodeNameType" substitutionGroup="common:CodeName">
    <xs:annotation>
      <xs:documentation>Demographic code names for use when extending the common:CodeName substitution group.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="CodeDomain" type="demo:CodeDomainType" substitutionGroup="common:CodeDomain">
    <xs:annotation>
      <xs:documentation>Demographic code domains for use when extending the common:CodeDomain substitution group.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="CodeEntity" type="demo:CodeEntityType" substitutionGroup="common:CodeEntity">
    <xs:annotation>
      <xs:documentation>Demographic code entities for use when extending the common:CodeEntity substitution group.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="CitizenshipType">
    <xs:annotation>
      <xs:documentation>Person's Full Citizenship information with Effective Dates</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="CountryCode" type="demo:CountryCodeType"/>
      <xs:element name="CountryName" type="demo:CountryNameType"/>
      <xs:element name="EffectiveDates" type="common:DateRangeType"/>
      <xs:element name="ActiveStatusFlag" type="demo:ActiveIndType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DriverLicenseStatePairType">
    <xs:annotation>
      <xs:documentation>Person's Driver License Nbr and Issuing State Pair</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DriverLicenseNbr" type="xs:string"/>
      <xs:element name="DriverLicenseIssueState" type="demo:StateCodeType"/>
      <xs:element name="ActiveStatusFlag" type="demo:ActiveIndType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="ActiveIndType">
    <xs:annotation>
      <xs:documentation>Element to be used to check Active Status for associated Information Values Y or N</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Y"/>
      <xs:enumeration value="N"/>
      <xs:enumeration value="U"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="OptInIndType">
    <xs:annotation>
      <xs:documentation>Element to be used for Contact Preference Options, Values Y - Opt In, N - Opt Out, U - Unknown, Not Specified</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:whiteSpace value="replace"/>
      <xs:enumeration value="Y"/>
      <xs:enumeration value="N"/>
      <xs:enumeration value="U"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ContactPreferenceType">
    <xs:annotation>
      <xs:documentation>Element to be used for Contact Preference, values F - First, S - Second, O - Other, N - Not Applicable</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="F"/>
      <xs:enumeration value="S"/>
      <xs:enumeration value="O"/>
      <xs:enumeration value="N"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="PersonContactPreferenceType">
    <xs:annotation>
      <xs:documentation>This captures any interaction between a Member and an agent from UnitedHealth Group (UHG). A contact will always have an agent (who delivered the service) and a delivery channel (how it was delivered).</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ContactEvent" type="demo:ContactEventType" nillable="true" minOccurs="0" maxOccurs="5"/>
      <xs:element name="ContactLanguagePreference" type="demo:LanguageType" nillable="true" minOccurs="0" maxOccurs="5"/>
      <xs:element name="CorrespondancePreference" type="demo:CorrespondancePreferenceType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="ContactEventType">
    <xs:annotation>
      <xs:documentation>The occurrence of a communication between the person and another person and/or an organization.  This would also describe when the communication happened and the purpose of it.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="MARKET CAMPAIGN"/>
      <xs:enumeration value="ACTIVATION CAMPAIGN"/>
      <xs:enumeration value="SERVICE CONTACT"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="CorrespondancePreferenceType">
    <xs:annotation>
      <xs:documentation>Structured Element for an Individuals Correpondance Preference, includes Document Types, Prefered Mode of Communication, etc</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DocumentPreference" type="demo:DocumentPreferenceType" nillable="true" minOccurs="0" maxOccurs="10"/>
      <xs:element name="SendMailAgrmnt" type="demo:CorrespondanceSrvcAgrmntType" nillable="true" minOccurs="0"/>
      <xs:element name="SendEmailAgrmnt" type="demo:CorrespondanceSrvcAgrmntType" nillable="true" minOccurs="0"/>
      <xs:element name="CallAgrmnt" type="demo:CorrespondanceSrvcAgrmntType" nillable="true" minOccurs="0"/>
      <xs:element name="PreferedMaterialFormat" type="demo:DocumentMaterialType" nillable="true" minOccurs="0"/>
      <xs:element name="PaperlessAgreement" type="demo:CorrespondanceSrvcAgrmntType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DocumentType">
    <xs:annotation>
      <xs:documentation>Structured Element for the different Types of Documents sent to an Individual</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DocumentTypeCode" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="25"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="DocumentName" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="250"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="DocumentRegulatoryReq" type="demo:DocumentRegulatoryReqType" nillable="true" minOccurs="0"/>
      <xs:element name="DocumentAvailability" type="demo:DocumentAvailabilityType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CorrespondanceSrvcAgrmntType">
    <xs:annotation>
      <xs:documentation>Structured Element for Correspondace Service Agreement, identifies if an Individual wishes to enrol in the elecronic fulfillments only and the date of enrollment. This element was added for GPS eFulfillments for Consumer but can be used for other Host Systems as well.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="SrvcAgrmntFlag" type="demo:OptInIndType"/>
      <xs:element name="SrvcAgrmntDate" type="xs:date" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="BankruptcyPetitionDateType">
    <xs:annotation>
      <xs:documentation>Date on which a Person Filed Bankruptcy Petition, this is optional and by default will be blank</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date"/>
  </xs:simpleType>
  <xs:simpleType name="DocumentMaterialType">
    <xs:annotation>
      <xs:documentation>Defines the Prefered Material Format for Documents sent to Individuals, values incldue Small Text, Large Text, Brail, etc</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="20"/>
      <xs:enumeration value="STANDARD PRINT"/>
      <xs:enumeration value="LARGE PRINT"/>
      <xs:enumeration value="BRAILLE PRINT"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DocumentAvailabilityType">
    <xs:annotation>
      <xs:documentation>Defines Document Availability; whether Online Soft Copy, Hard Copy, Both, etc</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
      <xs:enumeration value="HARDCOPY"/>
      <xs:enumeration value="SOFTCOPY"/>
      <xs:enumeration value="BOTH"/>
      <xs:enumeration value="UNKNOWN"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DocumentRegulatoryReqType">
    <xs:annotation>
      <xs:documentation>Element defines whether Document is Compulsory or Optional based on Govt. Regulations</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:length value="8"/>
      <xs:enumeration value="REQUIRED"/>
      <xs:enumeration value="OPTIONAL"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DocumentSendType">
    <xs:annotation>
      <xs:documentation>Element defines the mode of sending Document, Email, Mail, Both, etc</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="7"/>
      <xs:enumeration value="EMAIL"/>
      <xs:enumeration value="MAIL"/>
      <xs:enumeration value="BOTH"/>
      <xs:enumeration value="UNKNOWN"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="DocumentPreferenceType">
    <xs:annotation>
      <xs:documentation>Extension of Document Type with Recipant Preferences like Send Mode, Service Agreement</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="demo:DocumentType">
        <xs:sequence>
          <xs:element name="SendSrvcAgrmnt" type="demo:CorrespondanceSrvcAgrmntType" nillable="true" minOccurs="0"/>
          <xs:element name="SendPreference" type="demo:DocumentSendType" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="UndeliveredEmailReasonIDType">
    <xs:restriction base="xs:int">
      <xs:totalDigits value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="UndeliveredEmailType">
    <xs:annotation>
      <xs:documentation>Undelivered Email Information</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="UndeliveredEmailReasonID" type="demo:UndeliveredEmailReasonIDType" minOccurs="0"/>
      <xs:element name="UndeliveredEmailReasonDesc" type="xs:string" minOccurs="0"/>
      <xs:element name="UndeliveredEmailDate" type="xs:date" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="MarketingSourceCodeType">
    <xs:restriction base="xs:string">
      <xs:maxLength value="7"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="AdditionalAttributesType">
    <xs:annotation>
      <xs:documentation>Additional Attributes Type</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Name" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="Value" type="demo:ActiveIndType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/service/ControlModifier.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://ConsumerServiceMediation/service" xmlns:common="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10" xmlns:consv="http://ConsumerServiceMediation/service" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:bons0="http://enterprise.unitedhealthgroup.com/schema/canoncial/consumer/v4_03" xmlns:bons1="http://ovations.unitedhealthgroup.com/schema/ovations/consumer/v2_10" xmlns:bons2="http://ovations.unitedhealthgroup.com/schema/ovations/claims/v2_10" xmlns:bons3="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10" xmlns:bons4="http://ovations.unitedhealthgroup.com/schema/ovations/customer/v2_10" xmlns:bons5="http://ovations.unitedhealthgroup.com/schema/ovations/account/v2_10" xmlns:bons6="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03">
  <xs:import schemaLocation="../canonical/plan.xsd" namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03"></xs:import>
  <xs:import schemaLocation="../ovations/ovations_account.xsd" namespace="http://ovations.unitedhealthgroup.com/schema/ovations/account/v2_10"></xs:import>
  <xs:import schemaLocation="../ovations/ovations_customer.xsd" namespace="http://ovations.unitedhealthgroup.com/schema/ovations/customer/v2_10"></xs:import>
  <xs:import schemaLocation="../ovations/ovations_common.xsd" namespace="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10"></xs:import>
  <xs:import schemaLocation="../ovations/ovations_claims.xsd" namespace="http://ovations.unitedhealthgroup.com/schema/ovations/claims/v2_10"></xs:import>
  <xs:import schemaLocation="../ovations/ovations_consumer.xsd" namespace="http://ovations.unitedhealthgroup.com/schema/ovations/consumer/v2_10"></xs:import>
  <xs:import schemaLocation="../canonical/consumer.xsd" namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/consumer/v4_03"></xs:import>
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10" schemaLocation="../ovations/ovations_common.xsd"/>
  <xs:complexType name="ControlModifier">
    <xs:sequence>
      <xs:element minOccurs="0" name="MemberNo" type="bons0:ConsumerIDType"></xs:element>
      <xs:element minOccurs="0" name="InsuredCode" type="bons1:InsuredCodeType"></xs:element>
      <xs:element minOccurs="0" name="DependentCode" type="bons2:DependentCodeType"/>
      <xs:element minOccurs="0" name="AssociationCode" type="bons3:AssociationCodeType"/>
      <xs:element minOccurs="0" name="EmployerAccountID" type="bons4:EmployerAccountIDType"/>
      <xs:element minOccurs="0" name="EmployerID" type="bons4:EmployerIDType"/>
      <xs:element minOccurs="0" name="IndividualID" type="bons5:IndividualIDType"/>
      <xs:element minOccurs="0" name="AccountID" type="bons5:AccountIDType"/>
      <xs:element minOccurs="0" name="AddressID" type="bons3:AddressIDValueType"/>
      <xs:element minOccurs="0" name="PlanID" type="bons6:PlanIDType"/>
    </xs:sequence>
    <xs:attribute name="BusinessType" type="consv:BusinessType"/>
  </xs:complexType>
  <xs:simpleType name="BusinessType">
    <xs:union memberTypes="common:BusinessValueType consv:BusinessValueTypeALL"/>
  </xs:simpleType>
  <xs:simpleType name="BusinessValueTypeALL">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALL"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/canonical/plan.xsd</con:url><con:content><![CDATA[<!--Created with Liquid XML Studio 1.0.8.0 (http://www.liquid-technologies.com)-->
<xs:schema targetNamespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03" elementFormDefault="qualified" attributeFormDefault="unqualified" version="4.0.3" xmlns:demo="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" xmlns:plan="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03" xmlns:common="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" schemaLocation="demographic.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" schemaLocation="common.xsd"/>
  <xs:simpleType name="ProductCodeType">
    <xs:annotation>
      <xs:documentation>Product code.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="25"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ContractStatusCodeType">
    <xs:annotation>
      <xs:documentation>Contract status type.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ACTIVE"/>
      <xs:enumeration value="TERMINATED"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PolicyTypeCodeType">
    <xs:annotation>
      <xs:documentation>Types of plan policies</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="MEDICAL"/>
      <xs:enumeration value="RX"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PlanTypeCodeType">
    <xs:annotation>
      <xs:documentation>Plan type code</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="PFFS"/>
      <xs:enumeration value="HMO"/>
      <xs:enumeration value="HMOPOS"/>
      <xs:enumeration value="PPO"/>
      <xs:enumeration value="LPPO"/>
      <xs:enumeration value="CCOTH"/>
      <xs:enumeration value="RPPO"/>
      <xs:enumeration value="SHMO"/>
      <xs:enumeration value="RIDER"/>
      <xs:enumeration value="SIERRA PDP"/>
      <xs:enumeration value="EMPLOYER_PDP"/>
      <xs:enumeration value="PACIFICARE_PDP"/>
      <xs:enumeration value="UHRX_PDP"/>
      <xs:enumeration value="UHMEDRX_PDP"/>
      <xs:enumeration value="AARP_PDP"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="GroupTypeCodeType">
    <xs:annotation>
      <xs:documentation>Group type code</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="INDIVIDUAL"/>
      <xs:enumeration value="GROUP"/>
      <xs:enumeration value="FAMILY COVERAGE"/>
      <xs:enumeration value="SPONSORED INDIVIDUAL"/>
      <xs:enumeration value="AGED OFF FAMILY"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SNPFlagType">
    <xs:annotation>
      <xs:documentation>SNP Flag.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PlanIDType">
    <xs:annotation>
      <xs:documentation>Plan Identifier</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:group name="PlanKeyGroup">
    <xs:annotation>
      <xs:documentation>Searchable elements of a plan</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="PlanID" type="plan:PlanIDType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Such as from MAPS.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ProductCode" type="plan:ProductCodeType" minOccurs="0"/>
      <xs:element name="Contract" type="plan:ContractType" minOccurs="0"/>
      <xs:element name="PBPNo" type="plan:PBPNoType" minOccurs="0"/>
      <xs:element name="SNPFlag" type="plan:SNPFlagType" minOccurs="0"/>
      <xs:element name="BusinessSegment" type="xs:string" minOccurs="0" maxOccurs="10"/>
      <xs:element name="PlanTypeCode" type="plan:PlanTypeCodeType" minOccurs="0" maxOccurs="10"/>
      <xs:element name="Brand" type="xs:string" minOccurs="0" maxOccurs="10"/>
    </xs:sequence>
  </xs:group>
  <xs:complexType name="PlanType">
    <xs:annotation>
      <xs:documentation>A plan.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:group ref="plan:PlanKeyGroup"/>
      <xs:element name="PlanName" type="xs:string" minOccurs="0"/>
      <xs:element name="EffectiveDates" type="common:DateRangeType" minOccurs="0"/>
      <xs:element name="OpenToSalesInd" type="xs:boolean" minOccurs="0"/>
      <xs:element name="LegalDescription" type="xs:string" minOccurs="0"/>
      <xs:element name="Notes" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:group name="GroupKeyGroup">
    <xs:annotation>
      <xs:documentation>Searchable elements of a group</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="GroupID" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Such as from MAPS.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GroupNo" type="xs:string" minOccurs="0"/>
      <xs:element name="GroupTypeCode" type="plan:GroupTypeCodeType" minOccurs="0"/>
      <xs:element name="MasterGroupNo" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:group>
  <xs:complexType name="GroupType">
    <xs:annotation>
      <xs:documentation>A group.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:group ref="plan:GroupKeyGroup"/>
      <xs:element name="GroupName" type="xs:string" minOccurs="0"/>
      <xs:element name="SourceSystemID" type="common:NameValuePairType" minOccurs="0" maxOccurs="10">
        <xs:annotation>
          <xs:documentation>Holds things like COSMOS DIV or Panel, NICE Policy PNI, or PULSE Master Group Number</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EffectiveDates" type="common:DateRangeType" minOccurs="0"/>
      <xs:element name="OpenToEnrollmentInd" type="xs:boolean" minOccurs="0"/>
      <xs:element name="Notes" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ContractType">
    <xs:annotation>
      <xs:documentation>Contract type.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ContractNo" type="xs:string" minOccurs="0"/>
      <xs:element name="ContractYear" type="xs:gYear" minOccurs="0"/>
      <xs:element name="ContractID" type="plan:ContractIDType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="CodeNameType">
    <xs:annotation>
      <xs:documentation>Plan code names for use when extending the common:CodeName substitution group.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="common:CodeNameType">
      <xs:enumeration value="CONTRACT_STATUS"/>
      <xs:enumeration value="POLICY_TYPE_CODE"/>
      <xs:enumeration value="GROUP_TYPE_CODE"/>
      <xs:enumeration value="PLAN_TYPE_CODE"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CodeDomainType">
    <xs:annotation>
      <xs:documentation>Plan code domains for use when extending the common:CodeDomain substitution group.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="common:CodeDomainType">
      <xs:enumeration value="PLAN"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CodeEntityType">
    <xs:annotation>
      <xs:documentation>Plan code entities for use when extending the common:CodeEntity substitution group.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="common:CodeEntityType">
      <xs:enumeration value="PLAN"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ContractIDType">
    <xs:annotation>
      <xs:documentation>Contract ID</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:totalDigits value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PBPNoType">
    <xs:annotation>
      <xs:documentation>PBP Number</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:element name="CodeName" type="plan:CodeNameType" substitutionGroup="common:CodeName">
    <xs:annotation>
      <xs:documentation>Plan code names for use when extending the common:CodeName substitution group.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="CodeDomain" type="plan:CodeDomainType" substitutionGroup="common:CodeDomain">
    <xs:annotation>
      <xs:documentation>Plan code domains for use when extending the common:CodeDomain substitution group.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="CodeEntity" type="plan:CodeEntityType" substitutionGroup="common:CodeEntity">
    <xs:annotation>
      <xs:documentation>Plan code entities for use when extending the common:CodeEntity substitution group.</xs:documentation>
    </xs:annotation>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/ovations/ovations_customer.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2010 rel. 2 (http://www.altova.com) by Ramanujan
		Gopalan (UNITED HEALTHGROUP)-->
<xs:schema targetNamespace="http://ovations.unitedhealthgroup.com/schema/ovations/customer/v2_10" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.1.0" xmlns="http://ovations.unitedhealthgroup.com/schema/ovations/customer/v2_10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:common="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" xmlns:demo="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" xmlns:plan="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03">
  <xs:import schemaLocation="../canonical/common.xsd" namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00"></xs:import>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" schemaLocation="../canonical/demographic.xsd"/>
  <xs:complexType name="EmployerType">
    <xs:annotation>
      <xs:documentation>Employer details</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="EmployerID" type="EmployerIDType" nillable="true" minOccurs="0"/>
      <xs:element name="EmployerName" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="Branch" type="BranchType" minOccurs="0" maxOccurs="200"/>
      <xs:element name="EmployerContact" type="demo:ContactInfoType" nillable="true" minOccurs="0" maxOccurs="10"/>
      <xs:element name="EmployersType" type="EmployersType" nillable="true" minOccurs="0"/>
      <xs:element name="EmployerGroup" type="EmployerGroupType" nillable="true" minOccurs="0"/>
      <xs:element name="EffectiveDates" type="common:DateRangeType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="EmployersType">
    <xs:restriction base="xs:string">
      <xs:pattern value="\w{1,50}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EmployerGroupType">
    <xs:restriction base="xs:string">
      <xs:pattern value="\w{1,50}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="BranchType">
    <xs:sequence>
      <xs:element name="BranchID" type="BranchIDType" minOccurs="0"/>
      <xs:element name="BranchName" type="xs:string" minOccurs="0"/>
      <xs:element name="BranchNo" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="EmployerIDType">
    <xs:restriction base="xs:string">
      <xs:pattern value="\w{0,50}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EmployerAccountIDType">
    <xs:restriction base="xs:string">
      <xs:pattern value="\w{0,100}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BranchIDType">
    <xs:annotation>
      <xs:documentation>Employer's subsidy group Number</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:length value="3"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/ovations/ovations_common.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.1.0" xmlns="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:demo="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" xmlns:ovacons="http://ovations.unitedhealthgroup.com/schema/ovations/consumer/v2_10" xmlns:cons="http://enterprise.unitedhealthgroup.com/schema/canoncial/consumer/v4_03" xmlns:ovacust="http://ovations.unitedhealthgroup.com/schema/ovations/customer/v2_10" xmlns:ovaaccount="http://ovations.unitedhealthgroup.com/schema/ovations/account/v2_10" xmlns:ovaclms="http://ovations.unitedhealthgroup.com/schema/ovations/claims/v2_10" xmlns:ovaplan="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03">
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03" schemaLocation="../canonical/plan.xsd"/>
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/account/v2_10" schemaLocation="ovations_account.xsd"/>
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/customer/v2_10" schemaLocation="ovations_customer.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/consumer/v4_03" schemaLocation="../canonical/consumer.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" schemaLocation="../canonical/demographic.xsd"/>
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/consumer/v2_10" schemaLocation="ovations_consumer.xsd"/>
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/claims/v2_10" schemaLocation="ovations_claims.xsd"/>
  <xs:simpleType name="YesNoNotSureType">
    <xs:annotation>
      <xs:documentation>Yes/No/Not Sure indicator</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="yes"/>
      <xs:enumeration value="no"/>
      <xs:enumeration value="not sure"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="QuestionInformationType">
    <xs:sequence>
      <xs:element name="QuestionList" type="QuestionListType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QuestionListType">
    <xs:sequence>
      <xs:element name="Question" type="QuestionType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Type" type="QuestionListAttributeType" use="required"/>
  </xs:complexType>
  <xs:complexType name="QuestionType">
    <xs:sequence>
      <xs:element name="Content" type="NameValuePairType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Parent" type="xs:string" use="optional"/>
  </xs:complexType>
  <xs:simpleType name="QuestionListAttributeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UWEligibility"/>
      <xs:enumeration value="Medical"/>
      <xs:enumeration value="BBA"/>
      <xs:enumeration value="CPAGA"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AsofDateType">
    <xs:restriction base="xs:date"/>
  </xs:simpleType>
  <xs:simpleType name="ProductType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="AddressIDValueType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="BooleanTrueFalseType">
    <xs:restriction base="xs:boolean">
      <xs:pattern value="true|false"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="NameValuePairType">
    <xs:annotation>
      <xs:documentation>A name-value pair, using common:AnyType to allow
				the value to be any XML type.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="Value" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="ImageIDType">
    <xs:restriction base="xs:string">
      <xs:pattern value="\w{1,20}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="HashIDType">
    <xs:restriction base="xs:string">
      <xs:pattern value="\w{1,50}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BusinessValueType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="GOVT"/>
      <xs:enumeration value="SHIP"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TransactionIDType">
    <xs:annotation>
      <xs:documentation>TransactionID to differentiate between different transactions if same data is being populated for Transaction fields</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="DateTimeType">
    <xs:annotation>
      <xs:documentation>DateTime to be used for populating dateTime value</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime"/>
  </xs:simpleType>
  <xs:simpleType name="DateType">
    <xs:annotation>
      <xs:documentation>Date to be used for populating date value</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date"/>
  </xs:simpleType>
  <xs:simpleType name="FullName">
    <xs:annotation>
      <xs:documentation>FullName to hold data from source systems that returns fullname not firstname, lastname etc</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="AssociationCodeType">
    <xs:annotation>
      <xs:documentation>Association Code</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:complexType name="ControlModifierType">
    <xs:annotation>
      <xs:documentation>Control Modifier Type</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="MemberNo" type="cons:ConsumerIDType" minOccurs="0"/>
      <xs:element name="InsuredCode" type="ovacons:InsuredCodeType" minOccurs="0"/>
      <xs:element name="DependentCode" type="ovaclms:DependentCodeType" minOccurs="0"/>
      <xs:element name="AssociationCode" type="AssociationCodeType" minOccurs="0"/>
      <xs:element name="EmployerAccountID" type="ovacust:EmployerAccountIDType" minOccurs="0"/>
      <xs:element name="EmployerID" type="ovacust:EmployerIDType" minOccurs="0"/>
      <xs:element name="IndividualID" type="ovaaccount:IndividualIDType" minOccurs="0"/>
      <xs:element name="AccountID" type="ovaaccount:AccountIDType" minOccurs="0"/>
      <xs:element name="AddressID" type="AddressIDValueType" minOccurs="0"/>
      <xs:element name="PlanID" type="ovaplan:PlanIDType" minOccurs="0"/>
      <xs:element minOccurs="0" name="MedicareClaimNumber" type="demo:MedicareClaimNumberType"/>
    </xs:sequence>
    <xs:attribute name="BusinessType" type="BusinessValueType" use="required"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/ovations/ovations_consumer.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2010 rel. 2 (http://www.altova.com) by Ramanujan
		Gopalan (UNITED HEALTHGROUP)-->
<xs:schema targetNamespace="http://ovations.unitedhealthgroup.com/schema/ovations/consumer/v2_10" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.1.0" xmlns:ovcons="http://ovations.unitedhealthgroup.com/schema/ovations/consumer/v2_10" xmlns:common="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" xmlns:cons="http://enterprise.unitedhealthgroup.com/schema/canoncial/consumer/v4_03" xmlns:demo="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" xmlns:plan="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03" xmlns:bill="http://ovations.unitedhealthgroup.com/schema/ovations/billing/v2_10" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/consumer/v4_03" schemaLocation="../canonical/consumer.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" schemaLocation="../canonical/common.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" schemaLocation="../canonical/demographic.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03" schemaLocation="../canonical/plan.xsd"/>
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/billing/v2_10" schemaLocation="../ovations/ovations_billing.xsd"/>
  <xs:complexType name="OvationsConsumerPersonProfileType" mixed="false">
    <xs:annotation>
      <xs:documentation>Structure Element to define Consumer 
			Person Profile Details</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="cons:ConsumerPersonProfileType">
        <xs:sequence>
          <xs:element name="AdditionalID" type="common:NameValuePairType" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="InvalidAddressInd" type="demo:ActiveIndType" nillable="true" minOccurs="0"/>
          <xs:element name="LOB" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="AdditionalAttribute" type="common:NameValuePairType" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="OvationsMemberProfile" type="ovcons:MemberProfile" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="OutOfAreaInfo" type="ovcons:OutOfAreaInfoType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MemberProfile">
    <xs:annotation>
      <xs:documentation>Member profile information</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="MemberNo" type="cons:ConsumerIDType" minOccurs="0"/>
      <xs:element name="SystemID" type="ovcons:SystemIDType" minOccurs="0"/>
      <xs:element name="AssociationCode" type="xs:string" minOccurs="0"/>
      <xs:element name="SecondaryMemberNo" type="xs:string" minOccurs="0"/>
      <xs:element name="EffectiveDates" type="common:DateRangeType" minOccurs="0"/>
      <xs:element name="MembershipRenewalPeriod" type="ovcons:RenewalPeriodType" minOccurs="0"/>
      <xs:element name="InsuredCode" type="ovcons:InsuredCodeType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SystemIDType">
    <xs:sequence>
      <xs:element name="SystemID" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="MemberNoSystemID" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="EligibilitySystemID" type="xs:string" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="InsuredCodeType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="RenewalPeriodType">
    <xs:restriction base="xs:integer">
      <xs:pattern value="\d{1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="OutOfAreaInfoType">
    <xs:sequence>
      <xs:element name="OutofAreaInd" type="demo:ActiveIndType" nillable="true" minOccurs="0"/>
      <xs:element name="OutOfAreaDisenrollmentDate" type="xs:date" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/ovations/ovations_billing.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2009 (http://www.altova.com) by Praburaj Thangaraj (UNITED HEALTHGROUP)-->
<xs:schema targetNamespace="http://ovations.unitedhealthgroup.com/schema/ovations/billing/v2_10" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.1.0" xmlns="http://ovations.unitedhealthgroup.com/schema/ovations/billing/v2_10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:cons="http://enterprise.unitedhealthgroup.com/schema/canoncial/consumer/v4_03" xmlns:common="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" xmlns:demo="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" xmlns:plan="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03" xmlns:ovcom="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10" xmlns:ovcons="http://ovations.unitedhealthgroup.com/schema/ovations/consumer/v2_10" xmlns:ovacct="http://ovations.unitedhealthgroup.com/schema/ovations/account/v2_10">
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" schemaLocation="../canonical/demographic.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" schemaLocation="../canonical/common.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03" schemaLocation="../canonical/plan.xsd"/>
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10" schemaLocation="ovations_common.xsd"/>
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/consumer/v2_10" schemaLocation="ovations_consumer.xsd"/>
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/account/v2_10" schemaLocation="ovations_account.xsd"/>
  <xs:complexType name="BillingType">
    <xs:sequence>
      <xs:element name="BatchID" type="BatchIDType" nillable="true" minOccurs="0"/>
      <xs:element name="ProcessingSiteID" type="SiteIDType" nillable="true" minOccurs="0"/>
      <xs:element name="DelinquencyType" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="BillingTransaction" type="BillingTransactionType" nillable="true" minOccurs="0"/>
      <xs:element name="Payment" type="PaymentInfoType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BillingTransactionType">
    <xs:sequence>
      <xs:element name="TransactionID" type="ovcom:TransactionIDType" minOccurs="0"/>
      <xs:element name="TransactionAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="TransactionError" type="xs:string" nillable="true" minOccurs="0" maxOccurs="10"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PaymentTransactionType">
    <xs:sequence>
      <xs:element name="TransactionDateTime" type="ovcom:DateTimeType" minOccurs="0"/>
      <xs:element name="PaymentChannel" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="TransactionError" type="xs:string" nillable="true" minOccurs="0" maxOccurs="10"/>
      <xs:element name="Image" type="ovcom:ImageIDType" minOccurs="0"/>
      <xs:element name="TransactionTotalAmt" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="TransactionID" type="ovcom:TransactionIDType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BillingProfileType">
    <xs:sequence>
      <xs:element name="Bank" type="BankDetailType" minOccurs="0"/>
      <xs:element name="BillingFrequency" type="PaymentFrequencyType" minOccurs="0"/>
      <xs:element name="BillingMethod" type="PaymentMethodType" minOccurs="0"/>
      <xs:element name="ProfileTypeID" type="ProfileTypeIDType" nillable="true" minOccurs="0"/>
      <xs:element name="EffectiveDates" type="common:DateRangeType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PaymentProfileType">
    <xs:sequence>
      <xs:element name="PaymentMethod" type="PaymentType" minOccurs="0"/>
      <xs:element name="PaymentUpdateType" type="PaymentUpdateType" minOccurs="0"/>
      <xs:element name="PaymentFrequency" type="PaymentFrequencyType" minOccurs="0"/>
      <xs:element name="TotalAmt" type="common:AmountType" minOccurs="0"/>
      <xs:element name="EffectiveDates" type="common:DateRangeType" nillable="true" minOccurs="0"/>
      <xs:element name="PaymentTransaction" type="PaymentTransactionType" minOccurs="0"/>
      <xs:element name="BankDetail" type="BankDetailType" minOccurs="0"/>
      <xs:element name="MemberProfile" type="ovcons:MemberProfile" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="MemberName" type="demo:PersonNameType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BillingInfoType">
    <xs:sequence>
      <xs:element name="ResponsibleParty" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="DueDate" type="common:DateRangeType" nillable="true" minOccurs="0"/>
      <xs:element name="BillingStatus" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="PremiumAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="AmountOwed" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="ReceivableTypeValue" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="nafTotalAmt" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="nafTransaction" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="WithdrawalDay" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="PaidThruDate" type="xs:date" nillable="true" minOccurs="0"/>
      <xs:element name="PastDuePremiumAmt" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="paymentProfile" maxOccurs="unbounded" minOccurs="0" type="PaymentProfileType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PaymentInfoType">
    <xs:sequence>
      <xs:element name="PaymentMethod" type="PaymentType" nillable="true" minOccurs="0"/>
      <xs:element name="CheckOrRefNumber" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="PremiumAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="DuesAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="TotalAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="PaymentType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CHECK"/>
      <xs:enumeration value="MONEYORDER"/>
      <xs:enumeration value="EFT"/>
      <xs:enumeration value="COUPON"/>
      <xs:enumeration value="CMS"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PaymentUpdateType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UPDATE EFT"/>
      <xs:enumeration value="DISCONTINUE EFT"/>
      <xs:enumeration value="ONETIME EFT"/>
      <xs:enumeration value="CREDIT CARD"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PaymentFrequencyType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MONTHLY"/>
      <xs:enumeration value="YEARLY"/>
      <xs:enumeration value="ONETIME"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="BankDetailType">
    <xs:annotation>
      <xs:documentation>Bank details</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="AccountHolderName" type="demo:PersonNameType" nillable="true" minOccurs="0"/>
      <xs:element name="RoutingNumber" type="RoutingNumberType" nillable="true" minOccurs="0"/>
      <xs:element name="AccountNumber" type="AccountNumberType" nillable="true" minOccurs="0"/>
      <xs:element name="AccountType" type="AccountType" nillable="true" minOccurs="0"/>
      <xs:element name="AccountHolderContact" type="demo:AddressType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="RoutingNumberType">
    <xs:annotation>
      <xs:documentation>Consumer's Bank Routing Number</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]{9}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AccountNumberType">
    <xs:annotation>
      <xs:documentation>Consumer's Bank Account Number</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([a-zA-Z0-9]){3,17}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AccountType">
    <xs:annotation>
      <xs:documentation>Bank Account Type i.e., Checking, Savings</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Checking"/>
      <xs:enumeration value="Savings"/>
      <xs:enumeration value="SSA/RRB"/>
      <xs:enumeration value="OPM"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SiteIDType">
    <xs:restriction base="xs:string">
      <xs:pattern value="\w{1,50}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BatchIDType">
    <xs:restriction base="xs:string">
      <xs:pattern value="\w{1,50}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ProfileTypeIDType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="PaymentMethodType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ANNUALPAYER"/>
      <xs:enumeration value="Coupon Book"/>
      <xs:enumeration value="EFT"/>
      <xs:enumeration value="EFT-Checking"/>
      <xs:enumeration value="EFT-Savings"/>
      <xs:enumeration value="CMS-SSA/RRB"/>
      <xs:enumeration value="CMS-RRB"/>
      <xs:enumeration value="CMS-OPM"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="CardDetailType">
    <xs:sequence>
      <xs:element name="CardHolderName" type="demo:PersonNameType" nillable="true" minOccurs="0"/>
      <xs:element name="CardType" type="CardType" nillable="true" minOccurs="0"/>
      <xs:element name="CardNumber" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="ExpirationDate" type="ExpirationDateType" nillable="true" minOccurs="0"/>
      <xs:element name="SecurityID" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="CardHolderAddress" type="demo:AddressType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="CardType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Visa"/>
      <xs:enumeration value="Master"/>
      <xs:enumeration value="Discover"/>
      <xs:enumeration value="AMEX"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ExpirationDateType">
    <xs:restriction base="xs:string">
      <xs:pattern value="0[1-9]|1[012]/[0-9][0-9]"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="AccountInfoType">
    <xs:sequence>
      <xs:element name="Payment" type="PaymentInfoType" minOccurs="0"/>
      <xs:element name="Bank" type="BankDetailType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PremiumInfoType">
    <xs:sequence>
      <xs:element name="AsOfDate" type="ovcom:AsofDateType" minOccurs="0"/>
      <xs:element name="ConsumerPremium" type="ConsumerPremiumType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="ConsumerPremiumPlan" type="ConsumerPremiumPlanType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="BusinessType" type="ovcom:BusinessValueType"/>
  </xs:complexType>
  <xs:complexType name="ConsumerPremiumType">
    <xs:sequence>
      <xs:element name="IndividualID" type="ovacct:IndividualIDType" minOccurs="0"/>
      <xs:element name="PersonName" type="demo:PersonNameType" minOccurs="0"/>
      <xs:element name="PremiumRates" type="PremiumRatesType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="PremiumRateTotalAmt" type="common:AmountType" minOccurs="0"/>
      <xs:element name="PremiumAdjustments" type="PremiumAdjustmentsType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="PremiumAdjustmentsTotalAmt" type="common:AmountType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ConsumerPremiumPlanType">
    <xs:sequence>
      <xs:element name="PremiumRates" type="PremiumRatesType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="PremiumRateTotalAmt" type="common:AmountType" minOccurs="0"/>
      <xs:element name="PremiumAdjustments" type="PremiumAdjustmentsType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="PremiumAdjustmentsTotalAmt" type="common:AmountType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PremiumRatesType">
    <xs:sequence>
      <xs:element name="PremiumType" type="PremiumType" minOccurs="0"/>
      <xs:element name="PlanDescription" type="plan:PlanType" minOccurs="0"/>
      <xs:element name="DiscountType" type="xs:string" minOccurs="0"/>
      <xs:element name="RowLabel" type="RowLabelType" minOccurs="0"/>
      <xs:element name="RowType" type="RowValueType" minOccurs="0"/>
      <xs:element name="PartCRateAmt" type="common:AmountType" minOccurs="0"/>
      <xs:element name="PartDRateAmt" type="common:AmountType" minOccurs="0"/>
      <xs:element name="RateAmtDue" type="common:AmountType" minOccurs="0"/>
      <xs:element name="RateSubTotalAmt" type="common:AmountType" minOccurs="0"/>
      <xs:element name="BenefitModRateInd" type="ovcom:YesNoNotSureType" minOccurs="0"/>
      <xs:element name="RateType" type="xs:string" minOccurs="0"/>
      <xs:element name="AreaID" type="xs:string" minOccurs="0"/>
      <xs:element name="Age" type="common:PositiveIntegerRangeType" minOccurs="0"/>
      <xs:element name="SmokerInd" type="xs:boolean" nillable="true" minOccurs="0"/>
      <xs:element name="DisabledInd" type="DisabledIndType" minOccurs="0"/>
      <xs:element name="AdjustedBase" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PremiumAdjustmentsType">
    <xs:sequence>
      <xs:element name="PremiumType" type="PremiumType" minOccurs="0"/>
      <xs:element name="AdjustmentDescription" type="xs:string" minOccurs="0"/>
      <xs:element name="RowLabel" type="RowLabelType" minOccurs="0"/>
      <xs:element name="AdjustmentCalcAgainstAmt" type="common:AmountType" minOccurs="0"/>
      <xs:element name="AdjustmentAmt" type="common:AmountType" minOccurs="0"/>
      <xs:element name="AdjustmentResultAmt" type="common:AmountType" minOccurs="0"/>
      <xs:element name="AdjustmentSubTotalAmt" type="common:AmountType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="PremiumType">
    <xs:annotation>
      <xs:documentation>Premium Type</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="RowLabelType">
    <xs:annotation>
      <xs:documentation>Row Label - Base Rate or Insured Plan Adjustment Name</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="RowValueType">
    <xs:annotation>
      <xs:documentation>Row Type - Insured Surcharge Name</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="DisabledIndType">
    <xs:annotation>
      <xs:documentation>An E indicates an ESRD rate. Allowed values:N,Y,E</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="N"/>
      <xs:enumeration value="Y"/>
      <xs:enumeration value="E"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/ovations/ovations_claims.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2009 (http://www.altova.com) by Praburaj Thangaraj (UNITED HEALTHGROUP)-->
<!--edited with XMLSpy v2009 (http://www.altova.com) by Praburaj Thangaraj
	(UNITED HEALTHGROUP)-->
<xs:schema targetNamespace="http://ovations.unitedhealthgroup.com/schema/ovations/claims/v2_10" elementFormDefault="qualified" version="2.1.0" xmlns:demo="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" xmlns:ovcom="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10" xmlns:common="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" xmlns:ovaprv="http://ovations.unitedhealthgroup.com/schema/ovations/provider/ovaprovider/v2_10" xmlns:ovaplan="http://ovations.unitedhealthgroup.com/schema/ovations/planpolicy/plan/v2_10" xmlns:plan="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03" xmlns:ovaclms="http://ovations.unitedhealthgroup.com/schema/ovations/claims/v2_10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:bons0="http://enterprise.unitedhealthgroup.com/schema/canoncial/consumer/v4_03">
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/consumer/v4_03" schemaLocation="../canonical/consumer.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" schemaLocation="../canonical/demographic.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03" schemaLocation="../canonical/plan.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" schemaLocation="../canonical/common.xsd"/>
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/planpolicy/plan/v2_10" schemaLocation="ovations_plan.xsd"/>
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/provider/ovaprovider/v2_10" schemaLocation="ovations_provider.xsd"/>
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10" schemaLocation="ovations_common.xsd"/>
  <xs:complexType name="Claims">
    <xs:sequence>
      <xs:element name="ClaimInfo" type="ovaclms:ClaimInfoType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="PagingInfo" type="ovaclms:PagingInfoType" nillable="true" minOccurs="0"/>
      <xs:element name="MemberNo" type="bons0:ConsumerIDType" minOccurs="0"/>
      <xs:element name="DependentCode" type="ovaclms:DependentCodeType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="BusinessType" type="ovcom:BusinessValueType"/>
  </xs:complexType>
  <xs:complexType name="PagingInfoType">
    <xs:sequence>
      <xs:element name="MoreClaimsInd" type="xs:boolean" nillable="true" minOccurs="0"/>
      <xs:element name="LastClaimNumber" type="demo:MedicareClaimNumberType" nillable="true" minOccurs="0"/>
      <xs:element name="ClaimsCountType" type="ovaclms:ClaimsCountType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimInfoType">
    <xs:sequence>
      <xs:element name="ClaimSystem" type="ovaclms:ClaimSystemType" nillable="true" minOccurs="0"/>
      <xs:element name="ClaimNumber" type="ovaclms:ClaimNumberType" nillable="true" minOccurs="0"/>
      <xs:element name="ClaimType" type="ovaclms:ClaimValueType" nillable="true" minOccurs="0"/>
      <xs:element name="MedSuppInd" type="ovcom:BooleanTrueFalseType" nillable="true" minOccurs="0"/>
      <xs:element name="ClaimTypeCode" type="ovaclms:ClaimTypeCodeType" nillable="true" minOccurs="0"/>
      <xs:element name="ClaimInfoCodes" type="ovaclms:ClaimInfoCodesType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="CompletedDate" type="ovcom:DateType" nillable="true" minOccurs="0"/>
      <xs:element name="DateOfService" type="common:DateRangeType" nillable="true" minOccurs="0"/>
      <xs:element name="SubmittedAmountTotal" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="BenefitAdjustmentTotal" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="ClaimStatus" type="ovaclms:ClaimStatusType" nillable="true" minOccurs="0"/>
      <xs:element name="ClaimStatusCode" type="ovaclms:ClaimStatusCodeType" nillable="true" minOccurs="0"/>
      <xs:element name="ClaimStatusDescription" type="ovaclms:ClaimStatusDescriptionType" nillable="true" minOccurs="0"/>
      <xs:element name="ProviderName" type="ovcom:FullName" nillable="true" minOccurs="0"/>
      <xs:element name="ConsumerName" type="demo:PersonType" nillable="true" minOccurs="0"/>
      <xs:element name="PaidDate" type="ovcom:DateType" nillable="true" minOccurs="0"/>
      <xs:element name="ServiceDescription" type="ovaclms:ServiceDescriptionType" nillable="true" minOccurs="0"/>
      <xs:element name="ClaimDiscountAmountTotal" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="DisallowedAmountTotal" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="CopayAmountTotal" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="DeductibleAmountTotal" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="ClaimPaymentTotal" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="AssignedSubTotal" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="MemberResponsibility" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="AssignedAdjustmentAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="AssignedTotal" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="BenefitSubtotal" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="AdjustmentAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="BillLineType" type="ovaclms:BillLineType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="ProviderInfo" type="ovaprv:ProviderType" nillable="true" minOccurs="0"/>
      <xs:element name="ClaimMessage" type="ovaclms:ClaimMessageType" nillable="true" minOccurs="0"/>
      <xs:element name="GroupInfo" type="ovaclms:GroupInfoType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GroupInfoType">
    <xs:sequence>
      <xs:element name="Site" type="ovaclms:SiteType" nillable="true" minOccurs="0"/>
      <xs:element name="ClaimGroupType" type="plan:GroupType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimInfoCodesType">
    <xs:sequence>
      <xs:element name="ProcedureCode" type="ovaclms:ProcedureCodeValueType" nillable="true" minOccurs="0"/>
      <xs:element name="DiagnosisCode" type="ovaclms:DiagnosisCodeValueType" nillable="true" minOccurs="0"/>
      <xs:element name="ICDVersionIndicator" type="ovaclms:ICDVersionIndicatorType" nillable="true" minOccurs="0"/>
      <xs:element name="RevenueCode" type="ovaclms:RevenueCodeType" nillable="true" minOccurs="0"/>
      <xs:element name="POSNDCCode" type="ovaclms:POSNDCCodeType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BillLineType">
    <xs:sequence>
      <xs:element name="PlanCode" type="ovaplan:PlanCodeType" nillable="true" minOccurs="0"/>
      <xs:element name="ClaimDiscountAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="ClaimPaymentAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="DisallowedAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="DisplayPlanCode" type="ovaplan:DisplayPlanCodeType" nillable="true" minOccurs="0"/>
      <xs:element name="TypeofService" type="ovaclms:TypeofServiceType" nillable="true" minOccurs="0"/>
      <xs:element name="ProviderShortName" type="ovcom:FullName" nillable="true" minOccurs="0"/>
      <xs:element name="DateofService" type="common:DateRangeType" nillable="true" minOccurs="0"/>
      <xs:element name="ServiceUnits" type="ovaclms:ServiceUnitsType" nillable="true" minOccurs="0"/>
      <xs:element name="PlanCostShareAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="SubmittedAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="MedicarePaidAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="MedicareApprovedAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="PartBDeductibleAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="DeductibleAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="DailyBenefitAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="CoveredExpenseAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="BenefitAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="AssignedInd" type="ovcom:BooleanTrueFalseType" nillable="true" minOccurs="0"/>
      <xs:element name="POSNDCNumber" type="ovaclms:POSNDCNumberType" nillable="true" minOccurs="0"/>
      <xs:element name="POSRxName" type="ovaclms:POSRxNameType" nillable="true" minOccurs="0"/>
      <xs:element name="OOPAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="CopayAmount" type="common:AmountValueType" nillable="true" minOccurs="0"/>
      <xs:element name="ProviderInfo" type="ovaprv:ProviderType" nillable="true" minOccurs="0"/>
      <xs:element name="BillLineMessage" type="ovaclms:BillLineMessageType" nillable="true" minOccurs="0"/>
      <xs:element name="ReasonCode" type="ovaclms:ReasonCodeType" nillable="true" minOccurs="0"/>
      <xs:element name="RevenueCode" type="ovaclms:RevenueCodeType" nillable="true" minOccurs="0"/>
      <xs:element name="ProcedureCodeType" type="ovaclms:ProcedureCodeType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="DiagnosisCodeType" type="ovaclms:DiagnosisCodeType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DiagnosisCodeType">
    <xs:sequence>
      <xs:element name="DiagnosisCode" type="ovaclms:DiagnosisCodeValueType" nillable="true" minOccurs="0"/>
      <xs:element name="ICDVersionIndicator" type="ovaclms:ICDVersionIndicatorType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ProcedureCodeType">
    <xs:sequence>
      <xs:element name="ProcedureCode" type="ovaclms:ProcedureCodeValueType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="SiteType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ProcedureCodeValueType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="RevenueCodeType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ICDVersionIndicatorType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ClaimSystemType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ClaimStatusType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ClaimStatusCodeType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ClaimStatusDescriptionType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ClaimsCountType">
    <xs:annotation>
      <xs:documentation>Element to handle Claims Total Count</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:integer"/>
  </xs:simpleType>
  <xs:simpleType name="DependentCodeType">
    <xs:annotation>
      <xs:documentation>It's the code that determines the subscriber or spouse or dependent</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ClaimNumberType">
    <xs:restriction base="xs:string">
      <xs:minLength value="0"/>
      <xs:maxLength value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ServiceDescriptionType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ClaimValueType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="DiagnosisCodeValueType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ServiceUnitsType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="POSNDCNumberType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="POSRxNameType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="POSNDCCodeType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ReasonCodeType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ClaimMessageType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="TypeofServiceType">
    <xs:annotation>
      <xs:documentation>Assist Surgery, Medical Services,Inpatient svc, Outpatient svc</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="BillLineMessageType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ClaimTypeCodeType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ClaimReferenceIDType">
    <xs:annotation>
      <xs:documentation>ReferenceID is used as correlationID as part of claims Service</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/ovations/ovations_plan.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2009 (http://www.altova.com) by Praburaj Thangaraj
		(UNITED HEALTHGROUP)-->
<xs:schema targetNamespace="http://ovations.unitedhealthgroup.com/schema/ovations/planpolicy/plan/v2_10" elementFormDefault="qualified" version="2.1.0" xmlns:common="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" xmlns:demo="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" xmlns:plan="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03" xmlns:ovaplan="http://ovations.unitedhealthgroup.com/schema/ovations/planpolicy/plan/v2_10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ovcom="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10">
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10" schemaLocation="ovations_common.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" schemaLocation="../canonical/common.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" schemaLocation="../canonical/demographic.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/planpolicy/plan/v4_03" schemaLocation="../canonical/plan.xsd"/>
  <xs:complexType name="RiderType">
    <xs:sequence>
      <xs:element name="RiderCode" type="xs:string" minOccurs="0"/>
      <xs:element name="RiderType" type="xs:string" minOccurs="0"/>
      <xs:element name="RiderName" type="xs:string" minOccurs="0"/>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
      <xs:element name="RiderPlanID" type="xs:string" minOccurs="0"/>
      <xs:element name="RiderStatus" type="xs:string" minOccurs="0"/>
      <xs:element name="EffectiveDates" type="common:DateRangeType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PlanProfileType">
    <xs:sequence>
      <xs:element name="EffectiveDates" type="common:DateRangeType"/>
      <xs:element name="LicsPct" type="xs:string" minOccurs="0"/>
      <xs:element name="UncoveredMonths" type="xs:string" minOccurs="0"/>
      <xs:element name="CredibleCoverageInd" type="xs:string" minOccurs="0"/>
      <xs:element name="NetLepAmount" type="xs:string" minOccurs="0"/>
      <xs:element name="CopayCategoryID" type="xs:string" minOccurs="0"/>
      <xs:element name="CopayCategory" type="xs:string" minOccurs="0"/>
      <xs:element name="AdditionalAttribute" type="ovcom:NameValuePairType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="LowIncomeSubsidy" type="xs:string" minOccurs="0"/>
      <xs:element name="BAEInd" type="xs:boolean" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="PlanCodeType">
    <xs:annotation>
      <xs:documentation>Plan code type</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="DisplayPlanCodeType">
    <xs:annotation>
      <xs:documentation>Plan code type</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="PlanBenefitIDType">
    <xs:annotation>
      <xs:documentation>Plan Benefit ID</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="PlanBenefitNameType">
    <xs:annotation>
      <xs:documentation>Plan Benefit Name</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="PlanBenefitTextType">
    <xs:annotation>
      <xs:documentation>Plan Benefit Text</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:complexType name="PlanBenefitSubValueType">
    <xs:sequence>
      <xs:element name="PlanBenefitSubTypeID" type="ovaplan:PlanBenefitIDType" nillable="true" minOccurs="0"/>
      <xs:element name="PlanBenefitSubTypeName" type="ovaplan:PlanBenefitNameType" nillable="true" minOccurs="0"/>
      <xs:element name="PlanBenefitSubTypeText" type="ovaplan:PlanBenefitTextType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PlanBenefitValueType">
    <xs:sequence>
      <xs:element name="PlanBenefitTypeID" type="ovaplan:PlanBenefitIDType" nillable="true" minOccurs="0"/>
      <xs:element name="PlanBenefitTypeName" type="ovaplan:PlanBenefitNameType" nillable="true" minOccurs="0"/>
      <xs:element name="PlanBenefitSubType" type="ovaplan:PlanBenefitSubValueType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="PlanBenefitTypeText" type="ovaplan:PlanBenefitTextType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PlanBenefitCategoryType">
    <xs:sequence>
      <xs:element name="PlanBenefitCategoryID" type="ovaplan:PlanBenefitIDType" nillable="true" minOccurs="0"/>
      <xs:element name="PlanBenefitCategoryName" type="ovaplan:PlanBenefitNameType" nillable="true" minOccurs="0"/>
      <xs:element name="PlanBenefitType" type="ovaplan:PlanBenefitValueType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="PlanBenefitCategoryText" type="ovaplan:PlanBenefitTextType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PlanBenefitsType">
    <xs:sequence>
      <xs:element name="PlanBenefitCategory" type="ovaplan:PlanBenefitCategoryType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PlanBenefitModificationType">
    <xs:sequence>
      <xs:element name="PlanBenefitModificationCode" type="ovaplan:PlanBenefitModificationCodeType" nillable="true" minOccurs="0"/>
      <xs:element name="PlanBenefitModificationDate" type="common:DateRangeType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="PlanBenefitModificationCodeType">
    <xs:annotation>
      <xs:documentation>Plan Benefit Modification Type Code Type</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="PlanStatusType">
    <xs:annotation>
      <xs:documentation>Plan Status Type</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="PlanTerminationReasonType">
    <xs:annotation>
      <xs:documentation>Plan Termination Reason Type. For e.g.
				Voluntary, NPOP, Lift</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="PlanTerminationDetailReasonType">
    <xs:annotation>
      <xs:documentation>Plan Conservation Reason Type For e.g. "Intends
				to buy other coverage", "displeased with AARP"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="PlanCategoryType">
    <xs:annotation>
      <xs:documentation>Plan Category Reason Type For e.g. "Medicare
				Supplement",Indemnity, PPO,Rider</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:complexType name="AgentInfoType">
    <xs:sequence>
      <xs:element name="AgentID" type="xs:string" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PlanDisabilityInformationType">
    <xs:sequence>
      <xs:element name="PlanDisabilityInformationIndicator" type="xs:boolean" nillable="true" minOccurs="0"/>
      <xs:element name="PlanDisabilityInformationTypeCode" type="ovaplan:PlanDisabilityInformationTypeCodeType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="PlanDisabilityInformationTypeCodeType">
    <xs:annotation>
      <xs:documentation>Plan Disability Information Type Code Type</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="PlanAdjustedBaseValueType">
    <xs:annotation>
      <xs:documentation>Plan Adjusted Base Type</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="PlanRateDeterminationCodeType">
    <xs:annotation>
      <xs:documentation>Plan Rate Determination Code Type</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="PlanRatingType">
    <xs:annotation>
      <xs:documentation>Plan Rating Type</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:complexType name="SponsorInformationType">
    <xs:sequence>
      <xs:element name="SponsorID" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="SponsorName" type="demo:PersonNameType" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="PlanTypeType">
    <xs:annotation>
      <xs:documentation>Plan Types standardized, mippa, hip, map, hap etc</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:complexType name="RxInfoType">
    <xs:sequence>
      <xs:element name="RxBin" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="RxGroup" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="RxPCN" type="xs:string" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="EmployerBranchIDType">
    <xs:annotation>
      <xs:documentation>Employer Branch ID</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="20"/>
      <xs:minLength value="0"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PlanTypeIDType">
    <xs:annotation>
      <xs:documentation>Plan Type ID</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:totalDigits value="5"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/ovations/ovations_provider.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://ovations.unitedhealthgroup.com/schema/ovations/provider/ovaprovider/v2_10" elementFormDefault="qualified" version="2.1.0" xmlns:common="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:demo="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" xmlns:ovcom="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10" xmlns:ovaprv="http://ovations.unitedhealthgroup.com/schema/ovations/provider/ovaprovider/v2_10" xmlns:provider="http://enterprise.unitedhealthgroup.com/schema/canoncial/provider/provider/v4_00">
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10" schemaLocation="ovations_common.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" schemaLocation="../canonical/demographic.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" schemaLocation="../canonical/common.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/provider/provider/v4_00" schemaLocation="../canonical/provider.xsd"/>
  <xs:complexType name="ProviderType">
    <xs:sequence>
      <xs:element name="ProviderIdentity" type="provider:ProviderIdentityType" minOccurs="0"/>
      <xs:element name="EffectiveDates" type="common:DateRangeType" minOccurs="0"/>
      <xs:element name="Name" type="ovcom:FullName" minOccurs="0"/>
      <xs:element name="Network" type="ovaprv:ProviderNetworkType" minOccurs="0"/>
      <xs:element name="Region" type="ovaprv:ProviderRegionType" minOccurs="0"/>
      <xs:element name="Phone" type="demo:PhoneType" minOccurs="0"/>
      <xs:element name="AutoAssignedInd" type="xs:boolean" minOccurs="0"/>
      <xs:element name="OverrideInd" type="xs:boolean" minOccurs="0"/>
      <xs:element name="TermReasonCode" type="ovaprv:ProviderTermReasonCodeType" minOccurs="0"/>
      <xs:element name="ChangeReason" type="ovaprv:ChangeReasonType" minOccurs="0"/>
      <xs:element name="DataSourceNo" type="xs:integer" minOccurs="0"/>
      <xs:element name="DataSourceDesc" type="ovaprv:DataSourceDescType" minOccurs="0"/>
      <xs:element minOccurs="0" name="Address" nillable="true" type="demo:AddressType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="ProviderNetworkType">
    <xs:restriction base="xs:string">
      <xs:annotation>
        <xs:documentation>military
					C Civilian network
					D Direct Care network
					N None
					R Resource Sharing network
					U Uniformed Services Family Health Plan (USFHP)</xs:documentation>
      </xs:annotation>
      <xs:enumeration value="DIRECTCARE"/>
      <xs:enumeration value="NETWORK"/>
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="CIVILIAN NETWORK"/>
      <xs:enumeration value="RESOURCE SHARING NETWORK"/>
      <xs:enumeration value="UNIFORMED SERVICES FAMILY HEALTH PLAN"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ProviderRegionType">
    <xs:sequence>
      <xs:element name="RegionCode" type="ovaprv:RegionCodeType"/>
      <xs:element name="EnrollingDivisionDMISID" type="ovaprv:EnrollingDivisionIDType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="ProviderTermReasonCodeType">
    <xs:restriction base="xs:string">
      <xs:length value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ChangeReasonType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="DataSourceDescType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="EnrollingDivisionIDType">
    <xs:restriction base="xs:string">
      <xs:length value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RegionCodeType">
    <xs:restriction base="xs:string">
      <xs:length value="2"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/canonical/provider.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2010 rel. 3 (http://www.altova.com) by Aditya Mehta (UNITED HEALTHGROUP)-->
<xs:schema targetNamespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/provider/provider/v4_00" elementFormDefault="qualified" attributeFormDefault="unqualified" version="4.0.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:demo="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" xmlns:common="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" xmlns:provider="http://enterprise.unitedhealthgroup.com/schema/canoncial/provider/provider/v4_00">
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/demographic/v4_03" schemaLocation="demographic.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canoncial/base/common/v4_00" schemaLocation="common.xsd"/>
  <xs:simpleType name="FacilityNameType">
    <xs:annotation>
      <xs:documentation>No specific requirements for maxLength</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="100"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MedicalGroupNameType">
    <xs:annotation>
      <xs:documentation>No specific requirements for maxLength</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="100"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BoardCertifiedCodeType">
    <xs:annotation>
      <xs:documentation>Board certification code types.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="YES">
        <xs:annotation>
          <xs:documentation>board certified</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NO">
        <xs:annotation>
          <xs:documentation>not board certified</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ELIGIBLE">
        <xs:annotation>
          <xs:documentation>eligible for board certification</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NA">
        <xs:annotation>
          <xs:documentation>not applicable or specialty has no certificaiton</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CapitatedCodeType">
    <xs:annotation>
      <xs:documentation>Capitated indicator.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="FEEFORSERVICE"/>
      <xs:enumeration value="CAPPRIMARY"/>
      <xs:enumeration value="CAPSPECIALTY"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FacilityTypeCodeType">
    <xs:annotation>
      <xs:documentation>Types for facilities.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="CLINIC"/>
      <xs:enumeration value="INDLAB"/>
      <xs:enumeration value="HOSPITAL"/>
      <xs:enumeration value="RECIPHOSPITAL"/>
      <xs:enumeration value="PHYSTHERAPY"/>
      <xs:enumeration value="URGENTCARE"/>
      <xs:enumeration value="EMERGENCY"/>
      <xs:enumeration value="SURGICAL"/>
      <xs:enumeration value="PHARMACY"/>
      <xs:enumeration value="SKILLEDNURSING"/>
      <xs:enumeration value="NURSINGHOME"/>
      <xs:enumeration value="MHCDOUTPATIENT"/>
      <xs:enumeration value="FACILITY"/>
      <xs:enumeration value="ANCILLARY"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PractitionerTypeCodeType">
    <xs:annotation>
      <xs:documentation>Types for physician, dentist,etc.  Not facility or medical group.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="MedicalGroupTypeCodeType">
    <xs:annotation>
      <xs:documentation>Types for medical groups.  TODO any besides IPA?</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="IPA"/>
      <xs:enumeration value="MULTI_SPECIALTY"/>
      <xs:enumeration value="MEDICAL_GROUP"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SpecialtyCodeType">
    <xs:annotation>
      <xs:documentation>Specialty Code for providers.  Assume a code list service provides the values, which may change over time or vary depending on domain.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="100"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SpecialtyNameType">
    <xs:annotation>
      <xs:documentation>Specialty Name or Short Description</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="100"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ConditionCodeType">
    <xs:annotation>
      <xs:documentation>ConditionCode and ProcedureCode for facilities and physicians. Assume a code list service provides the values, which may change over time or vary depending on domain.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="100"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AcceptNewPatientCodeType">
    <xs:annotation>
      <xs:documentation>Accepted patient codes.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="OPEN"/>
      <xs:enumeration value="CLOSED"/>
      <xs:enumeration value="RESTRICTED"/>
      <xs:enumeration value="EXISTING"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FacilityTierType">
    <xs:annotation>
      <xs:documentation>Facility tier type.   Limited applicability to back-end systems, perhaps COSMOS only.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:positiveInteger">
      <xs:pattern value="[0-9]"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PCPEnrollIDType">
    <xs:annotation>
      <xs:documentation>PCP enrollment ID</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="25"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="SpecialtyType">
    <xs:annotation>
      <xs:documentation>A provider's specialty with optional PCP enrollment ID.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="SpecialtyCode" type="provider:SpecialtyCodeType"/>
      <xs:element name="SpecialtyName" type="provider:SpecialtyNameType"/>
      <xs:element name="PCPInd" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indiciates whether a provider is a PCP in this specialty. A physician may or may not be a PCP in any of their specialties.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PCPEnrollID" type="provider:PCPEnrollIDType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>A PCP enrolllment ID may not be an applicable concept for all systems.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MedicalGroup" minOccurs="0" maxOccurs="100">
        <xs:annotation>
          <xs:documentation>A provider-plan relationship may be either 1) affiliated with 1 or more medical groups or 2) not affiliated with any medical group.  For (1), the MedicalGroup element will be present here 1 or more times, since each medical group affiliation may have a different PCP enrollment ID.  In this case, the PCPInd and PCPEnrollID immediately under teh Specialty element will not be present.  For (2), the sitaution is reversed: there will be no MedicalGroup elements present, and the PCPInd and PCPEnrollID elements immediately under Specialty may be populated.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="MedicalGroupID" type="xs:string">
              <xs:annotation>
                <xs:documentation>The medical group ID for a medical group with affiliation for this provider with this plan.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="PCPInd" type="xs:boolean" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Indiciates whether a provider is a PCP in this specialty for this medical group. A physician may or may not be a PCP in any of their specialties.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="PCPEnrollID" type="provider:PCPEnrollIDType" minOccurs="0">
              <xs:annotation>
                <xs:documentation>A PCP enrolllment ID may not be an applicable concept for all systems.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PractitionerSpecialtyType">
    <xs:annotation>
      <xs:documentation>Extension of SpecialtyType to add board certification.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="provider:SpecialtyType">
        <xs:sequence>
          <xs:element name="BoardCertification" type="provider:BoardCertificationType" minOccurs="0" maxOccurs="10"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BoardCertificationType">
    <xs:annotation>
      <xs:documentation>Board certification for a specialty, such as following a residency or fellowship.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="BoardCertifiedCode" type="provider:BoardCertifiedCodeType"/>
      <xs:element name="BoardEntityName" type="xs:string" minOccurs="0"/>
      <xs:element name="EffectiveDates" type="common:DateRangeType" minOccurs="0"/>
      <xs:element name="RecertificationDate" type="xs:date" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="TrainingTypeCodeType">
    <xs:annotation>
      <xs:documentation>Types of training.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="MEDICAL"/>
      <xs:enumeration value="DENTAL"/>
      <xs:enumeration value="RESIDENCY"/>
      <xs:enumeration value="FELLOWSHIP"/>
      <xs:enumeration value="INTERNSHIP"/>
      <xs:enumeration value="SCHOOL"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DegreeType">
    <xs:annotation>
      <xs:documentation>Types of degrees, e.g. MD, DO, MS, DDS, DMD</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="25"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TrainingLocationNameType">
    <xs:annotation>
      <xs:documentation>Name of School or Training Location</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="200"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="TrainingType">
    <xs:annotation>
      <xs:documentation>Any type of training.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="TrainingTypeCode" type="provider:TrainingTypeCodeType" minOccurs="0"/>
      <xs:element name="TrainingLocationName" type="provider:TrainingLocationNameType" minOccurs="0"/>
      <xs:element name="DegreeConferred" type="provider:DegreeType" minOccurs="0" maxOccurs="5"/>
      <xs:element name="GradDate" type="xs:date" minOccurs="0"/>
      <xs:element name="Location" type="demo:LocationType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="UHPDPopupTextType">
    <xs:annotation>
      <xs:documentation>UHPD popup text.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="500"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UHPDAdditionalTextType">
    <xs:annotation>
      <xs:documentation>UHPD aditional text.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="200"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UHPDFocusType">
    <xs:annotation>
      <xs:documentation>UHPD focus.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="100"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UHPDQEValueType">
    <xs:annotation>
      <xs:documentation>UHPD QE value.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UHPDStarsType">
    <xs:annotation>
      <xs:documentation>UHPD stars.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:positiveInteger">
      <xs:enumeration value="1"/>
      <xs:enumeration value="2"/>
      <xs:enumeration value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UHPDSortValueType">
    <xs:annotation>
      <xs:documentation>UHPD sort value.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:integer"/>
  </xs:simpleType>
  <xs:complexType name="DesignationType" abstract="true">
    <xs:annotation>
      <xs:documentation>Basic designation type.</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="PremiumDesignationType">
    <xs:annotation>
      <xs:documentation>United Health premium designation.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="provider:DesignationType">
        <xs:sequence>
          <xs:element name="UHPDQEValue" type="provider:UHPDQEValueType" minOccurs="0"/>
          <xs:element name="UHPDStars" type="provider:UHPDStarsType" minOccurs="0"/>
          <xs:element name="UHPDFocus" type="provider:UHPDFocusType" minOccurs="0"/>
          <xs:element name="UHPDSortValue" type="provider:UHPDSortValueType" minOccurs="0"/>
          <xs:element name="UHPDAdditionalText" type="provider:UHPDAdditionalTextType" minOccurs="0"/>
          <xs:element name="UHPDPopupText" type="provider:UHPDPopupTextType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ProviderIdentityType">
    <xs:annotation>
      <xs:documentation>Additional keys for identifying a provider.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="MPIN" type="xs:string" minOccurs="0" maxOccurs="10"/>
      <xs:element name="TaxID" type="xs:string" minOccurs="0" maxOccurs="10"/>
      <xs:element name="DEANo" type="xs:string" minOccurs="0" maxOccurs="10"/>
      <xs:element name="NPI" type="xs:string" minOccurs="0" maxOccurs="10"/>
      <xs:element name="MedicaidID" type="demo:MedicareClaimNumberType" minOccurs="0" maxOccurs="10"/>
      <xs:element name="MedicareID" type="demo:MedicareClaimNumberType" minOccurs="0" maxOccurs="10"/>
      <xs:element name="OtherProviderID" type="common:NameValuePairType" minOccurs="0" maxOccurs="10">
        <xs:annotation>
          <xs:documentation>Holds other provider IDs as necessary, such as native source system IDs like UHCID or DEC.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ServiceLocationType">
    <xs:annotation>
      <xs:documentation>A provider service location.  Extends from demo:LocationType.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="demo:LocationType">
        <xs:sequence>
          <xs:element name="AcceptNewPatientCode" type="provider:AcceptNewPatientCodeType" minOccurs="0"/>
          <xs:element name="Accessibility" type="demo:AccessibilityType" minOccurs="0"/>
          <xs:element name="HoursOfOperation" type="common:HoursOfOperationType" minOccurs="0" maxOccurs="7"/>
          <xs:element name="LanguagePreference" type="provider:ProviderLanguageType" minOccurs="0" maxOccurs="5"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ParticipatingStatusCodeType">
    <xs:annotation>
      <xs:documentation>Display Participating or Non Participating or Contracted Provider Status</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="PAR"/>
      <xs:enumeration value="NPAR"/>
      <xs:enumeration value="CPAR"/>
      <xs:enumeration value="CNPAR"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ProviderPlanType">
    <xs:annotation>
      <xs:documentation>A provider-plan association</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ProviderPlanID" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>A normalized plan+group ID.  Translate to and from via the plan service.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EffectiveDates" type="common:DateRangeType" minOccurs="0"/>
      <xs:element name="Specialty" type="provider:SpecialtyType" minOccurs="0" maxOccurs="100"/>
      <xs:element name="AcceptWellChildInd" type="xs:boolean" minOccurs="0"/>
      <xs:element name="AcceptNewPatientCode" type="provider:AcceptNewPatientCodeType" minOccurs="0"/>
      <xs:element name="HoldPaymentInd" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>For call center use only.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CapitatedCode" type="provider:CapitatedCodeType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>For call center use only.  Capitation applies to all 3 provider types.  See http://ndm.uhc.com/NDM_Training/Topics/032B%20Capitation/What%20is%20Capitation.doc</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AcceptMedicaidInd" type="xs:boolean" minOccurs="0"/>
      <xs:element name="ParticipatingStatusCode" type="provider:ParticipatingStatusCodeType" minOccurs="0" maxOccurs="4"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PractitionerProviderPlanType">
    <xs:annotation>
      <xs:documentation>A Practitioner provider-plan association</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ProviderPlanID" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>A normalized plan+group ID.  Translate to and from via the plan service.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EffectiveDates" type="common:DateRangeType" minOccurs="0"/>
      <xs:element name="Specialty" type="provider:PractitionerSpecialtyType" minOccurs="0" maxOccurs="100"/>
      <xs:element name="AcceptWellChildInd" type="xs:boolean" minOccurs="0"/>
      <xs:element name="AcceptNewPatientCode" type="provider:AcceptNewPatientCodeType" minOccurs="0"/>
      <xs:element name="HoldPaymentInd" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>For call center use only.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CapitatedCode" type="provider:CapitatedCodeType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>For call center use only.  Capitation applies to all 3 provider types.  See http://ndm.uhc.com/NDM_Training/Topics/032B%20Capitation/What%20is%20Capitation.doc</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AcceptMedicaidInd" type="xs:boolean" minOccurs="0"/>
      <xs:element name="ParticipatingStatusCode" type="provider:ParticipatingStatusCodeType" minOccurs="0" maxOccurs="4"/>
    </xs:sequence>
  </xs:complexType>
  <xs:group name="ProviderGroup">
    <xs:annotation>
      <xs:documentation>Group of elements that applies to all provider types: provider(physician,etc.), facility, medical group</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ProviderIdentity" type="provider:ProviderIdentityType" minOccurs="0"/>
      <xs:element name="Designation" type="provider:DesignationType" minOccurs="0" maxOccurs="10"/>
      <xs:element name="Location" type="provider:ServiceLocationType" minOccurs="0" maxOccurs="10"/>
      <xs:element name="AgeRange" type="common:NonNegativeIntegerRangeType" minOccurs="0"/>
      <xs:element name="MedicareOptOutInd" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates if a provider has opted out of Medicare.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PayTo" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>For call center use only.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Note" type="xs:string" minOccurs="0" maxOccurs="10"/>
      <xs:element name="PCPInd" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Whether this physician is a primary care physician.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EffectiveDates" type="common:DateRangeType" minOccurs="0"/>
      <xs:element name="ProviderValueType" type="provider:ProviderCodeType" minOccurs="0"/>
    </xs:sequence>
  </xs:group>
  <xs:complexType name="PractitionerType">
    <xs:annotation>
      <xs:documentation>A practitioner provider, such as a physician, dentist, or optometrist.  Extends from demo:PersonType.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="demo:PersonType">
        <xs:sequence>
          <xs:element name="PractitionerID" type="xs:string" minOccurs="0"/>
          <xs:group ref="provider:ProviderGroup"/>
          <xs:element name="PractitionerTypeCode" type="provider:PractitionerTypeCodeType"/>
          <xs:element name="Training" type="provider:TrainingType" minOccurs="0" maxOccurs="10"/>
          <xs:element name="PractitionerAffiliation" type="provider:FacilityType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="FacilityType">
    <xs:annotation>
      <xs:documentation>A provider facility such as a hospital, clinic, or lab.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="FacilityID" type="xs:string" minOccurs="0"/>
      <xs:group ref="provider:ProviderGroup"/>
      <xs:element name="FacilityName" type="provider:FacilityNameType"/>
      <xs:element name="FacilityTypeCode" type="provider:FacilityTypeCodeType" minOccurs="0"/>
      <xs:element name="FacilityTier" type="provider:FacilityTierType" minOccurs="0"/>
      <xs:element name="SelectFacilityCode" type="provider:SelectFacilityCodeType" minOccurs="0"/>
      <xs:element name="LanguagePreference" type="demo:LanguageType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MedicalGroupType">
    <xs:annotation>
      <xs:documentation>A provider medical group, such as an IPA.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="MedicalGroupID" type="xs:string" minOccurs="0"/>
      <xs:group ref="provider:ProviderGroup"/>
      <xs:element name="MedicalGroupName" type="provider:MedicalGroupNameType"/>
      <xs:element name="MedicalGroupTypeCode" type="provider:MedicalGroupTypeCodeType" minOccurs="0"/>
      <xs:element name="LangugaeSpoken" type="demo:LanguageType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="CodeNameType">
    <xs:annotation>
      <xs:documentation>Provider code names for use when extending the common:CodeName substitution group.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="common:CodeNameType">
      <xs:enumeration value="ACCEPT_NEW_PATIENT_CODE"/>
      <xs:enumeration value="CAPITATED_CODE"/>
      <xs:enumeration value="CONDITION"/>
      <xs:enumeration value="DEGREE_TYPE"/>
      <xs:enumeration value="FACILITY_TYPE"/>
      <xs:enumeration value="MEDICAL_GROUP_TYPE"/>
      <xs:enumeration value="PRACTITIONER_TYPE"/>
      <xs:enumeration value="SPECIALTY_TYPE"/>
      <xs:enumeration value="TRAINING_TYPE"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CodeDomainType">
    <xs:annotation>
      <xs:documentation>Provider code domains for use when extending the common:CodeDomain substitution group.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="common:CodeDomainType">
      <xs:enumeration value="PROVIDER"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CodeEntityType">
    <xs:annotation>
      <xs:documentation>Provider code entities for use when extending the common:CodeEntity substitution group.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="common:CodeEntityType">
      <xs:enumeration value="DESIGNATION"/>
      <xs:enumeration value="FACILITY"/>
      <xs:enumeration value="MEDICAL_GROUP"/>
      <xs:enumeration value="PHYSICIAN"/>
      <xs:enumeration value="PLAN"/>
      <xs:enumeration value="PRACTITIONER"/>
      <xs:enumeration value="PROVIDER_IDENTITY"/>
      <xs:enumeration value="PROVIDER_PLAN"/>
      <xs:enumeration value="TRAINING"/>
      <xs:enumeration value="PREMIUM_DESIGNATION"/>
      <xs:enumeration value="SERVICE_LOCATION"/>
      <xs:enumeration value="ANCILLARY"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="CodeName" type="provider:CodeNameType" substitutionGroup="common:CodeName">
    <xs:annotation>
      <xs:documentation>Provider code names for use when extending the common:CodeName substitution group.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="CodeDomain" type="provider:CodeDomainType" substitutionGroup="common:CodeDomain">
    <xs:annotation>
      <xs:documentation>Provider code domains for use when extending the common:CodeDomain substitution group.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="CodeEntity" type="provider:CodeEntityType" substitutionGroup="common:CodeEntity">
    <xs:annotation>
      <xs:documentation>Provider code entities for use when extending the common:CodeEntity substitution group.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:simpleType name="WebCodeType">
    <xs:annotation>
      <xs:documentation>Designates a grouping of National Ancillary Providers.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SelectFacilityCodeType">
    <xs:annotation>
      <xs:documentation>Designates the tier of the select facility</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="25"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ProviderLanguageType">
    <xs:annotation>
      <xs:documentation>Provider Language Preference, Language Code, Usage, Spoken By, etc</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="demo:LanguageType">
        <xs:sequence>
          <xs:element name="LanguageUsageBy" type="demo:LanguageUsageByType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ProviderCodeType">
    <xs:annotation>
      <xs:documentation>Element to define Provider Type, e.g P - Physician, H - Hospital/Facility, A - Ancilary, etc</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:length value="1"/>
      <xs:enumeration value="P"/>
      <xs:enumeration value="H"/>
      <xs:enumeration value="A"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/ovations/response/messageresponse.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2009 (http://www.altova.com) by Harsha Yadalam (UNITED HEALTHGROUP)-->
<xs:schema targetNamespace="http://enterprise.unitedhealthgroup.com/schema/message/messageresponse/v4_00" version="4.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://enterprise.unitedhealthgroup.com/schema/message/messageresponse/v4_00" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:resp="http://enterprise.unitedhealthgroup.com/schema/message/response/v4_00">
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/message/response/v4_00" schemaLocation="response.xsd"/>
  <xs:element name="messageresponse" type="messageResponseType">
    <xs:annotation>
      <xs:documentation>Comment describing your root element</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="messageResponseType">
    <xs:sequence>
      <xs:element name="response" type="resp:ResponseType" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Standard object that contains the status of the response and additional error details if any</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/ovations/response/response.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2009 (http://www.altova.com) by Harsha Yadalam (UNITED HEALTHGROUP)-->
<xs:schema targetNamespace="http://enterprise.unitedhealthgroup.com/schema/message/response/v4_00" elementFormDefault="qualified" attributeFormDefault="unqualified" version="4.0.0" xmlns="http://enterprise.unitedhealthgroup.com/schema/message/response/v4_00" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ovcom="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10">
  <xs:import namespace="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10" schemaLocation="../ovations_common.xsd"/>
  <xs:element name="response" type="ResponseType">
    <xs:annotation>
      <xs:documentation>Final response element containing the status of the message</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:simpleType name="CodeType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="SeverityType">
    <xs:annotation>
      <xs:documentation>Severity of the Error.  Can be made an enumeration</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="FATAL"/>
      <xs:enumeration value="BUSINESS VALIDATION"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ResponseValueType">
    <xs:annotation>
      <xs:documentation>Stores the success or failure code of the actual execution</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="INFORMATION"/>
      <xs:enumeration value="WARNING"/>
      <xs:enumeration value="ERROR"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ResponseType">
    <xs:sequence>
      <xs:element name="type" type="ResponseValueType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Response element containing the status of the message - INFORMATION, WARNING, ERROR</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Additional details of the success / failure status</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="code" type="CodeType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Error Codes related to the WESB system.  Can be defined as a global set of error codes.  Can currently use the source system error codes</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="severity" type="SeverityType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Severity of the error.  Can be blank for success messages - FATAL, BUSINESS VALIDATION</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeStamp" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Timestamp of the actual error</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="BusinessType" type="ovcom:BusinessValueType"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://soe-wesb-tst/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport/WEB-INF/wsdl/service/ConsumerSearchList.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00" xmlns:bons0="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:bons1="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10">
  <xsd:import schemaLocation="../ovations/ovations_common.xsd" namespace="http://ovations.unitedhealthgroup.com/schema/ovations/common/v2_10"></xsd:import>
  <xsd:include schemaLocation="ConsumerService.xsd"/>
  <xsd:complexType name="ConsumerSearchList">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="ConsumerList" type="bons0:ExtendedOvationsConsumerPersonProfileType"></xsd:element>
    </xsd:sequence>
    <xsd:attribute name="BusinessType" type="bons1:BusinessValueType"/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://soe-wesb-tst:9446/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00/ConsumerService/findConsumer" name="findConsumer" bindingOperationName="findConsumer" type="Request-Response" outputName="findConsumerResponse" inputName="findConsumerRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="SHIP" sslKeystore="findConsumerKeyStore.jks" outgoingWss="findConsumer"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://soe-wesb-tst:9446/ConsumerServiceMediation_v2_1_0Web/sca/ConsumerServiceExport</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v2="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00" xmlns:ns1="http://www.w3.org/2005/08/addressing" xmlns:ns3="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:serv="http://eaf4esb.wesb.uhc.com/schema/framework/EAF4ESBLookupKey/v1_00">
   <soap:Header>
      <ns3:Security>
         <ns3:UsernameToken>
            <ns3:Username>ocpuser</ns3:Username>
            <ns3:password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">UNKNOWN</ns3:password>
         </ns3:UsernameToken>
      </ns3:Security>
      <serv:LookupKey>
         <serv:environment>test_sys1</serv:environment>
      </serv:LookupKey>
      <ns1:From>
         <ns1:Address>http://GPSClient1:8081/addressing/gps_client_1</ns1:Address>
      </ns1:From>
      <ns1:MessageID>urn:uuid:beb6676f-9854-4670-add4-e8b0550fbc6f</ns1:MessageID>
      <ns1:Action>http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00/ConsumerService/findConsumer</ns1:Action>
   </soap:Header>
   <soap:Body>
      <v2:findConsumer>
         <findConsumerRequest>
            <v2:DateOfBirth>1946-03-01-00:00</v2:DateOfBirth>
            <v2:ControlModifier BusinessType="SHIP">
               
            <MemberNo>345136891-11</MemberNo></v2:ControlModifier>
         </findConsumerRequest>
      </v2:findConsumer>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eaf4esb.wesb.uhc.com/schema/contract/consumer/v2_00/Binding/ConsumerService/findConsumerRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="ORMS" type="rest" basePath="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://apsrt1684.uhc.com:9080</con:endpoint></con:endpoints><con:resource name="v1" path="/orms_core_app/payment/orms/intake/overPayment/v1"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://apsrt1684.uhc.com/orms_core_app/payment/orms/intake/overPayment/v1">v1:Response</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://apsrt1684.uhc.com:9080</con:endpoint><con:request>                {
  "overpaymentList": {
    "overpayments": [
      {
        "claimInfo": {
          "sourceSystemCode": "TOPS",
          "claimProductInfo": "Medica",
          "claimServiceState": "FL",
          "situsStateCode": "TX",
          "paymentMethod": "EFT_NUMBER",
          "payeeType": {
           
            "payeeType": "provider",
            "payeeName": "MERCY HOSPITAL",
            "entityPayee": {
              "organizationName": "Park Nicollet",
              "organizationAdress": {
                "addressLine1": "1025 S Anaheim Blvd",
                "addressLine2": "1025 S Anaheim Blvd",
                "addressLineOther": "1025 S Anaheim Blvd",
                "city": "Anaheim",
                "state": "CA",
                "zipCode": "90670",
                "country": "US"
              }
            }
          },
          "claimNumber": "4014513183",
          "draftNumber": "2016184012",
          "servicePaidAmount": "700.00",
          "paidDate": "5/1/2015",
          "totalClaimChargeAmount": "126.00",
          "claimAllowedAmount": "100.80",
          "startDateOfService": "12/21/2009",
          "endDateOfService": "03/04/2014",
          "submittedInstitutionalRevenueCode": {
            "codeValue": "271",
            "codeDesc": "Nonsterile Supply"
          },
          "commonProcTerminalogyCd": {
            "codeValue": "97810",
            "codeDesc": "Acupuncture"
          },
          "submittedServiceLineNumber": "423545656",
          "otherSourceSystemIdentifier": {
            "adjudicationOffice": "127",
            "engine": "F",
            "site": "OMAHA"
          },
          "panel": "",
          "paymentTrace": "",
          "encounterCode": "",
          "paymentDraftNumber": "1999682409",
          "filmLocNoDate": "14274",
          "filmLocNoSeq": "46946",
          "filmOfficeNo": "0985",
          "signOnOfficeNo": "127",
          "claimKeyedOfficeNo": "00000000",
          "claimFileType": "HS",
          "checkSeriesDesignator": "1234561129",
          "claimPaymentSeqNo": "182739",
          "checkSuppressId": "N",
          "coinsuranceAmount": "0",
          "deductibleAmount": "0",
          "copayAmount": "0",
          "surchargeAmount": "0",
          "nmfAmount": "0",
          "nySurchargeEligId": "0",
          "caeClaimNumber": "427",
          "originalPaymentDate": "10/02/2014"
        },
        "providerInfo": {
          "taxIdNumber": "231120152",
          "marketSite": "0010460",
          "providerMarketType": "50",
          "providerIPA": "00000",
          "providerProductCode": "POS",
          "primaryCarePhyTin": "23232342",
          "providerType": "MD",
          "providerSpecialityCode": "FP",
          "providerName": "Deepesh",
          "providerParticipatingCode": "1234",
          "addrCareName": "Park Nicolet",
          "nationalProvId": "1912907114",
          "facilityTypeCode": "P",
          "providerDBAName": "MH",
          "providerTinPrefix": "00050",
          "providerTinSuffix": "00050",
         "mpin": "19122014",
          "telephone": {
            "phoneType": "Billing",
            "countryCode": "001",
            "areaCode": "562",
            "telephoneNumber": "2078793000"
          },
          "billAddr": {
            "addressLine1": "2140 GRAND AVE STE 125",
            "addressLine2": "2140 GRAND AVE STE 125",
            "addressLineOther": "2140 GRAND AVE STE 125",
            "city": "CHINO HILLS",
            "state": "CA",
            "zipCode": "990838626",
            "country": "US"
          },
          "billAddrType": "BillAddrType"
        },
        "overPaymentInfo": {
                "odarUID":"4014513183",
          "overPaymentAmount": {
            "value": "100.00",
            "currencyCode": "USD",
            "principalAmount": "80.00",
            "interestAmount": "20.00"
          },
          "overPaymentCreateDate": "10/10/2015",
          "overPaymentReason": {
            "overPaymentReasonCode": "18",
            "coordinationOfBenefits": {
              "cobCarrierName": "adf",
              "effDates": {
                "effStartDate": "12/21/2009",
                "effCancelDate": "12/21/2010"
              },
              "carrierAddress": {
                "addressLine1": "722 E HAZELWOOD DR",
                "addressLine2": "722 E HAZELWOOD DR",
                "addressLineOther": "722 E HAZELWOOD DR",
                "city": "LEMOORE",
                "state": "CA",
                "zipCode": "91824",
                "country": "US"
              },
              "policyName": "1255",
              "memGrpPolicyNumber": {
                "codeValue": "1234",
                "codeDesc": "member"
              },
              "cobCode": {
                "codeValue": "32342334",
                "codeDesc": "Nonsterile Supply"
              }
            },
            "overPaymentCauseCode": "HOS",
            "description": "HOSPITALAUDIT"
            
          },
          "additionalNotes": "Par paid as non par",
          "caseNumber": "12",
          "projectCode": "PC12",
          "bulkRecoveryId": "1",
          "unsolicitedRefundId": "Y"
        },
        "memberInfo": {
          "memberIdentifier": {
            "type": "I",
            "value": "209566392"
          },
          "dependentIdentifier": {
            "type": "I",
            "value": "123453212"
          },
          "fullName": {
            "firstName": "ROSE",
            "lastName": "ROMERO"
          },
          "effectiveDate": {
            "effStartDate": "12/12/2014",
            "effCancelDate": "12/11/2015"
          },
          "dateOfBirth": "12/11/1971",
          "phoneNumber": {
            "phoneType": "Home",
            "countryCode": "001",
            "areaCode": "612",
            "telephoneNumber": "227-0962"
          },
          "address": {
            "addressLine1": "722 E HAZELWOOD DR",
            "addressLine2": "722 E HAZELWOOD DR",
            "addressLineOther": "722 E HAZELWOOD DR",
            "city": "LEMOORE",
            "state": "CA",
            "zipCode": "91824",
            "country": "US"
          },
          "subscriber": {
            "type": "I",
            "value": "939333204"
          },
          "memberGroupOrPolicyNumber": "714438",
          "patientID": "PREM01186726",
          "patientAccNo": "1210090",
          "patientFirstName": "ROSE",
          "patientLastName": "ROMERO",
          "patientRelationCode": "EE",
          "remarkCode": "69",
          "patientDob": "",
          "dependentGender": "M",
          "reportingSuffix": "II",
          "reportingAccount": "0401",
          "reportingCode": "II",
          "accountingDivision": "ab",
          "memberSex": "2",
          "subscriberIdQualifier": "SSN"
        },
        "financialInfo": {
          "organization": "Empir",
          "legalEntityCode": {
            "codeValue": "1365",
            "codeDesc": "1365"
          },
          "fundingArrangementCode": {
            "codeValue": "FI",
            "codeDesc": "FI"
          },
          "product": "PS1",
          "region": "Region",
          "market": "0004430",
          "healthPlan": "0522",
          "obligorIdentifier": "01",
          "sharedArrangementIND": "00",
          "companyCode": "1234",
          "bankType": "C",
          "bankCode": "244",
          "hmoStatus": "Y",
          "capitatedFlag": "Y"
        },
        "correctedClaimREQ": "true",
        "recType": "A",
        "paymentInfo": {
          "paymentID": "3602051410",
          "paymentMethod": "Check",
          "transactionDetails": "H123456",
          "payDate": "7/02/2014",
          "preRecoveryPayAmount": "0.0",
          "finalPayAmount": "900.00"
        }
      }
    ]
  }
}
</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="SearchClaims" type="rest" basePath="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://dispatcher-tmptst1.ose.optum.com</con:endpoint></con:endpoints><con:resource name="searchClaims" path="/tricareservices/claims/api/rest/claimsv1/searchClaims"><con:settings/><con:parameters/><con:method name="SearchClaims" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:sear="http://dispatcher-tmptst1.ose.optum.com/tricareservices/claims/api/rest/claimsv1/searchClaims">sear:Response</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://dispatcher-tmptst1.ose.optum.com</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="TestSuite1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="ServiceTriggerFinal"><con:settings/><con:config><script><![CDATA[import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.poi.ss.util.*;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.IndexedColors;
import java.io.*;
import java.util.HashMap;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

//imports for xml parsing
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import org.xml.sax.Attributes;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;

Object.metaClass.globalColIndexCounter = 1
Object.metaClass.globalXMLTagRepetitionIndex = 0
Object.metaClass.bColIncrement = true
def HSSFWorkbook workbook
def HSSFSheet worksheet
def HSSFRow row1
def HSSFRow row2

class ReadXMLFile {
	def log
	def HSSFWorkbook workbook
	def HSSFSheet worksheet
	def HSSFRow row1
	def HSSFRow row2
	def duplicateFlag;
	HashMap <String, Integer> mapper = new HashMap<String, Integer>(); //hash map for storing xml tag repetition indexes
	//ArrayList arrXMLTags = new ArrayList(); //to track if a tag exists already in the output file
		
	def ReadXML(xmlPath) 
	{
		try {
			File fXmlFile = new File(xmlPath);
			DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
			//Code for Converting the xml response to UTF-8 compatible format
			InputStream inputStream= new FileInputStream(fXmlFile);
			Reader reader = new InputStreamReader(inputStream,"UTF-8");
			InputSource is = new InputSource(reader);
			is.setEncoding("UTF-8");
			Document doc = dBuilder.parse(is);
			//doc.getDocumentElement().normalize();
			log.info("Root element :" + doc.getDocumentElement().getNodeName())
			if (doc.hasChildNodes()) {
 				printNode(doc.getChildNodes());
 			}
 			//Globals.headerIndex = Globals.headerIndex + 2;
 			//Globals.contentIndex = Globals.contentIndex + 2;
		} catch (Exception e) {
			log.info(e.getMessage())
    		}
	}
	
	def printNode(NodeList nodeList) {
		//log.info(nodeList.getLength())
		for (int count = 0; count < nodeList.getLength(); count++) {
			Node tempNode = nodeList.item(count);
			if (tempNode.getNodeType() == Node.ELEMENT_NODE) {
				if((tempNode.getTextContent() != "") && (tempNode.getTextContent().contains("\n") != true)) {
					//if (tempNode.hasAttributes() == false) {
						if ((tempNode.getNodeName().contains("soap:Body") == false) && (tempNode.getNodeName().contains("responseHeader") == false) && (tempNode.getNodeName().contains("internalUse") == false)) 
						{
							if((tempNode.getNodeName()).length() <= 500) {
								if(globalColIndexCounter>255){
									bColIncrement = false;
								}
								if(bColIncrement == true){
									log.info("Node Length: - " + (tempNode.getNodeName()).length());
									log.info("\nNode Name =" + tempNode.getNodeName())
									
									//Code to create a hash map object and store the repetition key values
									duplicateFlag = false;
									if (mapper.containsKey(tempNode.getNodeName())) {
										log.info("Duplicate or existing node - " + tempNode.getNodeName())
										log.info("Mapper Index Node Level: - " + mapper.get(tempNode.getNodeName()));
										mapper.put(tempNode.getNodeName(), mapper.get(tempNode.getNodeName())+1);
										duplicateFlag = true;
									} else { 
									    	mapper.put(tempNode.getNodeName(),0);
									}
		
									log.info("mapper key content - " + mapper.get(tempNode.getNodeName()));
									log.info("Col Index Counter: - " + globalColIndexCounter) //changed 5/12/2015

									HSSFCell cellA1 = row1.createCell((short) globalColIndexCounter);
									
									if(duplicateFlag==true) {
										cellA1.setCellValue(tempNode.getNodeName() + "_" + mapper.get(tempNode.getNodeName()));
									} else {
										cellA1.setCellValue(tempNode.getNodeName());
									}
									
									CellStyle style = workbook.createCellStyle();
									style.setFillForegroundColor(HSSFColor.YELLOW.index);
		        						style.setFillPattern(CellStyle.SOLID_FOREGROUND);
									style.setBorderLeft((short) 1);            
									style.setBorderRight((short) 1);          
									style.setBorderTop((short) 1);              
									style.setBorderBottom((short) 1);
									//worksheet.autoSizeColumn(globalColIndexCounter);
									worksheet.setColumnWidth(globalColIndexCounter, 7500);
									cellA1.setCellStyle(style);
									
									log.info("Node Value =" + tempNode.getTextContent())
			
									HSSFCell cellA2 = row2.createCell((short) globalColIndexCounter);
									cellA2.setCellValue(tempNode.getTextContent());
		
									CellStyle style1 = workbook.createCellStyle();
									if(tempNode.getTextContent().toUpperCase() == "SUCCESS") {
										style1.setFillForegroundColor(HSSFColor.GREEN.index);
		        							style1.setFillPattern(CellStyle.SOLID_FOREGROUND);
									} else if(tempNode.getTextContent().toUpperCase() == "ERROR" || tempNode.getTextContent().toUpperCase() == "FAILURE") {
										style1.setFillForegroundColor(HSSFColor.RED.index);
		        							style1.setFillPattern(CellStyle.SOLID_FOREGROUND);
									}
									style1.setBorderLeft((short) 1);            
									style1.setBorderRight((short) 1);          
									style1.setBorderTop((short) 1);              
									style1.setBorderBottom((short) 1);
									cellA2.setCellStyle(style1);
			
									globalColIndexCounter++;	//changed on 5/12/2015
								}
							}	
						}
					//}
				}
				if (tempNode.hasChildNodes()) {
					// loop again if has child nodes
					printNode(tempNode.getChildNodes());
				}	
			}
		}
	}
}

class ExcelReader {
	def log
	def projectPath
	def readData(context) 
 	{
		//def path = "C:\\Backup\\PTP_Project\\SOAP_Services\\Input.xls";
		def path = context.expand( '${#TestCase#InputFile}' )
		InputStream inputStream = new FileInputStream(projectPath + "\\" + path);
		Workbook workbook = WorkbookFactory.create(inputStream);
		Sheet sheet = workbook.getSheetAt(0);
              
		Iterator rowIterator = sheet.rowIterator();
		rowIterator.next()
		Row row;                       
		def rowsData = []
		while(rowIterator.hasNext())
		{
			row = rowIterator.next()
			def rowIndex = row.getRowNum()
			def colIndex;
			def rowData = []
			for (Cell cell : row) 
			{
				colIndex = cell.getColumnIndex()
				
				def value;
				//cell.setCellType(Cell.CELL_TYPE_STRING);
				switch (cell.cellType)
				{
					case HSSFCell.CELL_TYPE_NUMERIC:
						if(HSSFDateUtil.isCellDateFormatted(cell))
						{
							value = new DataFormatter().formatCellValue(cell);		
							//value = cell.dateCellValue;
						}
						else
						{
							value = new DataFormatter().formatCellValue(cell);
						}
		                    break;
					case HSSFCell.CELL_TYPE_BOOLEAN:
						value = cell.booleanCellValue
						break;
 					default:
						value = new DataFormatter().formatCellValue(cell);
						break;
				}
				//log.info("Excel reader value = " + value)
				 rowData[colIndex] = value
			}                    
			rowsData << rowData
         }
		rowsData
	}
}

//Below two lines of groovy script is to get the project directory, we will be saving the soapUI log contents on a file in that directory.
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath 

//** LOG FILE DEFINITION - Place somewhere at the top of the script **//
def logDirectoryName = projectPath
def testCaseLogFileName = "\\FrameworkLogs"
def filext = ".log";
def fn = "$logDirectoryName$testCaseLogFileName$filext"
def FileName = new PrintWriter( new FileWriter(fn));

// Add for optional timestamp logging
def sdf = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS"); 
def myTime = "";

// "soapUI log" can be replaced with http log, jetty log, script log, error log etc based on the need.
//def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "error log" );  // to be commented when running through test runner

def logFile = new File(projectPath + "\\ErrorLog.txt")

//Code to check and write the execution tracker file
try{
    String sExecutionStatus = "Started";
    def sExeTrackerFile = new File(projectPath + "\\ExecutionTracker.txt");

    // if file doesnt exists, then create it
    if (!sExeTrackerFile.exists()) {
        sExeTrackerFile.createNewFile();
    }else{
		sExeTrackerFile.delete()
    }

    FileWriter fw = new FileWriter(sExeTrackerFile.getAbsoluteFile());
    BufferedWriter bw = new BufferedWriter(fw);
    bw.write(sExecutionStatus);
    bw.close();
}catch(IOException e){
    e.printStackTrace();
}

//def mex = com.eviware.soapui.model.iface.MessageExchange
def myTestCase = context.testCase

//def pathout = "C:\\Backup\\PTP_Project\\SOAP_Services\\TestOutput.xls";
def pathout = projectPath

class Globals {
	static int headerIndex = 0
	static int contentIndex = 1
	static int dataIterationIndex = 1
}

String datetime=new Date().toGMTString();
datetime=datetime.replace(" ", "");
datetime=datetime.replace(":", "");
//String outputpath = pathout + "Output_" + datetime + ".xls"  //commented to get rid of time stamp
String outputpath = pathout + "\\Output.xls"

FileOutputStream OutStream = new FileOutputStream(outputpath);
workbook = new HSSFWorkbook();

//code to read the input excel file for each of the request
ExcelReader excelReader = new ExcelReader(projectPath:projectPath, log:log);
List rows = excelReader.readData(context);

//Code to read the service name and validate it if the service step is matching with the current request step.
Iterator i = rows.iterator();

//Define the object for the collection of requests in the soapUI test case
def soapuiRequests = testRunner.testCase.getTestStepsOfType(com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep.class )
log.info("SOAP UI Requests count - " + soapuiRequests.size())

def restRequests = testRunner.testCase.getTestStepsOfType(com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep)
log.info("REST Requests count - " + restRequests.size())

//Define mapper class for tracking the sheet level indexes
HashMap <String, Integer> mapperSheet = new HashMap<String, Integer>(); //hash map for storing xml tag repetition indexes

while(i.hasNext())
{
	def d = []
	int num = 1;
	int set = 0;
	Globals.headerIndex = 0;
	Globals.contentIndex = 1;
	Globals.dataIterationIndex = 1;
	
	d = i.next();
	colArraySize = d.size;
	String ServiceName = d[0]; //Service Name
	String ExecutionFlag = d[1]; //ExecutionFlag

	log.info(ServiceName)
	log.info(ExecutionFlag)

	if((ServiceName != null) && (ExecutionFlag != null)) 
	{
		if(ExecutionFlag.toUpperCase() == "YES")
		{
			if(soapuiRequests.size() != 0)
			{
				//Groovy Script to loop through each requests in the test case.
				soapuiRequests.each
				{
					if(ServiceName.toUpperCase() == it.name.toUpperCase())
					{
						//Code to remove all the properties prior to execution
						String[] propToRemove = new String[myTestCase.getPropertyCount()];
						propToRemove = myTestCase.getPropertyNames();
						for ( int propIterator = 0 ; propIterator < propToRemove.size();propIterator++ ){
							if(propToRemove[propIterator].toUpperCase() != "INPUTFILE" && propToRemove[propIterator].toUpperCase() != "OUTPUTPROPERTY") 
							{
								myTestCase.removeProperty( propToRemove[propIterator] );	
							}
						}
						
						//code to retrieve the parameters from input excel file and create the properties at runtime
						int InputPropertyIndex = 1;
						for(colArrayIndex = 3; colArrayIndex <= colArraySize; colArrayIndex++)
						{
							def sArrayPointerValue = d[colArrayIndex-1]
							//if(sArrayPointerValue != null && !sArrayPointerValue.isEmpty())
							//{
								if(!myTestCase	.hasProperty("Property" + InputPropertyIndex)) {
		          					 myTestCase.addProperty("Property" +  InputPropertyIndex)
								}
								myTestCase.setPropertyValue("Property" +  InputPropertyIndex, sArrayPointerValue)
								log.info("Property" +InputPropertyIndex+ " - " + context.expand( '${#TestCase#Property'+InputPropertyIndex+'}' ));
								InputPropertyIndex++;
							//}
						}
		
						//Code to create a hash map object and store the repetition key values
						if (mapperSheet.containsKey(it.name + "_HeaderIndex")) {
							mapperSheet.put(it.name + "_HeaderIndex", mapperSheet.get(it.name + "_HeaderIndex")+2);
							mapperSheet.put(it.name + "_ContentIndex", mapperSheet.get(it.name + "_ContentIndex")+2);
							mapperSheet.put(it.name + "_DataIterationIndex", mapperSheet.get(it.name + "_DataIterationIndex")+1);
						} else { 
						    	mapperSheet.put(it.name + "_HeaderIndex",0);
						    	mapperSheet.put(it.name + "_ContentIndex",1);
						    	mapperSheet.put(it.name + "_DataIterationIndex",1);
						}
						Globals.headerIndex = mapperSheet.get(it.name + "_HeaderIndex");
						Globals.contentIndex = mapperSheet.get(it.name + "_ContentIndex");
						Globals.dataIterationIndex = mapperSheet.get(it.name + "_DataIterationIndex");

						log.info("Header Index While loop for Request " + it.name  + " - " + Globals.headerIndex)
						log.info("Content Index While loop for Request " + it.name  + " - " + Globals.contentIndex)
						log.info("DataIteration Index While loop for Request " + it.name  + " - " + Globals.dataIterationIndex)
						
						//code to create response output in the output workbook with request step name as sheet name
						if(workbook.getSheetIndex(it.name) == -1)
						{
							worksheet = workbook.createSheet(it.name);
							row1 = worksheet.createRow((short) Globals.headerIndex);
							row2 = worksheet.createRow((short) Globals.contentIndex);
						}else{
							log.info("Worksheet Exists at Index - " + workbook.getSheetIndex(it.name))
							worksheet = workbook.getSheetAt(workbook.getSheetIndex(it.name))
							row1 = worksheet.createRow((short) Globals.headerIndex);
							row2 = worksheet.createRow((short) Globals.contentIndex);
						}
						
						//Code to mention the header index to know which data iteration it belongs
						HSSFCell cellA1 = row1.createCell((short) 0);
						cellA1.setCellValue(it.name + "_" + Globals.dataIterationIndex);
						CellStyle style = workbook.createCellStyle();
						style.setFillForegroundColor(HSSFColor.YELLOW.index);
						style.setFillPattern(CellStyle.SOLID_FOREGROUND);
						style.setBorderLeft((short) 1);            
						style.setBorderRight((short) 1);          
						style.setBorderTop((short) 1);              
						style.setBorderBottom((short) 1);
						//worksheet.autoSizeColumn(globalColIndexCounter);
						worksheet.setColumnWidth(globalColIndexCounter, 7500);
						cellA1.setCellStyle(style);
		
						myTime = sdf.format( new Date());
						FileName.println( "$myTime Start " + it.name ); //timestamp
						testRunner.runTestStepByName( it.name)
					
						//xml file for response to be stored in local project path
						testCaseResponseFileName = projectPath + "\\" +  it.name + "_Response.xml"
						def resFileName = new File(testCaseResponseFileName)
									
						//def holder = groovyUtils.getXmlHolder (it.name + “#Response”).toString()
						def request =testRunner.testCase.getTestStepByName( it.name ); // Get the WS
						def req = request.getProperty( "Request" ); // Get the request of the WS
						def resp = request.getProperty( "Response" ); // Get the response of the WS
						FileName.println( it.name + " - Request:" ); // Print WS Name & Request: 
						FileName.println( req.value ); // Print WS request
						FileName.println( it.name + " - Response:" ); // Print WS Name & Response:
						FileName.println( resp.value ); // Print WS respone
						resFileName.write( resp.value ); //Print response into xml file in the project path
						
						//log.info(mex.getResponseContentAsXml.toString())
						testRunner.runTestStepByName( "PropertyTransfer")
						myTime = sdf.format( new Date());
						FileName.println( "$myTime End " + it.name ); //timestamp
					
						ReadXMLFile readXMLObj = new ReadXMLFile(log:log, workbook:workbook, worksheet:worksheet, row1:row1, row2:row2);
						readXMLObj.ReadXML(testCaseResponseFileName);
						resFileName.delete()
		
						//Globals.headerIndex = Globals.headerIndex + 2; // change made on 5/12/2015
						//Globals.contentIndex = Globals.contentIndex + 2; // change made on 5/12/2015
						//Globals.dataIterationIndex = Globals.dataIterationIndex + 1;
					}	
				}
			}

			if( restRequests.size() != 0)
			{
				//Groovy Script to loop through each requests in the test case.
				restRequests.each
				{
					if(ServiceName.toUpperCase() == it.name.toUpperCase())
					{
						//Code to remove all the properties prior to execution
						String[] propToRemove = new String[myTestCase.getPropertyCount()];
						propToRemove = myTestCase.getPropertyNames();
						for ( int propIterator = 0 ; propIterator < propToRemove.size();propIterator++ ){
							if(propToRemove[propIterator].toUpperCase() != "INPUTFILE" && propToRemove[propIterator].toUpperCase() != "OUTPUTPROPERTY") 
							{
								myTestCase.removeProperty( propToRemove[propIterator] );	
							}
						}
						
						//code to retrieve the parameters from input excel file and create the properties at runtime
						int InputPropertyIndex = 1;
						for(colArrayIndex = 3; colArrayIndex <= colArraySize; colArrayIndex++)
						{
							def sArrayPointerValue = d[colArrayIndex-1]
							if(sArrayPointerValue != null && !sArrayPointerValue.isEmpty())
							{
								if(!myTestCase	.hasProperty("Property" + InputPropertyIndex)) {
		          					 myTestCase.addProperty("Property" +  InputPropertyIndex)
								}
								myTestCase.setPropertyValue("Property" +  InputPropertyIndex, sArrayPointerValue)
								log.info("Property" +InputPropertyIndex+ " - " + context.expand( '${#TestCase#Property'+InputPropertyIndex+'}' ));
								InputPropertyIndex++;
							}
						}
		
						//Code to create a hash map object and store the repetition key values
						if (mapperSheet.containsKey(it.name + "_HeaderIndex")) {
							mapperSheet.put(it.name + "_HeaderIndex", mapperSheet.get(it.name + "_HeaderIndex")+2);
							mapperSheet.put(it.name + "_ContentIndex", mapperSheet.get(it.name + "_ContentIndex")+2);
							mapperSheet.put(it.name + "_DataIterationIndex", mapperSheet.get(it.name + "_DataIterationIndex")+1);
						} else { 
						    	mapperSheet.put(it.name + "_HeaderIndex",0);
						    	mapperSheet.put(it.name + "_ContentIndex",1);
						    	mapperSheet.put(it.name + "_DataIterationIndex",1);
						}
						Globals.headerIndex = mapperSheet.get(it.name + "_HeaderIndex");
						Globals.contentIndex = mapperSheet.get(it.name + "_ContentIndex");
						Globals.dataIterationIndex = mapperSheet.get(it.name + "_DataIterationIndex");

						log.info("Header Index While loop for Request " + it.name  + " - " + Globals.headerIndex)
						log.info("Content Index While loop for Request " + it.name  + " - " + Globals.contentIndex)
						log.info("DataIteration Index While loop for Request " + it.name  + " - " + Globals.dataIterationIndex)
						
						//code to create response output in the output workbook with request step name as sheet name
						if(workbook.getSheetIndex(it.name) == -1)
						{
							worksheet = workbook.createSheet(it.name);
							//row1 = worksheet.createRow((short)0); // change made on 5/12/2015
							row1 = worksheet.createRow((short) Globals.headerIndex);
							row2 = worksheet.createRow((short) Globals.contentIndex);
						}else{
							log.info("Worksheet Exists at Index - " + workbook.getSheetIndex(it.name))
							worksheet = workbook.getSheetAt(workbook.getSheetIndex(it.name))
							row1 = worksheet.createRow((short) Globals.headerIndex);
							row2 = worksheet.createRow((short) Globals.contentIndex);
						}
		
						//Code to mention the header index to know which data iteration it belongs
						HSSFCell cellA1 = row1.createCell((short) 0);
						cellA1.setCellValue(it.name + "_" + Globals.dataIterationIndex);
						CellStyle style = workbook.createCellStyle();
						style.setFillForegroundColor(HSSFColor.YELLOW.index);
						style.setFillPattern(CellStyle.SOLID_FOREGROUND);
						style.setBorderLeft((short) 1);            
						style.setBorderRight((short) 1);          
						style.setBorderTop((short) 1);              
						style.setBorderBottom((short) 1);
						//worksheet.autoSizeColumn(globalColIndexCounter);
						worksheet.setColumnWidth(globalColIndexCounter, 7500);
						cellA1.setCellStyle(style);
		
						myTime = sdf.format( new Date());
						FileName.println( "$myTime Start " + it.name ); //timestamp
						testRunner.runTestStepByName( it.name)
					
						//xml file for response to be stored in local project path
						testCaseResponseFileName = projectPath + "\\" +  it.name + "_Response.xml"
						def resFileName = new File(testCaseResponseFileName)
									
						//def holder = groovyUtils.getXmlHolder (it.name + “#Response”).toString()
						def request =testRunner.testCase.getTestStepByName( it.name ); // Get the WS
						def req = request.getProperty( "Request" ); // Get the request of the WS
						def resp = request.getProperty( "ResponseAsXML" ); // Get the response of the WS
						FileName.println( it.name + " - Request:" ); // Print WS Name & Request: 
						FileName.println( req.value ); // Print WS request
						FileName.println( it.name + " - Response:" ); // Print WS Name & Response:
						FileName.println( resp.value ); // Print WS respone
						resFileName.write( resp.value ); //Print response into xml file in the project path
						
						//log.info(mex.getResponseContentAsXml.toString())
						testRunner.runTestStepByName( "PropertyTransfer")
						myTime = sdf.format( new Date());
						FileName.println( "$myTime End " + it.name ); //timestamp
					
						ReadXMLFile readXMLObj = new ReadXMLFile(log:log, workbook:workbook, worksheet:worksheet, row1:row1, row2:row2);
						readXMLObj.ReadXML(testCaseResponseFileName);
						resFileName.delete()
		
						//headerIndex = headerIndex + 2; // change made on 5/12/2015
						//contentIndex = contentIndex + 2; // change made on 5/12/2015
						//dataIterationIndex = dataIterationIndex + 1;
					}	
				}
			}
		}
	}
}

workbook.write(OutStream);
OutStream.flush();
OutStream.close();

//This is the first line in the soapUI log file. ------ this code snippet should be commented when running through test runner as the getlog area is deactivated while running from test runner
//   if (logArea != null) // code to verify if the error get log area is not null before saving anything
//   {
//   	logFile.write("soapUI Logs In a file.\r\n")
//      def model = logArea.model
//      if( model.size > 0 )            
//         for( c in 0..(model.size-1) )         
//           logFile.append(model.getElementAt( c ))       
//      
//   }

//Code to check and write the execution tracker file
try{
    String sExecutionStatus = "Completed";
    def sExeTrackerFile = new File(projectPath + "\\ExecutionTracker.txt");

    // if file doesnt exists, then create it
    if (!sExeTrackerFile.exists()) {
        sExeTrackerFile.createNewFile();
    }else{
		sExeTrackerFile.delete()
    }

    FileWriter fw = new FileWriter(sExeTrackerFile.getAbsoluteFile());
    BufferedWriter bw = new BufferedWriter(fw);
    bw.write(sExecutionStatus);
    bw.close();
}catch(IOException e){
    e.printStackTrace();
}

FileName.flush();
FileName.close();]]></script></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ind_d</con:name><con:sourceType xsi:nil="true"/><con:sourceStep xsi:nil="true"/><con:sourcePath>xpath to be given.</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>ORMS</con:targetStep><con:targetPath>xpath</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="JSONBuildTest"><con:settings/><con:config><script>import groovy.json.JsonOutput
import java.lang.*
import java.util.*

def jsonBuilder = new groovy.json.JsonBuilder()
HashMap &lt;String, Object> mapper = new HashMap&lt;String, Object>();

class MyActivityInfo{
	def sourceTransactionId
	def activityId
	def activityDate
	def publishDate
	def transactionType
	def firstName
	def lastName
	def dateOfBirth
	def searchID
	def contractNumber

	public void setData (srcTransactionId, actyId, actyDate, pubDate, transType, fstName, lstName, dtOfBirth, srchID, ctrctNum) {
   		this.sourceTransactionId = srcTransactionId
   		this.activityId = actyId
   		this.activityDate = actyDate
   		this.publishDate = pubDate
   		this.transactionType = transType
   		this.firstName = fstName
   		this.lastName = lstName
   		this.dateOfBirth = dtOfBirth
   		this.searchID = srchID
   		this.contractNumber = ctrctNum
	} 
	
	@Override
	public String toString() {
		def content = "{ \"sourceTransactionId\" : \"" + this.sourceTransactionId + "\", \"activityId\" : \"" + this.activityId + "\", \"activityDate\" : \"" + this.activityDate + "\", \"publishDate\" : \"" + this.publishDate + "\", \"transactionType\" : \"" + this.transactionType + "\", \"memberEligibilityIdentifier\" : { \"firstName\" : \"" + this.firstName + "\", \"lastName\" : \"" + this.lastName + "\", \"dateOfBirth\" : \"" + this.dateOfBirth + "\", \"searchID\" : \"" + this.searchID + "\", \"contractNumber\" : \"" + this.contractNumber + "\" }}";
		return content;
    }
}

def sRecordCount = 3
List&lt;Object> myActivityList = new ArrayList&lt;>();
for(iRecPtr = 1; iRecPtr&lt;=sRecordCount; iRecPtr++)
{
	def myActivityInfo1 = new MyActivityInfo();
	myActivityInfo1.setData('201501290113', 'RALLY.HEALTH_SURVEY.LONG', '2015-01-29T00:00:00Z', '2015-01-29T00:00:00Z', 'NEW', 'COKLEY', 'ROBBIE', '1970-02-04T00:00:00Z', '316228379', '0777783');
	mapper.put("Object_" + iRecPtr , myActivityInfo1);

	myActivityList.add(mapper.get("Object_" + iRecPtr))
}

log.info(myActivityList.size())

jsonBuilder(activityInformation: myActivityList)
//log.info(jsonBuilder.toPrettyString())
String content
content = jsonBuilder.getContent();
content = content.replaceAll("activityInformation=", "\"activityInformation\":");
log.info(content);</script></con:config></con:testStep><con:testStep type="restrequest" name="ORMS"><con:settings/><con:config service="ORMS" resourcePath="/orms_core_app/payment/orms/intake/overPayment/v1" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ORMS" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://apsrt1684.uhc.com:9080</con:endpoint><con:request>                {
  "overpaymentList": {
    "overpayments": [
      {
        "claimInfo": {
          "sourceSystemCode": "TOPS",
          "claimProductInfo": "Medica",
          "claimServiceState": "FL",
          "situsStateCode": "TX",
          "paymentMethod": "EFT_NUMBER",
          "payeeType": {
           
            "payeeType": "provider",
            "payeeName": "MERCY HOSPITAL",
            "entityPayee": {
              "organizationName": "Park Nicollet",
              "organizationAdress": {
                "addressLine1": "1025 S Anaheim Blvd",
                "addressLine2": "1025 S Anaheim Blvd",
                "addressLineOther": "1025 S Anaheim Blvd",
                "city": "Anaheim",
                "state": "CA",
                "zipCode": "90670",
                "country": "US"
              }
            }
          },
          "claimNumber": "4014513183",
          "draftNumber": "2016184012",
          "servicePaidAmount": "700.00",
          "paidDate": "5/1/2015",
          "totalClaimChargeAmount": "126.00",
          "claimAllowedAmount": "100.80",
          "startDateOfService": "12/21/2009",
          "endDateOfService": "03/04/2014",
          "submittedInstitutionalRevenueCode": {
            "codeValue": "271",
            "codeDesc": "Nonsterile Supply"
          },
          "commonProcTerminalogyCd": {
            "codeValue": "97810",
            "codeDesc": "Acupuncture"
          },
          "submittedServiceLineNumber": "423545656",
          "otherSourceSystemIdentifier": {
            "adjudicationOffice": "127",
            "engine": "F",
            "site": "OMAHA"
          },
          "panel": "",
          "paymentTrace": "",
          "encounterCode": "",
          "paymentDraftNumber": "1999682409",
          "filmLocNoDate": "14274",
          "filmLocNoSeq": "46946",
          "filmOfficeNo": "0985",
          "signOnOfficeNo": "127",
          "claimKeyedOfficeNo": "00000000",
          "claimFileType": "HS",
          "checkSeriesDesignator": "1234561129",
          "claimPaymentSeqNo": "182739",
          "checkSuppressId": "N",
          "coinsuranceAmount": "0",
          "deductibleAmount": "0",
          "copayAmount": "0",
          "surchargeAmount": "0",
          "nmfAmount": "0",
          "nySurchargeEligId": "0",
          "caeClaimNumber": "427",
          "originalPaymentDate": "10/02/2014"
        },
        "providerInfo": {
          "taxIdNumber": "231120152",
          "marketSite": "0010460",
          "providerMarketType": "50",
          "providerIPA": "00000",
          "providerProductCode": "POS",
          "primaryCarePhyTin": "23232342",
          "providerType": "MD",
          "providerSpecialityCode": "FP",
          "providerName": "Deepesh",
          "providerParticipatingCode": "1234",
          "addrCareName": "Park Nicolet",
          "nationalProvId": "1912907114",
          "facilityTypeCode": "P",
          "providerDBAName": "MH",
          "providerTinPrefix": "00050",
          "providerTinSuffix": "00050",
         "mpin": "19122014",
          "telephone": {
            "phoneType": "Billing",
            "countryCode": "001",
            "areaCode": "562",
            "telephoneNumber": "2078793000"
          },
          "billAddr": {
            "addressLine1": "2140 GRAND AVE STE 125",
            "addressLine2": "2140 GRAND AVE STE 125",
            "addressLineOther": "2140 GRAND AVE STE 125",
            "city": "CHINO HILLS",
            "state": "CA",
            "zipCode": "990838626",
            "country": "US"
          },
          "billAddrType": "BillAddrType"
        },
        "overPaymentInfo": {
                "odarUID":"4014513183",
          "overPaymentAmount": {
            "value": "100.00",
            "currencyCode": "USD",
            "principalAmount": "80.00",
            "interestAmount": "20.00"
          },
          "overPaymentCreateDate": "10/10/2015",
          "overPaymentReason": {
            "overPaymentReasonCode": "18",
            "coordinationOfBenefits": {
              "cobCarrierName": "adf",
              "effDates": {
                "effStartDate": "12/21/2009",
                "effCancelDate": "12/21/2010"
              },
              "carrierAddress": {
                "addressLine1": "722 E HAZELWOOD DR",
                "addressLine2": "722 E HAZELWOOD DR",
                "addressLineOther": "722 E HAZELWOOD DR",
                "city": "LEMOORE",
                "state": "CA",
                "zipCode": "91824",
                "country": "US"
              },
              "policyName": "1255",
              "memGrpPolicyNumber": {
                "codeValue": "1234",
                "codeDesc": "member"
              },
              "cobCode": {
                "codeValue": "32342334",
                "codeDesc": "Nonsterile Supply"
              }
            },
            "overPaymentCauseCode": "HOS",
            "description": "HOSPITALAUDIT"
            
          },
          "additionalNotes": "Par paid as non par",
          "caseNumber": "12",
          "projectCode": "PC12",
          "bulkRecoveryId": "1",
          "unsolicitedRefundId": "Y"
        },
        "memberInfo": {
          "memberIdentifier": {
            "type": "I",
            "value": "209566392"
          },
          "dependentIdentifier": {
            "type": "I",
            "value": "123453212"
          },
          "fullName": {
            "firstName": "ROSE",
            "lastName": "ROMERO"
          },
          "effectiveDate": {
            "effStartDate": "12/12/2014",
            "effCancelDate": "12/11/2015"
          },
          "dateOfBirth": "12/11/1971",
          "phoneNumber": {
            "phoneType": "Home",
            "countryCode": "001",
            "areaCode": "612",
            "telephoneNumber": "227-0962"
          },
          "address": {
            "addressLine1": "722 E HAZELWOOD DR",
            "addressLine2": "722 E HAZELWOOD DR",
            "addressLineOther": "722 E HAZELWOOD DR",
            "city": "LEMOORE",
            "state": "CA",
            "zipCode": "91824",
            "country": "US"
          },
          "subscriber": {
            "type": "I",
            "value": "939333204"
          },
          "memberGroupOrPolicyNumber": "714438",
          "patientID": "PREM01186726",
          "patientAccNo": "1210090",
          "patientFirstName": "ROSE",
          "patientLastName": "ROMERO",
          "patientRelationCode": "EE",
          "remarkCode": "69",
          "patientDob": "",
          "dependentGender": "M",
          "reportingSuffix": "II",
          "reportingAccount": "0401",
          "reportingCode": "II",
          "accountingDivision": "ab",
          "memberSex": "2",
          "subscriberIdQualifier": "SSN"
        },
        "financialInfo": {
          "organization": "Empir",
          "legalEntityCode": {
            "codeValue": "1365",
            "codeDesc": "1365"
          },
          "fundingArrangementCode": {
            "codeValue": "FI",
            "codeDesc": "FI"
          },
          "product": "PS1",
          "region": "Region",
          "market": "0004430",
          "healthPlan": "0522",
          "obligorIdentifier": "01",
          "sharedArrangementIND": "00",
          "companyCode": "1234",
          "bankType": "C",
          "bankCode": "244",
          "hmoStatus": "Y",
          "capitatedFlag": "Y"
        },
        "correctedClaimREQ": "true",
        "recType": "A",
        "paymentInfo": {
          "paymentID": "3602051410",
          "paymentMethod": "Check",
          "transactionDetails": "H123456",
          "payDate": "7/02/2014",
          "preRecoveryPayAmount": "0.0",
          "finalPayAmount": "900.00"
        }
      }
    ]
  }
}
</con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="SearchClaims"><con:settings/><con:config service="SearchClaims" resourcePath="/tricareservices/claims/api/rest/claimsv1/searchClaims" methodName="SearchClaims" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="SearchClaims" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dispatcher-tmptst1.ose.optum.com</con:endpoint><con:request>{ "sponsorID": "${#TestCase#Property1}", "beneficiaryID": "${#TestCase#Property2}"  , "dateOption" :  "daterange",   "startDate" :"${#TestCase#Property3}", "endDate" :"${#TestCase#Property4}",  "languageTag" : "${#TestCase#Property5}" }</con:request><con:originalUri>http://dispatcher-tmptst1.ose.optum.com/tricareservices/claims/api/rest/claimsv1/searchClaims</con:originalUri><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>InputFile</con:name><con:value>Input.xls</con:value></con:property><con:property><con:name>Property1</con:name><con:value>989899000</con:value></con:property><con:property><con:name>Property2</con:name><con:value>9898955555</con:value></con:property><con:property><con:name>Property3</con:name><con:value>01/02/2016</con:value></con:property><con:property><con:name>Property4</con:name><con:value>03/03/2016</con:value></con:property><con:property><con:name>Property5</con:name><con:value>us</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:properties/><con:encryptedContent xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:wssContainer><con:crypto><con:source>C:/WebServiceFramework/odin-keystore.jks</con:source><con:password>1n5tallm3</con:password><con:type>KEYSTORE</con:type></con:crypto><con:crypto><con:source>C:/WebServiceFramework/optumservicesApi2015new.jks</con:source><con:password>optumapi</con:password><con:type>KEYSTORE</con:type></con:crypto><con:crypto><con:source>C:/WebServiceFramework/findConsumerKeyStore.jks</con:source><con:password>wesbfc</con:password><con:type>KEYSTORE</con:type></con:crypto><con:outgoing><con:name>test</con:name><con:entry type="Username" username="ptpcm" password="mBC/1234"><con:configuration><addCreated>true</addCreated><addNonce>true</addNonce><passwordType>PasswordText</passwordType></con:configuration></con:entry><con:entry type="Timestamp"><con:configuration><timeToLive>180</timeToLive><strictTimestamp>true</strictTimestamp></con:configuration></con:entry></con:outgoing><con:outgoing><con:name>findConsumer</con:name><con:entry type="Timestamp"><con:configuration><timeToLive>60</timeToLive><strictTimestamp>true</strictTimestamp></con:configuration></con:entry><con:entry type="Signature" username="findconsumer"><con:configuration><crypto>findConsumerKeyStore.jks</crypto><keyIdentifierType>0</keyIdentifierType><signatureAlgorithm/><signatureCanonicalization/><useSingleCert>false</useSingleCert><digestAlgorithm/></con:configuration></con:entry><con:entry type="Username"><con:configuration/></con:entry></con:outgoing></con:wssContainer><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>
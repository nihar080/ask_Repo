<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="WebServicesFramework_OutputHorizontal" resourceRoot="" soapui-version="4.6.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="ProjectSettings@shadowPassword"/></con:settings><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="fslSupplierService" type="wsdl" bindingName="{http://dms-fsl.uhc.com/fulfillment/definitions}fslSupplierService" soapVersion="1_2" anonymous="optional" definition="https://dms-fsl-sys.uhc.com/fslservices/fslSupplierService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://dms-fsl-sys.uhc.com/fsl_services/fslSupplierService.wsdl"><con:part><con:url>https://dms-fsl-sys.uhc.com/fsl_services/fslSupplierService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://dms-fsl.uhc.com/fulfillment/definitions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:fsl="http://dms-fsl.uhc.com/fulfillment/schema" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://dms-fsl.uhc.com/fulfillment/definitions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://dms-fsl.uhc.com/fulfillment/schema" schemaLocation="fslSupplierOperations.xsd"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="processFulfillmentRequest">
    <wsdl:part element="fsl:processFulfillmentRequest" name="processFulfillmentRequest"/>
  </wsdl:message>
  <wsdl:message name="processFulfillmentRequest_response">
    <wsdl:part element="fsl:processFulfillmentRequestResponse" name="processFulfillmentRequest_response"/>
  </wsdl:message>
  <wsdl:message name="cancelFulfillmentRequest">
    <wsdl:part element="fsl:cancelFulfillmentRequest" name="cancelFulfillmentRequest"/>
  </wsdl:message>
  <wsdl:message name="cancelFulfillmentRequest_response">
    <wsdl:part element="fsl:cancelFulfillmentRequestResponse" name="cancelFulfillmentRequest_response"/>
  </wsdl:message>
  <wsdl:message name="processArchiveRequest">
    <wsdl:part element="fsl:processArchiveRequest" name="processArchiveRequest"/>
  </wsdl:message>
  <wsdl:message name="processArchiveRequest_response">
    <wsdl:part element="fsl:processArchiveRequestResponse" name="processArchiveRequest_response"/>
  </wsdl:message>
  <wsdl:message name="getFulfillmentRequestStatus">
    <wsdl:part element="fsl:getFulfillmentRequestStatus" name="getFulfillmentRequestStatus"/>
  </wsdl:message>
  <wsdl:message name="getFulfillmentRequestStatus_response">
    <wsdl:part element="fsl:getFulfillmentRequestStatusResponse" name="getFulfillmentRequestStatus_response"/>
  </wsdl:message>
  <wsdl:portType name="fslSupplierService">
    <wsdl:operation name="processFulfillmentRequest">
      <wsdl:input message="tns:processFulfillmentRequest"/>
      <wsdl:output message="tns:processFulfillmentRequest_response"/>
    </wsdl:operation>
    <wsdl:operation name="cancelFulfillmentRequest">
      <wsdl:input message="tns:cancelFulfillmentRequest"/>
      <wsdl:output message="tns:cancelFulfillmentRequest_response"/>
    </wsdl:operation>
    <wsdl:operation name="processArchiveRequest">
      <wsdl:input message="tns:processArchiveRequest"/>
      <wsdl:output message="tns:processArchiveRequest_response"/>
    </wsdl:operation>
    <wsdl:operation name="getFulfillmentRequestStatus">
      <wsdl:input message="tns:getFulfillmentRequestStatus"/>
      <wsdl:output message="tns:getFulfillmentRequestStatus_response"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="fslSupplierService" type="tns:fslSupplierService">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="processFulfillmentRequest">
      <soap12:operation soapAction="http://dms-fsl.uhc.com/fsl_services/Supplier/processFulfillmentRequest"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="cancelFulfillmentRequest">
      <soap12:operation soapAction="http://dms-fsl.uhc.com/fsl_services/Supplier/cancelFulfillmentRequest"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="processArchiveRequest">
      <soap12:operation soapAction="http://dms-fsl.uhc.com/fsl_services/Supplier/processArchiveRequest"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFulfillmentRequestStatus">
      <soap12:operation soapAction="http://dms-fsl.uhc.com/fsl_services/Supplier/getFulfillmentRequestStatus"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="fslSupplierService">
    <wsdl:port binding="tns:fslSupplierService" name="fslSupplierService">
      <soap12:address location="http://dms-fsl-sys.uhc.com:80/fsl_services/Supplier"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>https://dms-fsl-sys.uhc.com/fsl_services/fslSupplierOperations.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://dms-fsl.uhc.com/fulfillment/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://dms-fsl.uhc.com/fulfillment/schema" xmlns:ack="http://enterprise.unitedhealthgroup.com/schema/message/acknowledge/v7_00" xmlns:fsl="http://dms-fsl.uhc.com/fulfillment/schema">
  <xs:include schemaLocation="FulfillmentService.xsd"/>
  <xs:include schemaLocation="FulfillmentRequestStatus.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/message/acknowledge/v7_00" schemaLocation="./message/acknowledge/v7_00/acknowledge.xsd"/>
  <xs:element name="processFulfillmentRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="fulfillmentRequest" type="fsl:fulfillmentRequestType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="processFulfillmentRequestResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ack:acknowledgeMsg"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="cancelFulfillmentRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="fulfillmentRequest" type="fulfillmentRequestType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="cancelFulfillmentRequestResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ack:acknowledgeMsg"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="processArchiveRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="fulfillmentRequest" type="fulfillmentRequestType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="processArchiveRequestResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ack:acknowledgeMsg"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getFulfillmentRequestStatus">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="fulfillmentRequest">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="requestHeader" type="requestStatusHeaderType"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getFulfillmentRequestStatusResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="fulfillmentRequestStatusResponse" type="fulfillmentRequestStatusType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://dms-fsl-sys.uhc.com/fsl_services/message/acknowledge/v7_00/acknowledge.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://enterprise.unitedhealthgroup.com/schema/message/acknowledge/v7_00" version="7.0.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ack="http://enterprise.unitedhealthgroup.com/schema/message/acknowledge/v7_00" xmlns:com="http://enterprise.unitedhealthgroup.com/schema/canonical/base/common/v7_00" xmlns:root="http://enterprise.unitedhealthgroup.com/schema/canonical/base/root/v7_00">
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canonical/base/root/v7_00" schemaLocation="../../../canonical/base/root/v7_00/root.xsd"/>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canonical/base/common/v7_00" schemaLocation="../../../canonical/base/common/v7_00/common.xsd"/>
  <xs:element name="acknowledgeMsg" type="ack:acknowledgeMsgType"/>
  <xs:complexType name="acknowledgeType">
    <xs:sequence>
      <xs:element minOccurs="0" name="ackReportingLevel" type="xs:string">
        <xs:annotation>
          <xs:documentation>Level of detail being reported in acknowledgement. e.g. File, Transaction, Detail.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="validationResults">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="fileLevelValidation">
              <xs:annotation>
                <xs:documentation>Validation results at the file level; may also be used to report file-level errors.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" name="fileStatus" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>Status of file being acknowledged (ie. Accepted, Rejected, Invalid, Valid, etc.).</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element minOccurs="0" name="fileLevelErrors">
                    <xs:annotation>
                      <xs:documentation>Errors which are found during file level validation are reported here (ie. missing header/trailer).</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element maxOccurs="unbounded" name="fileError" type="ack:error"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="transactionLevelAck">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" name="transactionType" type="root:CodeDescPairType">
                    <xs:annotation>
                      <xs:documentation>Denotes what represents a transaction on the file being acknowledged (ie. Member, Claim, Record).</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="transaction">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element minOccurs="0" name="transactionStatus" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>Denotes status of transaction (ie. Accepted, Rejected).</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element minOccurs="0" name="transactionKey" type="ack:key">
                          <xs:annotation>
                            <xs:documentation>Key field information required by the sending system to identify transactions which have been rejected.</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element minOccurs="0" name="transactionLevelErrors">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element maxOccurs="unbounded" minOccurs="0" name="transactionError" type="ack:error"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element minOccurs="0" name="recordLevelAck">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element maxOccurs="unbounded" minOccurs="0" name="record">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element minOccurs="0" name="recordType" type="root:CodeDescPairType"/>
                                    <xs:element minOccurs="0" name="recordKey" type="ack:key"/>
                                    <xs:element minOccurs="0" name="recordNumber" type="xs:int"/>
                                    <xs:element minOccurs="0" name="recordLevelErrors">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element maxOccurs="unbounded" minOccurs="0" name="recordError" type="ack:error"/>
                                        </xs:sequence>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element minOccurs="0" name="fieldLevelAck">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element maxOccurs="unbounded" minOccurs="0" name="field">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element minOccurs="0" name="fieldName" type="root:CodeDescPairType"/>
                                                <xs:element minOccurs="0" name="fieldStartPosition" type="xs:int"/>
                                                <xs:element minOccurs="0" name="fieldEndPosition" type="xs:int"/>
                                                <xs:element minOccurs="0" name="fieldLevelErrors">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element maxOccurs="unbounded" minOccurs="0" name="fieldError" type="ack:error"/>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="error">
    <xs:annotation>
      <xs:documentation>Contains information pertaining to a specific validation error found.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="errorCode" type="root:CodeDescPairType"/>
      <xs:element minOccurs="0" name="errorType" type="root:CodeDescPairType"/>
      <xs:element minOccurs="0" name="sourceSysCode" type="root:CodeDescPairType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="key">
    <xs:sequence>
      <xs:element minOccurs="0" name="keyName" type="xs:string"/>
      <xs:element minOccurs="0" name="keyValue" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="acknowledgeMsgType">
    <xs:sequence>
      <xs:element minOccurs="0" name="header" type="com:HeaderMsgType"/>
      <xs:element minOccurs="0" name="acknowledge" type="ack:acknowledgeType">
        <xs:annotation>
          <xs:documentation>Standard validation acknowledgement for non X12 file formats.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="trailer" type="com:TrailObjType"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://dms-fsl-sys.uhc.com/fsl_services/canonical/base/root/v7_00/root.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://enterprise.unitedhealthgroup.com/schema/canonical/base/root/v7_00" version="7.0.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:root="http://enterprise.unitedhealthgroup.com/schema/canonical/base/root/v7_00">
  <!--=======================================================-->
  <!---->
  <xs:annotation>
    <xs:documentation>Schema for basic Simple and Complex types Domain-independent Data Elements which are shared by all Domains.</xs:documentation>
  </xs:annotation>
  <xs:complexType name="AmountType">
    <xs:annotation>
      <xs:documentation>Represents a monetary amount including the currency code.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="value" type="root:ValueType"/>
      <xs:element minOccurs="0" name="currencyCode" type="root:CodeTextType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CodeDescPairType">
    <xs:annotation>
      <xs:documentation>Reusable Element used for reference data structures. handles Code valus and description</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="code" type="root:ValueType">
        <xs:annotation>
          <xs:documentation>Code Value</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="desc" type="root:ValueType">
        <xs:annotation>
          <xs:documentation>Code description</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DateTimeType">
    <xs:annotation>
      <xs:documentation>Represents Date, Time, or both Date and Time</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="date" type="xs:string"/>
      <xs:element minOccurs="0" name="time" type="xs:string"/>
      <xs:element minOccurs="0" name="dateTime" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DateRangeType">
    <xs:annotation>
      <xs:documentation>A range of dates.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="startDate" type="xs:string"/>
      <xs:element minOccurs="0" name="stopDate" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OidCodeIdentifierType">
    <xs:annotation>
      <xs:documentation>Examples found here:  http://www.fda.gov/ForIndustry/DataStandards/StructuredProductLabeling/ucm162061.htm</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="sourceSysOID" type="root:IdentifierValueType"/>
      <xs:element minOccurs="0" name="sourceSysName" type="root:NameType"/>
      <xs:element minOccurs="0" name="codeValueId" type="root:IdentifierValueType"/>
      <xs:element minOccurs="0" name="codeDescription" type="root:CodeTextType"/>
      <xs:element minOccurs="0" name="EffectiveDateRange" type="root:DateRangeType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="IdentifierType">
    <xs:annotation>
      <xs:documentation>An identifier of the object in which associated.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="sourceSysCode" type="root:CodeTextType"/>
      <xs:element minOccurs="0" name="id" type="root:IdentifierValueType">
        <xs:annotation>
          <xs:documentation>was sourceSysId in prior versions</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MeasureType">
    <xs:annotation>
      <xs:documentation>Represents a measure and the unit of measure.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="value" type="root:ValueType"/>
      <xs:element minOccurs="0" name="unitOfMeasureCode" type="root:CodeTextType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QuantityType">
    <xs:annotation>
      <xs:documentation>Represents a quantity the unit of measure.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="value" type="root:ValueType"/>
      <xs:element minOccurs="0" name="unitOfMeasureCode" type="root:CodeTextType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TextType">
    <xs:annotation>
      <xs:documentation>Represents text and the language code of the text.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="text" type="root:ValueType"/>
      <xs:element minOccurs="0" name="languageCode" type="root:CodeTextType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TimeRangeType">
    <xs:annotation>
      <xs:documentation>A range of times in free format.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="startTime" type="xs:string"/>
      <xs:element minOccurs="0" name="endTime" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ValueRangeType">
    <xs:annotation>
      <xs:documentation>Range of Minimum and Maximum value text, used for capturing non numeric values</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="min" type="xs:string">
        <xs:annotation>
          <xs:documentation>Minimum Value</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="max" type="xs:string">
        <xs:annotation>
          <xs:documentation>maximum value</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!---->
  <xs:simpleType name="AmountValueType">
    <xs:annotation>
      <xs:documentation>A value of the amount.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="CodeTextType">
    <xs:annotation>
      <xs:documentation>A text of the code.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="IdentifierValueType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="IndicatorType">
    <xs:annotation>
      <xs:documentation>Represents an indicator true or false.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="NameType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="QuantityValueType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="TextValueType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="ValueType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://dms-fsl-sys.uhc.com/fsl_services/canonical/base/common/v7_00/common.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://enterprise.unitedhealthgroup.com/schema/canonical/base/common/v7_00" version="7.0.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:com="http://enterprise.unitedhealthgroup.com/schema/canonical/base/common/v7_00" xmlns:root="http://enterprise.unitedhealthgroup.com/schema/canonical/base/root/v7_00">
  <!--=======================================================-->
  <!---->
  <!--=============================================================
       Schema for Non-basic Domain-independent Data Elements which are shared by all Domains.
        =============================================================-->
  <xs:annotation>
    <xs:documentation>Schema for Non-basic Domain-independent Data Elements which are shared by all Domains.</xs:documentation>
  </xs:annotation>
  <xs:import namespace="http://enterprise.unitedhealthgroup.com/schema/canonical/base/root/v7_00" schemaLocation="../../root/v7_00/root.xsd"/>
  <!--#############################Ranges-->
  <xs:complexType name="EffDateRangeType">
    <xs:annotation>
      <xs:documentation>Combination of Effective Start and Cancel Date.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="effStartDate" type="xs:string">
        <xs:annotation>
          <xs:documentation>This is the Effective Start date for an aggrement or arrangement or Contract or Service</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="effCancelDate" type="xs:string">
        <xs:annotation>
          <xs:documentation>This is the Effective End date or Cancel Date for an aggrement or arrangement or Contract or Service</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CalendarFreqType">
    <xs:annotation>
      <xs:documentation>This is the calendar frequency type code and description. (Daily, monthly, quarterly etc)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="root:CodeDescPairType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="EffDatetimeRangeTypexx">
    <xs:annotation>
      <xs:documentation>Combination of Effective Start and Cancel Datetime</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="effStartDatetime" type="xs:string">
        <xs:annotation>
          <xs:documentation>Start Date and Time; e.g. YYYY-MM-DD HH:MM.SS</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="effCancelDatetime" type="xs:string">
        <xs:annotation>
          <xs:documentation>End Date and Time; e.g. YYYY-MM-DD HH:MM.SS</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatedMeasureType">
    <xs:annotation>
      <xs:documentation>Represents a unit of measure code, description, and the effective dates.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="qualifiedMeasure" type="root:MeasureType"/>
      <xs:element minOccurs="0" name="unitOfMeasureDescription" type="root:CodeTextType"/>
      <xs:element minOccurs="0" name="effectiveDateRange" type="root:DateRangeType"/>
    </xs:sequence>
  </xs:complexType>
  <!--#############################Codes-->
  <xs:complexType name="EffectiveDateRangeIdType">
    <xs:complexContent>
      <xs:extension base="root:IdentifierType">
        <xs:sequence>
          <xs:element minOccurs="0" name="effectiveDateRange" type="root:DateRangeType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="EffectiveDateRangeCodeType">
    <xs:complexContent>
      <xs:extension base="root:CodeDescPairType">
        <xs:sequence>
          <xs:element minOccurs="0" name="effectiveDateRange" type="root:DateRangeType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CodeInfoType">
    <xs:annotation>
      <xs:documentation>Standard codes as defined by a code system (either within UHG or by an external standrds organization). Removed the default display name, default sort order and default display indicator as these can be handled by the application specific needs.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>The system assigned number used to identify a unique occurrence of a reference data.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Code assigned to the reference data by a standard code system.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Name assigned to the reference data by a standard code system.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="desc" type="xs:string">
        <xs:annotation>
          <xs:documentation>Description of the reference data as defined by a standard code system.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="effectiveDateRange" type="root:DateRangeType">
        <xs:annotation>
          <xs:documentation>Combination of Effective Start and Cancel Date.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="codeSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Code identifying the Standard code system to which the codes belong.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="codeSystemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Name identifying the Standard code system to which the codes belong.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SourceSystemType">
    <xs:annotation>
      <xs:documentation>Identifies Source of the information.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>The system assigned number used to identify a unique occurrence of a SOURCE SYSTEM.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Code assigned for the Source System.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Name assigned for the Source System.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>Description of the Source System.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NameDecriptionIDType">
    <xs:sequence>
      <xs:element minOccurs="0" name="id" type="root:IdentifierType"/>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="description" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <!--#############################Pairs-->
  <xs:complexType name="SourceSystemIdentifierPairType">
    <xs:annotation>
      <xs:documentation>Structure Element to handle Identifier and SourceSystem</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="sourceSysCode" type="xs:string">
        <xs:annotation>
          <xs:documentation>Identifies the Source System</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="sourceSysId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Unique identifier in aSource System, e.g. Subscriber ID, Patient ID, SSN, Claim Identifier, etc.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NameValuePairType">
    <xs:annotation>
      <xs:documentation>A name-value pair, using com:AnyType to allow the value to be any XML type.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="value" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ValueEffectiveDatePairType">
    <xs:annotation>
      <xs:documentation>Structured Element to handle Code Values and effective date combination.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="value" type="xs:string">
        <xs:annotation>
          <xs:documentation>Contains the Code Value for an Arrangement or Agreement or a reference data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="effectiveDates" type="root:DateRangeType">
        <xs:annotation>
          <xs:documentation>Effective Dates associated with a Transaction for this Code Value</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--#############################Misc-->
  <xs:complexType name="IndustryType">
    <xs:annotation>
      <xs:documentation>Structured Element to handle different Industry Types</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>A value defined by the Industry Type that represents the Industry the Entity is in. Sourced from vendors such as DnB.Major Industry Category - Code that denotes the major industry category under which an establishment falls: 0=Misc./public administration; 1=agriculture; 2=mining; 3=construction;  4=manufacturing; 5=transportation, communications, utilities; 6=wholesale trade; 7=retail trade; 8=finance, insurance, real estate; 9=services.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="desc" type="xs:string">
        <xs:annotation>
          <xs:documentation>The textual description of the Industry Code.ie.transportation, financial, health care, etc.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OrganizationType">
    <xs:annotation>
      <xs:documentation>A legal entity (company,
government agency, association,
partnership, sole proprietor, or other entity) that a business party
tracks for business purposes.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="orgIdentifier" type="xs:string">
        <xs:annotation>
          <xs:documentation>The system assigned number used to identify a unique occurrence of an Organization. In this case this identifies Medicare.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="orgLegalName" type="xs:string">
        <xs:annotation>
          <xs:documentation>This is the Legal name of the
employer group. Used to capture
information where the Employer is doing business under a different
name. For example, ACE Shoe
Company doing business under the name of Big Al's Shoes, ACE Shoe Company is the legal name, but Big Al's Shoes is the Customer Name</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="taxIdNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>A Tax Identification Number is the
number provided by the Internal
Revenue Services (IRS) to an
Organization. This can be a Social
Security number or federal Tax
Identification Number.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="5" minOccurs="0" name="orgContactMechanisms" type="com:OrgContactMechanismType">
        <xs:annotation>
          <xs:documentation>The Organization Contact
Mechanism contains all of the
methods selected by an
Organization to receive
communication from UnitedHealth
Group (UHG).
This entity resolves the Many to
Many Relationships between an
Organization and a Contact
Mechanism.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OrgContactMechanismType">
    <xs:annotation>
      <xs:documentation>The Organization Contact
Mechanism contains all of the
methods selected by an
Organization to receive
communication from UnitedHealth
Group (UHG).
This entity resolves the Many to
Many Relationships between an
Organization and a Contact
Mechanism.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="contactMechanismIdentifier" type="xs:string">
        <xs:annotation>
          <xs:documentation>This uniquely identifies an occurrence
of a Consumer Contact Mechanism.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="organizationContactTypeCode" type="root:CodeDescPairType">
        <xs:annotation>
          <xs:documentation>The Organization Contact Mechanism
Code defines if the Organization
address is Corporate, Human
Resources, Billing etc..</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="organizationContactTypeCodeDates" type="com:EffDateRangeType">
        <xs:annotation>
          <xs:documentation>This is the date the Organization
Contact Type Code became effective.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--############################# Message Header and Trailer-->
  <xs:complexType name="CountType">
    <xs:sequence>
      <xs:element minOccurs="0" name="type" type="xs:string"/>
      <xs:element minOccurs="0" name="occurance" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TrailObjType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="objectCount" type="com:CountType">
        <xs:annotation>
          <xs:documentation>A count of objects contained in this message.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="communicatedObjectCount" type="com:CountType">
        <xs:annotation>
          <xs:documentation>A count of communicated objects that have been passed including this one.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="totalObjectCount" type="com:CountType">
        <xs:annotation>
          <xs:documentation>A count of total objects in the set to be communicated.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="HeaderObjType">
    <xs:sequence>
      <xs:element minOccurs="0" name="sourceId" type="root:IdentifierType">
        <xs:annotation>
          <xs:documentation>This is unique source id of the system which will be used to print logo on template</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="intermediaryId" type="root:IdentifierType">
        <xs:annotation>
          <xs:documentation>This is unique source id of the system which will be used to print logo on template</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="targetId" type="root:IdentifierType">
        <xs:annotation>
          <xs:documentation>This is unique target id of the system which will be used to print logo on template</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="timeStamp" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="transactionCode">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="root:CodeDescPairType">
              <xs:sequence>
                <xs:element minOccurs="0" name="subCategoryCode" type="root:CodeDescPairType"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="corelationId" type="root:IdentifierType"/>
      <xs:element minOccurs="0" name="object" type="root:ValueType">
        <xs:annotation>
          <xs:documentation>B@B and EDI suggested FICS File ID used in Outbound Accumulator and Inbound Acknowledgment</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="version" type="root:IdentifierType">
        <xs:annotation>
          <xs:documentation>Canonical Schema Version, use value from schema namespace</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="environmentCode" type="root:CodeDescPairType"/>
      <xs:element minOccurs="0" name="userId" type="root:IdentifierType">
        <xs:annotation>
          <xs:documentation>A unique identifier of the user that initiated the transaction.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="sessionId" type="root:IdentifierType">
        <xs:annotation>
          <xs:documentation>A unique identifier of the session that initiated the transaction.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!---->
  <xs:complexType name="HeaderMsgType">
    <xs:annotation>
      <xs:documentation>Element Structure for Header Messages</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="action" type="xs:string">
        <xs:annotation>
          <xs:documentation>Specify the action to be performed by Target System; Add, Update, Delete, Refresh</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="msgIdentifier" type="xs:string">
        <xs:annotation>
          <xs:documentation>Message Identifier or Control Number, unique identifier for a sent or received message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="srcSystem" type="xs:string">
        <xs:annotation>
          <xs:documentation>Specify the Source System code or Identifier</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="srcEnvironment" type="xs:string">
        <xs:annotation>
          <xs:documentation>Specify the Source Environment; dev, systest, uat, master</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="srcDbQualifier" type="xs:string">
        <xs:annotation>
          <xs:documentation>Specify the Source Database Qualifier, e.g. F5925DBA, F5938DBA, F5938DBJ, F5938DBE</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="srcTable" type="xs:string">
        <xs:annotation>
          <xs:documentation>Specifies the Source Table</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="srcProgram" type="xs:string">
        <xs:annotation>
          <xs:documentation>Specifies the Source Program</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="msgDate" type="xs:string">
        <xs:annotation>
          <xs:documentation>Specifies teh Date this message was sent</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="msgTime" type="xs:string">
        <xs:annotation>
          <xs:documentation>specifies the time this message was sent</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="transType" type="root:CodeDescPairType"/>
      <xs:element minOccurs="0" name="transSubCat" type="root:CodeDescPairType"/>
      <xs:element maxOccurs="100" minOccurs="0" name="targetSystems" type="xs:string">
        <xs:annotation>
          <xs:documentation>Specifies the Target System/Target Area</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="version" type="xs:string">
        <xs:annotation>
          <xs:documentation>Canonical Schema Version, use value from schema namespace</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="fileID" type="xs:string">
        <xs:annotation>
          <xs:documentation>B@B and EDI suggested FICS File ID used in Outbound Accumulator and Inbound Acknowledgment</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TrailObjTypeold">
    <xs:annotation>
      <xs:documentation>Complex element structure for message trailer object, based on inputs provided by B2B team, July 2013</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="msgIdentifier" type="xs:string">
        <xs:annotation>
          <xs:documentation>Message Identifier or Control Number, unique identifier for a sent or received message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="srcSystem" type="xs:string">
        <xs:annotation>
          <xs:documentation>Specify the Source System code or Identifier</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="transType" type="root:CodeDescPairType">
        <xs:annotation>
          <xs:documentation>Transaction type; specify the type of data sent with this transaction; this should be same as TransactionType in the header Object</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="transactionCount" type="xs:string">
        <xs:annotation>
          <xs:documentation>Transaction count, number of body tags received with this message transaction</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="TrailMsgType">
    <xs:annotation>
      <xs:documentation>Trailer Message Strcuture</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="EOM"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="RoleType">
    <xs:annotation>
      <xs:documentation>Defines Entity Role with Effective Dates</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="roleTypeCode" type="com:CodeInfoType">
        <xs:annotation>
          <xs:documentation>The code that identifies the role being
played by an Entity. Example for Consumer: Member, Authorized Representative, Prospect, or Subscriber for the product.
 Example, code identifies the relationship of the consumer to the subscriber:
000 - Subscriber/Recipient,
001 - Spouse/Domestic Partner, 
002 - Child/Other (i.e. non-spousal dependent), 
003 - Unknown</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="relationshipCancelReasonCode" type="root:CodeDescPairType">
        <xs:annotation>
          <xs:documentation>This valid abbreviation code identifies
why a relationship is cancelled.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AuditType">
    <xs:annotation>
      <xs:documentation>Element Structure to handle audit information to be exchanged with message</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="actvCode" type="xs:string">
        <xs:annotation>
          <xs:documentation>Specifies if the associated record is Active or  Inactive</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="userId" type="xs:string">
        <xs:annotation>
          <xs:documentation>User ID of the Person or Application that last updated the record</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="userOfcCode" type="xs:string">
        <xs:annotation>
          <xs:documentation>Office Code of the User who last updated the record</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="lstUpdtDate" type="xs:string">
        <xs:annotation>
          <xs:documentation>last update date for record</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="lstUpdtTime" type="xs:string">
        <xs:annotation>
          <xs:documentation>last update time for record</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="lstUpdtTypCode" type="xs:string">
        <xs:annotation>
          <xs:documentation>Last update type for record, whether insert, update, etc</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="tmlReasonCode" type="xs:string">
        <xs:annotation>
          <xs:documentation>timeline reason code</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AckType">
    <xs:annotation>
      <xs:documentation>Container for Acknowledgement information, used with batch and other EDI transactions; initial object defined based on inputs from B2B team July 2013</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="ackDate" type="xs:string">
        <xs:annotation>
          <xs:documentation>Acknowledgement date - date on which acknowledgement was sent</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ackTime" type="xs:string">
        <xs:annotation>
          <xs:documentation>Acknowledgement Time; time at which acknowledgement was sent</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ackStatusCode" type="root:CodeDescPairType">
        <xs:annotation>
          <xs:documentation>Acknowledgement status code</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="transactionCount" type="xs:string">
        <xs:annotation>
          <xs:documentation>Transaction count, number of bosy tags received with this message transaction</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectReasonCode" type="root:CodeDescPairType">
        <xs:annotation>
          <xs:documentation>Reject reason code; reason for rejecting this message transaction</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:annotation>
    <xs:documentation>#######ODIN User Object Types</xs:documentation>
  </xs:annotation>
  <xs:complexType name="ApplObjectType">
    <xs:sequence>
      <xs:element minOccurs="0" name="identifier" type="xs:string">
        <xs:annotation>
          <xs:documentation>Application Object Identifier</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Application Object Name</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="objectState" type="root:CodeDescPairType">
        <xs:annotation>
          <xs:documentation>Application Object State</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="objectTypeCode" type="root:CodeDescPairType">
        <xs:annotation>
          <xs:documentation>Application Object Type Code</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="effectiveDates" type="com:EffDateRangeType">
        <xs:annotation>
          <xs:documentation>Object Effective start and cancel dates</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ObjToObjRelType">
    <xs:sequence>
      <xs:element minOccurs="0" name="primaryObject" type="com:ApplObjectType"/>
      <xs:element minOccurs="0" name="relatedObject" type="com:ApplObjectType"/>
      <xs:element minOccurs="0" name="objectRelType" type="root:CodeDescPairType"/>
      <xs:element minOccurs="0" name="relEffectiveDates" type="com:EffDateRangeType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SystemType">
    <xs:annotation>
      <xs:documentation>System:  identifies the credientials the Crecentials are associated with.
Examples could be:  eHP, My UHC, UUID (universal Identifier for a person) which is developed to pass information to a back end system.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>HSA
my MyUHC ID or eHP ID
UUid, CDB,</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="activeInd" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NotificationType">
    <xs:annotation>
      <xs:documentation>Entity that will hold notification related data</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>Notification identifier</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="header" type="xs:string">
        <xs:annotation>
          <xs:documentation>This is the Subject Line (header)of the Notification</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="text" type="xs:string">
        <xs:annotation>
          <xs:documentation>This is forms the content or body of the Notification message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="dateTime" type="xs:string">
        <xs:annotation>
          <xs:documentation>Notificate Data Time Stamp</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="iconUri" type="xs:string">
        <xs:annotation>
          <xs:documentation>Link or reference to an image that is associated with a notification</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AlternateIdentifierType">
    <xs:complexContent>
      <xs:extension base="root:CodeDescPairType"/>
    </xs:complexContent>
  </xs:complexType>
  <!--#####Error Handling for API-->
  <xs:complexType name="ErrorType">
    <xs:annotation>
      <xs:documentation>Error handling object for API</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>Error Identifier</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="value" type="xs:string">
        <xs:annotation>
          <xs:documentation>A unique code indicating the error.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="desc" type="xs:string">
        <xs:annotation>
          <xs:documentation>description for the error.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="uri" type="xs:string">
        <xs:annotation>
          <xs:documentation>A URI in which more information is provided about the error.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="dateTime" type="xs:string">
        <xs:annotation>
          <xs:documentation>Date timestamp when error reported</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="userId" type="xs:string">
        <xs:annotation>
          <xs:documentation>User Identifier</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="applicationId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Application Identifier</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--Preference-->
  <xs:complexType name="PreferrenceType">
    <xs:complexContent>
      <xs:extension base="com:SequenceCodeType">
        <xs:sequence>
          <xs:element minOccurs="0" name="indicator" type="root:IndicatorType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--Qualified Data Types-->
  <xs:complexType name="QualifiedAmountType">
    <xs:complexContent>
      <xs:extension base="root:AmountType">
        <xs:sequence>
          <xs:element minOccurs="0" name="typeCode" type="com:CodeInfoType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="QualifiedIdType">
    <xs:complexContent>
      <xs:extension base="root:IdentifierType">
        <xs:sequence>
          <xs:element minOccurs="0" name="typeCode" type="root:CodeDescPairType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="QualifiedCodeType">
    <xs:complexContent>
      <xs:extension base="root:CodeDescPairType">
        <xs:sequence>
          <xs:element minOccurs="0" name="typeCode" type="root:CodeDescPairType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="QualifiedIdentifierType">
    <xs:complexContent>
      <xs:extension base="root:IdentifierType">
        <xs:sequence>
          <xs:element minOccurs="0" name="typeCode" type="root:CodeDescPairType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="QualifiedMeasureType">
    <xs:complexContent>
      <xs:extension base="root:MeasureType">
        <xs:sequence>
          <xs:element minOccurs="0" name="typeCode" type="com:CodeInfoType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="QualifiedQuantityType">
    <xs:complexContent>
      <xs:extension base="root:QuantityType">
        <xs:sequence>
          <xs:element minOccurs="0" name="typeCode" type="com:CodeInfoType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="FormatDateRangeType">
    <xs:complexContent>
      <xs:extension base="root:DateRangeType">
        <xs:sequence>
          <xs:element minOccurs="0" name="formatCode" type="root:CodeDescPairType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--Effective Data Types-->
  <xs:complexType name="SequenceCodeType">
    <xs:complexContent>
      <xs:extension base="root:CodeDescPairType">
        <xs:sequence>
          <xs:element minOccurs="0" name="sequence" type="root:ValueType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SequenceIdentifierType">
    <xs:complexContent>
      <xs:extension base="root:IdentifierType">
        <xs:sequence>
          <xs:element minOccurs="0" name="sequence" type="root:ValueType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StandardCodingSystemType">
    <xs:annotation>
      <xs:documentation>Examples and additional information can be found here:  http://www.fda.gov/ForIndustry/DataStandards/StructuredProductLabeling/ucm162061.htm and here http://www.oid-info.com/index.htm#oid</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="codesetName" type="root:NameType"/>
      <xs:element minOccurs="0" name="codesetOID" type="root:IdentifierValueType"/>
      <xs:element minOccurs="0" name="assigningOrganizationName" type="root:NameType"/>
      <xs:element minOccurs="0" name="versionValue" type="root:ValueType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="StandardCodeIdentifierType">
    <xs:annotation>
      <xs:documentation>An object identifier (OID) has a central utility in providing a traceable source for the meaning of an identifier appearing in a cross-system communication.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="codingSystem" type="com:StandardCodingSystemType"/>
      <xs:element minOccurs="0" name="codeValueId" type="root:IdentifierValueType"/>
      <xs:element minOccurs="0" name="codeDescription" type="root:CodeTextType"/>
      <xs:element minOccurs="0" name="EffectiveDateRange" type="root:DateRangeType"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://dms-fsl-sys.uhc.com/fsl_services/FulfillmentService.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://dms-fsl.uhc.com/fulfillment/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://dms-fsl.uhc.com/fulfillment/schema">
  <xs:include schemaLocation="FulfillmentRequestDetail.xsd"/>
  <xs:element name="fulfillmentRequest" type="fulfillmentRequestType">
    <xs:annotation>
      <xs:documentation>Fulfillment Request root</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="requestHeaderType">
    <xs:sequence>
      <xs:element name="requestID">
        <xs:annotation>
          <xs:documentation>Unique identifier for a request.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="sourceID">
        <xs:annotation>
          <xs:documentation>Identifies the requesting application</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="destinationID">
        <xs:annotation>
          <xs:documentation>Identifies the target supplier entity.  Populated by FSL.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="requestDate">
        <xs:annotation>
          <xs:documentation>The timestamp the request was  submitted.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:dateTime"/>
        </xs:simpleType>
      </xs:element>
      <xs:element name="requestType">
        <xs:annotation>
          <xs:documentation>Identifies the type of request</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Process">
              <xs:annotation>
                <xs:documentation>requestType for processFulfillmentRequest operation</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Cancel">
              <xs:annotation>
                <xs:documentation>requestType for cancelFulfillmentRequest operation</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Archive"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="fulfillmentType">
        <xs:annotation>
          <xs:documentation>Identifies the fulfillment material type.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="requestCategory">
        <xs:annotation>
          <xs:documentation>Identifies the fulfillment style</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="BulkDataOnly"/>
            <xs:enumeration value="TransactionalDataOnly"/>
            <xs:enumeration value="BulkPrintReady"/>
            <xs:enumeration value="TransactionalPrintReady"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="serviceLevelCategory">
        <xs:annotation>
          <xs:documentation>Request level priority.  Distinguishes priority level of individual requests.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="dataFormat">
        <xs:annotation>
          <xs:documentation>Identifies the physical data format</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="requestorRefNo">
        <xs:annotation>
          <xs:documentation>reference number, supplied by requestor</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="supplierRefNo">
        <xs:annotation>
          <xs:documentation>reference number, assigned by supplier</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="requestItemCount">
        <xs:annotation>
          <xs:documentation>The number of items in the request.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:integer"/>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="bulkRequestDetailType">
    <xs:sequence>
      <xs:element name="filePath">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="fileName">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="fileSize">
        <xs:simpleType>
          <xs:restriction base="xs:integer"/>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="ecgDetail" type="xs:anyType"/>
      <xs:element minOccurs="0" name="sourceDetail" type="xs:anyType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="requestDetailType">
    <xs:choice>
      <xs:element name="transactionalRequestDetail" type="requestItemType"/>
      <xs:element maxOccurs="unbounded" name="bulkRequestDetail" type="bulkRequestDetailType">
        <xs:annotation>
          <xs:documentation>Builk request external file location</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>
  <xs:element name="fulfillmentResponse" type="fulfillmentResponseType"/>
  <xs:complexType name="fulfillmentRequestType">
    <xs:sequence>
      <xs:element name="requestHeader" type="requestHeaderType"/>
      <xs:element minOccurs="0" name="requestDetail" type="requestDetailType"/>
      <xs:element minOccurs="0" name="extension" type="xs:anyType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="fulfillmentResponseType">
    <xs:sequence>
      <xs:element name="requestHeader" type="requestHeaderType"/>
      <xs:element minOccurs="0" name="statusCode" type="xs:string"/>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://dms-fsl-sys.uhc.com/fsl_services/FulfillmentRequestDetail.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://dms-fsl.uhc.com/fulfillment/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://dms-fsl.uhc.com/fulfillment/schema">
  <xs:element name="fulfillmentRequestDetail">
    <xs:annotation>
      <xs:documentation>Root element for Bulk requests</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="fulfillmentRequestHeader">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="requestID" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="requestItems">
          <xs:complexType>
            <xs:sequence>
              <xs:element maxOccurs="unbounded" ref="requestItem"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="requestItem" type="requestItemType"/>
  <xs:complexType name="AddressType">
    <xs:sequence>
      <xs:element minOccurs="0" name="Address1" type="xs:string"/>
      <xs:element minOccurs="0" name="Address2" type="xs:string"/>
      <xs:element minOccurs="0" name="Address3" type="xs:string"/>
      <xs:element minOccurs="0" name="City" type="xs:string"/>
      <xs:element minOccurs="0" name="State" type="xs:string"/>
      <xs:element minOccurs="0" name="Zip" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AddressInternationalType">
    <xs:sequence>
      <xs:element minOccurs="0" name="Address1" type="xs:string"/>
      <xs:element minOccurs="0" name="Address2" type="xs:string"/>
      <xs:element minOccurs="0" name="Address3" type="xs:string"/>
      <xs:element minOccurs="0" name="City" type="xs:string"/>
      <xs:element minOccurs="0" name="Province" type="xs:string"/>
      <xs:element minOccurs="0" name="PostalCD" type="xs:string"/>
      <xs:element minOccurs="0" name="Country" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="recipientType">
    <xs:sequence>
      <xs:element minOccurs="0" name="recipientId" type="xs:string"/>
      <xs:element minOccurs="0" name="idQualifier" type="xs:string"/>
      <xs:element minOccurs="0" name="deliveryMethod" type="xs:string"/>
      <xs:element minOccurs="0" name="recipientType" type="xs:string">
        <xs:annotation>
          <xs:documentation>I.e. Member, Provider, Subscriber</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice>
        <xs:element minOccurs="0" name="organization" type="organizationType"/>
        <xs:element minOccurs="0" name="person" type="personType"/>
      </xs:choice>
      <xs:choice>
        <xs:element minOccurs="0" name="MailToAddress" type="AddressType"/>
        <xs:element minOccurs="0" name="MailToAddressInternational" type="AddressInternationalType"/>
      </xs:choice>
      <xs:choice>
        <xs:element minOccurs="0" name="ReturnToAddress" type="AddressType"/>
        <xs:element minOccurs="0" name="ReturnToAddressInternational" type="AddressInternationalType"/>
      </xs:choice>
      <xs:element minOccurs="0" name="faxNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="emailAddress" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="itemCommonDataType">
    <xs:sequence>
      <xs:element name="requestItemHeader" type="requestItemHeaderType"/>
      <xs:element name="requestItemDetail" type="requestItemDetailType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="organizationType">
    <xs:sequence>
      <xs:element minOccurs="0" name="name1" type="xs:string"/>
      <xs:element minOccurs="0" name="name2" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="personType">
    <xs:sequence>
      <xs:element minOccurs="0" name="prefix" type="xs:string"/>
      <xs:element minOccurs="0" name="firstName" type="xs:string"/>
      <xs:element minOccurs="0" name="middleName" type="xs:string"/>
      <xs:element minOccurs="0" name="lastName" type="xs:string"/>
      <xs:element minOccurs="0" name="suffix" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="templateType">
    <xs:sequence>
      <xs:element minOccurs="0" name="category" type="xs:string"/>
      <xs:element minOccurs="0" name="templateName" type="xs:string"/>
      <xs:element minOccurs="0" name="data" type="xs:anyType"/>
    </xs:sequence>
    <xs:attribute name="type" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>template type:</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="requestItemType">
    <xs:complexContent>
      <xs:extension base="itemCommonDataType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="carbonRequest" type="itemCommonDataType"/>
          <xs:element name="data" type="xs:anyType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="requestItemHeaderType">
    <xs:sequence>
      <xs:element name="requestItemID" type="xs:string"/>
      <xs:element minOccurs="0" name="requestorItemRefNo"/>
      <xs:element minOccurs="0" name="supplierItemRefNo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="requestItemDetailType">
    <xs:sequence>
      <xs:element minOccurs="0" name="recipient" type="recipientType"/>
      <xs:element maxOccurs="unbounded" name="template" type="templateType"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://dms-fsl-sys.uhc.com/fsl_services/FulfillmentRequestStatus.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://dms-fsl.uhc.com/fulfillment/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://dms-fsl.uhc.com/fulfillment/schema">
  <xs:include schemaLocation="FulfillmentRequestDetail.xsd"/>
  <xs:complexType name="requestStatusHeaderType">
    <xs:sequence>
      <xs:element name="requestID">
        <xs:annotation>
          <xs:documentation>Unique identifier for a request.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="sourceID">
        <xs:annotation>
          <xs:documentation>Identifies the requesting application</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="destinationID">
        <xs:annotation>
          <xs:documentation>Identifies the target supplier entity.  Populated by FSL.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="requestDate">
        <xs:annotation>
          <xs:documentation>The timestamp the request was  submitted.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:dateTime"/>
        </xs:simpleType>
      </xs:element>
      <xs:element name="requestType">
        <xs:annotation>
          <xs:documentation>Identifies the type of request</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="GetFulfillmentRequestStatus"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="requestorRefNo">
        <xs:annotation>
          <xs:documentation>reference number, supplied by requestor</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="supplierRefNo">
        <xs:annotation>
          <xs:documentation>reference number, assigned by supplier</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="exceptionDetailType">
    <xs:sequence>
      <xs:element name="itemCommonData" type="itemCommonDataType">
        <xs:annotation>
          <xs:documentation>Item Common Data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="statusCode" type="xs:string">
        <xs:annotation>
          <xs:documentation>StatusCode</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Message</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="requestHistoryType">
    <xs:sequence>
      <xs:element name="processor" type="xs:string">
        <xs:annotation>
          <xs:documentation>Processor.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="eventType" type="xs:string">
        <xs:annotation>
          <xs:documentation>Type of Event</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="receivedDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>The timestamp the request was received</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dispatchedDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>The timestamp the request was dispatched</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="statusCode" type="xs:string">
        <xs:annotation>
          <xs:documentation>StatusCode.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="successCount" type="xs:integer">
        <xs:annotation>
          <xs:documentation>Success Count.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="exceptionCount" type="xs:integer">
        <xs:annotation>
          <xs:documentation>Exception Count</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="exceptionDetail" type="exceptionDetailType">
        <xs:annotation>
          <xs:documentation>Exception Details</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="fulfillmentRequestStatus" type="fulfillmentRequestStatusType"/>
  <xs:complexType name="fulfillmentRequestStatusType">
    <xs:sequence>
      <xs:element name="requestHeader" type="requestStatusHeaderType"/>
      <xs:element name="currentRequestEvent" type="xs:string"/>
      <xs:element maxOccurs="unbounded" name="requestHistory" type="requestHistoryType"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://dms-fsl-sys.uhc.com:80/fsl_services/Supplier</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://dms-fsl.uhc.com/fsl_services/Supplier/cancelFulfillmentRequest" name="cancelFulfillmentRequest" bindingOperationName="cancelFulfillmentRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://dms-fsl-sys.uhc.com:80/fsl_services/Supplier</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:sch="http://dms-fsl.uhc.com/fulfillment/schema">
   <soap:Header/>
   <soap:Body>
      <sch:cancelFulfillmentRequest>
         <sch:fulfillmentRequest>
            <sch:requestHeader>
               <sch:requestID>?</sch:requestID>
               <sch:sourceID>?</sch:sourceID>
               <!--Optional:-->
               <sch:destinationID>?</sch:destinationID>
               <sch:requestDate>?</sch:requestDate>
               <sch:requestType>?</sch:requestType>
               <sch:fulfillmentType>?</sch:fulfillmentType>
               <sch:requestCategory>?</sch:requestCategory>
               <!--Optional:-->
               <sch:serviceLevelCategory>?</sch:serviceLevelCategory>
               <sch:dataFormat>?</sch:dataFormat>
               <!--Optional:-->
               <sch:requestorRefNo>?</sch:requestorRefNo>
               <!--Optional:-->
               <sch:supplierRefNo>?</sch:supplierRefNo>
               <sch:requestItemCount>?</sch:requestItemCount>
            </sch:requestHeader>
            <!--Optional:-->
            <sch:requestDetail>
               <!--You have a CHOICE of the next 2 items at this level-->
               <sch:transactionalRequestDetail>
                  <sch:requestItemID>?</sch:requestItemID>
                  <!--Optional:-->
                  <sch:requestorItemRefNo>?</sch:requestorItemRefNo>
                  <!--Optional:-->
                  <sch:supplierItemRefNo>?</sch:supplierItemRefNo>
                  <!--Optional:-->
                  <sch:recipient>
                     <!--Optional:-->
                     <sch:recipientId>?</sch:recipientId>
                     <!--Optional:-->
                     <sch:idQualifier>?</sch:idQualifier>
                     <sch:deliveryMethod>?</sch:deliveryMethod>
                     <sch:recipientType>?</sch:recipientType>
                     <!--You have a CHOICE of the next 2 items at this level-->
                     <sch:organization>
                        <sch:name1>?</sch:name1>
                        <sch:name2>?</sch:name2>
                     </sch:organization>
                     <sch:person>
                        <sch:prefix>?</sch:prefix>
                        <sch:firstName>?</sch:firstName>
                        <sch:middleName>?</sch:middleName>
                        <sch:lastName>?</sch:lastName>
                        <sch:suffix>?</sch:suffix>
                     </sch:person>
                     <!--You have a CHOICE of the next 2 items at this level-->
                     <!--Optional:-->
                     <sch:MailToAddress>
                        <sch:Address1>?</sch:Address1>
                        <!--Optional:-->
                        <sch:Address2>?</sch:Address2>
                        <!--Optional:-->
                        <sch:Address3>?</sch:Address3>
                        <sch:City>?</sch:City>
                        <sch:State>?</sch:State>
                        <sch:Zip>?</sch:Zip>
                     </sch:MailToAddress>
                     <!--Optional:-->
                     <sch:MailToAddressInternational>
                        <sch:Address1>?</sch:Address1>
                        <!--Optional:-->
                        <sch:Address2>?</sch:Address2>
                        <!--Optional:-->
                        <sch:Address3>?</sch:Address3>
                        <sch:City>?</sch:City>
                        <sch:Province>?</sch:Province>
                        <sch:PostalCD>?</sch:PostalCD>
                        <sch:Country>?</sch:Country>
                     </sch:MailToAddressInternational>
                     <!--You have a CHOICE of the next 2 items at this level-->
                     <!--Optional:-->
                     <sch:ReturnToAddress>
                        <sch:Address1>?</sch:Address1>
                        <!--Optional:-->
                        <sch:Address2>?</sch:Address2>
                        <!--Optional:-->
                        <sch:Address3>?</sch:Address3>
                        <sch:City>?</sch:City>
                        <sch:State>?</sch:State>
                        <sch:Zip>?</sch:Zip>
                     </sch:ReturnToAddress>
                     <!--Optional:-->
                     <sch:ReturnToAddressInternational>
                        <sch:Address1>?</sch:Address1>
                        <!--Optional:-->
                        <sch:Address2>?</sch:Address2>
                        <!--Optional:-->
                        <sch:Address3>?</sch:Address3>
                        <sch:City>?</sch:City>
                        <sch:Province>?</sch:Province>
                        <sch:PostalCD>?</sch:PostalCD>
                        <sch:Country>?</sch:Country>
                     </sch:ReturnToAddressInternational>
                     <!--Optional:-->
                     <sch:faxNumber>?</sch:faxNumber>
                     <!--Optional:-->
                     <sch:emailAddress>?</sch:emailAddress>
                  </sch:recipient>
                  <!--1 or more repetitions:-->
                  <sch:template type="?">
                     <sch:category>?</sch:category>
                     <sch:templateName>?</sch:templateName>
                     <!--Optional:-->
                     <sch:data>?</sch:data>
                  </sch:template>
                  <!--Zero or more repetitions:-->
                  <sch:carbonRequest>
                     <sch:requestItemID>?</sch:requestItemID>
                     <!--Optional:-->
                     <sch:sourceItemRefNo>?</sch:sourceItemRefNo>
                     <!--Optional:-->
                     <sch:supplierItemRefNo>?</sch:supplierItemRefNo>
                     <!--Optional:-->
                     <sch:recipient>
                        <!--Optional:-->
                        <sch:recipientId>?</sch:recipientId>
                        <!--Optional:-->
                        <sch:idQualifier>?</sch:idQualifier>
                        <sch:deliveryMethod>?</sch:deliveryMethod>
                        <sch:recipientType>?</sch:recipientType>
                        <!--You have a CHOICE of the next 2 items at this level-->
                        <sch:organization>
                           <sch:name1>?</sch:name1>
                           <sch:name2>?</sch:name2>
                        </sch:organization>
                        <sch:person>
                           <sch:prefix>?</sch:prefix>
                           <sch:firstName>?</sch:firstName>
                           <sch:middleName>?</sch:middleName>
                           <sch:lastName>?</sch:lastName>
                           <sch:suffix>?</sch:suffix>
                        </sch:person>
                        <!--You have a CHOICE of the next 2 items at this level-->
                        <!--Optional:-->
                        <sch:MailToAddress>
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <sch:City>?</sch:City>
                           <sch:State>?</sch:State>
                           <sch:Zip>?</sch:Zip>
                        </sch:MailToAddress>
                        <!--Optional:-->
                        <sch:MailToAddressInternational>
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <sch:City>?</sch:City>
                           <sch:Province>?</sch:Province>
                           <sch:PostalCD>?</sch:PostalCD>
                           <sch:Country>?</sch:Country>
                        </sch:MailToAddressInternational>
                        <!--You have a CHOICE of the next 2 items at this level-->
                        <!--Optional:-->
                        <sch:ReturnToAddress>
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <sch:City>?</sch:City>
                           <sch:State>?</sch:State>
                           <sch:Zip>?</sch:Zip>
                        </sch:ReturnToAddress>
                        <!--Optional:-->
                        <sch:ReturnToAddressInternational>
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <sch:City>?</sch:City>
                           <sch:Province>?</sch:Province>
                           <sch:PostalCD>?</sch:PostalCD>
                           <sch:Country>?</sch:Country>
                        </sch:ReturnToAddressInternational>
                        <!--Optional:-->
                        <sch:faxNumber>?</sch:faxNumber>
                        <!--Optional:-->
                        <sch:emailAddress>?</sch:emailAddress>
                     </sch:recipient>
                     <!--1 or more repetitions:-->
                     <sch:template type="?">
                        <sch:category>?</sch:category>
                        <sch:templateName>?</sch:templateName>
                        <!--Optional:-->
                        <sch:data>?</sch:data>
                     </sch:template>
                  </sch:carbonRequest>
                  <sch:data>?</sch:data>
               </sch:transactionalRequestDetail>
               <!--1 or more repetitions:-->
               <sch:bulkRequestDetail>
                  <sch:filePath>?</sch:filePath>
                  <sch:fileName>?</sch:fileName>
                  <sch:fileSize>?</sch:fileSize>
                  <!--Optional:-->
                  <sch:ecgDetail>?</sch:ecgDetail>
                  <!--Optional:-->
                  <sch:sourceDetail>?</sch:sourceDetail>
               </sch:bulkRequestDetail>
            </sch:requestDetail>
            <!--Optional:-->
            <sch:extension>?</sch:extension>
         </sch:fulfillmentRequest>
      </sch:cancelFulfillmentRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://dms-fsl.uhc.com/fulfillment/definitions/fslSupplierService/cancelFulfillmentRequestRequest"/></con:call><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://dms-fsl-sys.uhc.com:80/fsl_services/Supplier</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:sch="http://dms-fsl.uhc.com/fulfillment/schema">
   <soap:Header/>
   <soap:Body>
      <sch:cancelFulfillmentRequest>
         <sch:fulfillmentRequest>
            <sch:requestHeader>
               <sch:requestID>?</sch:requestID>
               <sch:sourceID>?</sch:sourceID>
               <!--Optional:-->
               <sch:destinationID>?</sch:destinationID>
               <sch:requestDate>?</sch:requestDate>
               <sch:requestType>?</sch:requestType>
               <sch:fulfillmentType>?</sch:fulfillmentType>
               <sch:requestCategory>?</sch:requestCategory>
               <!--Optional:-->
               <sch:serviceLevelCategory>?</sch:serviceLevelCategory>
               <sch:dataFormat>?</sch:dataFormat>
               <!--Optional:-->
               <sch:requestorRefNo>?</sch:requestorRefNo>
               <!--Optional:-->
               <sch:supplierRefNo>?</sch:supplierRefNo>
               <sch:requestItemCount>?</sch:requestItemCount>
            </sch:requestHeader>
            <!--Optional:-->
            <sch:requestDetail>
               <!--You have a CHOICE of the next 2 items at this level-->
               <sch:transactionalRequestDetail>
                  <sch:requestItemHeader>
                     <sch:requestItemID>?</sch:requestItemID>
                     <!--Optional:-->
                     <sch:requestorItemRefNo>?</sch:requestorItemRefNo>
                     <!--Optional:-->
                     <sch:supplierItemRefNo>?</sch:supplierItemRefNo>
                  </sch:requestItemHeader>
                  <sch:requestItemDetail>
                     <!--Optional:-->
                     <sch:recipient>
                        <!--Optional:-->
                        <sch:recipientId>?</sch:recipientId>
                        <!--Optional:-->
                        <sch:idQualifier>?</sch:idQualifier>
                        <!--Optional:-->
                        <sch:deliveryMethod>?</sch:deliveryMethod>
                        <!--Optional:-->
                        <sch:recipientType>?</sch:recipientType>
                        <!--You have a CHOICE of the next 2 items at this level-->
                        <!--Optional:-->
                        <sch:organization>
                           <!--Optional:-->
                           <sch:name1>?</sch:name1>
                           <!--Optional:-->
                           <sch:name2>?</sch:name2>
                        </sch:organization>
                        <!--Optional:-->
                        <sch:person>
                           <!--Optional:-->
                           <sch:prefix>?</sch:prefix>
                           <!--Optional:-->
                           <sch:firstName>?</sch:firstName>
                           <!--Optional:-->
                           <sch:middleName>?</sch:middleName>
                           <!--Optional:-->
                           <sch:lastName>?</sch:lastName>
                           <!--Optional:-->
                           <sch:suffix>?</sch:suffix>
                        </sch:person>
                        <!--You have a CHOICE of the next 2 items at this level-->
                        <!--Optional:-->
                        <sch:MailToAddress>
                           <!--Optional:-->
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <!--Optional:-->
                           <sch:City>?</sch:City>
                           <!--Optional:-->
                           <sch:State>?</sch:State>
                           <!--Optional:-->
                           <sch:Zip>?</sch:Zip>
                        </sch:MailToAddress>
                        <!--Optional:-->
                        <sch:MailToAddressInternational>
                           <!--Optional:-->
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <!--Optional:-->
                           <sch:City>?</sch:City>
                           <!--Optional:-->
                           <sch:Province>?</sch:Province>
                           <!--Optional:-->
                           <sch:PostalCD>?</sch:PostalCD>
                           <!--Optional:-->
                           <sch:Country>?</sch:Country>
                        </sch:MailToAddressInternational>
                        <!--You have a CHOICE of the next 2 items at this level-->
                        <!--Optional:-->
                        <sch:ReturnToAddress>
                           <!--Optional:-->
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <!--Optional:-->
                           <sch:City>?</sch:City>
                           <!--Optional:-->
                           <sch:State>?</sch:State>
                           <!--Optional:-->
                           <sch:Zip>?</sch:Zip>
                        </sch:ReturnToAddress>
                        <!--Optional:-->
                        <sch:ReturnToAddressInternational>
                           <!--Optional:-->
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <!--Optional:-->
                           <sch:City>?</sch:City>
                           <!--Optional:-->
                           <sch:Province>?</sch:Province>
                           <!--Optional:-->
                           <sch:PostalCD>?</sch:PostalCD>
                           <!--Optional:-->
                           <sch:Country>?</sch:Country>
                        </sch:ReturnToAddressInternational>
                        <!--Optional:-->
                        <sch:faxNumber>?</sch:faxNumber>
                        <!--Optional:-->
                        <sch:emailAddress>?</sch:emailAddress>
                     </sch:recipient>
                     <!--1 or more repetitions:-->
                     <sch:template type="?">
                        <!--Optional:-->
                        <sch:category>?</sch:category>
                        <!--Optional:-->
                        <sch:templateName>?</sch:templateName>
                        <!--Optional:-->
                        <sch:data>?</sch:data>
                     </sch:template>
                  </sch:requestItemDetail>
                  <!--Zero or more repetitions:-->
                  <sch:carbonRequest>
                     <sch:requestItemHeader>
                        <sch:requestItemID>?</sch:requestItemID>
                        <!--Optional:-->
                        <sch:requestorItemRefNo>?</sch:requestorItemRefNo>
                        <!--Optional:-->
                        <sch:supplierItemRefNo>?</sch:supplierItemRefNo>
                     </sch:requestItemHeader>
                     <sch:requestItemDetail>
                        <!--Optional:-->
                        <sch:recipient>
                           <!--Optional:-->
                           <sch:recipientId>?</sch:recipientId>
                           <!--Optional:-->
                           <sch:idQualifier>?</sch:idQualifier>
                           <!--Optional:-->
                           <sch:deliveryMethod>?</sch:deliveryMethod>
                           <!--Optional:-->
                           <sch:recipientType>?</sch:recipientType>
                           <!--You have a CHOICE of the next 2 items at this level-->
                           <!--Optional:-->
                           <sch:organization>
                              <!--Optional:-->
                              <sch:name1>?</sch:name1>
                              <!--Optional:-->
                              <sch:name2>?</sch:name2>
                           </sch:organization>
                           <!--Optional:-->
                           <sch:person>
                              <!--Optional:-->
                              <sch:prefix>?</sch:prefix>
                              <!--Optional:-->
                              <sch:firstName>?</sch:firstName>
                              <!--Optional:-->
                              <sch:middleName>?</sch:middleName>
                              <!--Optional:-->
                              <sch:lastName>?</sch:lastName>
                              <!--Optional:-->
                              <sch:suffix>?</sch:suffix>
                           </sch:person>
                           <!--You have a CHOICE of the next 2 items at this level-->
                           <!--Optional:-->
                           <sch:MailToAddress>
                              <!--Optional:-->
                              <sch:Address1>?</sch:Address1>
                              <!--Optional:-->
                              <sch:Address2>?</sch:Address2>
                              <!--Optional:-->
                              <sch:Address3>?</sch:Address3>
                              <!--Optional:-->
                              <sch:City>?</sch:City>
                              <!--Optional:-->
                              <sch:State>?</sch:State>
                              <!--Optional:-->
                              <sch:Zip>?</sch:Zip>
                           </sch:MailToAddress>
                           <!--Optional:-->
                           <sch:MailToAddressInternational>
                              <!--Optional:-->
                              <sch:Address1>?</sch:Address1>
                              <!--Optional:-->
                              <sch:Address2>?</sch:Address2>
                              <!--Optional:-->
                              <sch:Address3>?</sch:Address3>
                              <!--Optional:-->
                              <sch:City>?</sch:City>
                              <!--Optional:-->
                              <sch:Province>?</sch:Province>
                              <!--Optional:-->
                              <sch:PostalCD>?</sch:PostalCD>
                              <!--Optional:-->
                              <sch:Country>?</sch:Country>
                           </sch:MailToAddressInternational>
                           <!--You have a CHOICE of the next 2 items at this level-->
                           <!--Optional:-->
                           <sch:ReturnToAddress>
                              <!--Optional:-->
                              <sch:Address1>?</sch:Address1>
                              <!--Optional:-->
                              <sch:Address2>?</sch:Address2>
                              <!--Optional:-->
                              <sch:Address3>?</sch:Address3>
                              <!--Optional:-->
                              <sch:City>?</sch:City>
                              <!--Optional:-->
                              <sch:State>?</sch:State>
                              <!--Optional:-->
                              <sch:Zip>?</sch:Zip>
                           </sch:ReturnToAddress>
                           <!--Optional:-->
                           <sch:ReturnToAddressInternational>
                              <!--Optional:-->
                              <sch:Address1>?</sch:Address1>
                              <!--Optional:-->
                              <sch:Address2>?</sch:Address2>
                              <!--Optional:-->
                              <sch:Address3>?</sch:Address3>
                              <!--Optional:-->
                              <sch:City>?</sch:City>
                              <!--Optional:-->
                              <sch:Province>?</sch:Province>
                              <!--Optional:-->
                              <sch:PostalCD>?</sch:PostalCD>
                              <!--Optional:-->
                              <sch:Country>?</sch:Country>
                           </sch:ReturnToAddressInternational>
                           <!--Optional:-->
                           <sch:faxNumber>?</sch:faxNumber>
                           <!--Optional:-->
                           <sch:emailAddress>?</sch:emailAddress>
                        </sch:recipient>
                        <!--1 or more repetitions:-->
                        <sch:template type="?">
                           <!--Optional:-->
                           <sch:category>?</sch:category>
                           <!--Optional:-->
                           <sch:templateName>?</sch:templateName>
                           <!--Optional:-->
                           <sch:data>?</sch:data>
                        </sch:template>
                     </sch:requestItemDetail>
                  </sch:carbonRequest>
                  <sch:data>?</sch:data>
               </sch:transactionalRequestDetail>
               <!--1 or more repetitions:-->
               <sch:bulkRequestDetail>
                  <sch:filePath>?</sch:filePath>
                  <sch:fileName>?</sch:fileName>
                  <sch:fileSize>?</sch:fileSize>
                  <!--Optional:-->
                  <sch:ecgDetail>?</sch:ecgDetail>
                  <!--Optional:-->
                  <sch:sourceDetail>?</sch:sourceDetail>
               </sch:bulkRequestDetail>
            </sch:requestDetail>
            <!--Optional:-->
            <sch:extension>?</sch:extension>
         </sch:fulfillmentRequest>
      </sch:cancelFulfillmentRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://dms-fsl.uhc.com/fulfillment/definitions/fslSupplierService/cancelFulfillmentRequestRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://dms-fsl.uhc.com/fsl_services/Supplier/processArchiveRequest" name="processArchiveRequest" bindingOperationName="processArchiveRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://dms-fsl-sys.uhc.com:80/fsl_services/Supplier</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:sch="http://dms-fsl.uhc.com/fulfillment/schema">
   <soap:Header/>
   <soap:Body>
      <sch:cancelFulfillmentRequest>
         <sch:fulfillmentRequest>
            <sch:requestHeader>
               <sch:requestID>?</sch:requestID>
               <sch:sourceID>?</sch:sourceID>
               <!--Optional:-->
               <sch:destinationID>?</sch:destinationID>
               <sch:requestDate>?</sch:requestDate>
               <sch:requestType>?</sch:requestType>
               <sch:fulfillmentType>?</sch:fulfillmentType>
               <sch:requestCategory>?</sch:requestCategory>
               <!--Optional:-->
               <sch:serviceLevelCategory>?</sch:serviceLevelCategory>
               <sch:dataFormat>?</sch:dataFormat>
               <!--Optional:-->
               <sch:requestorRefNo>?</sch:requestorRefNo>
               <!--Optional:-->
               <sch:supplierRefNo>?</sch:supplierRefNo>
               <sch:requestItemCount>?</sch:requestItemCount>
            </sch:requestHeader>
            <!--Optional:-->
            <sch:requestDetail>
               <!--You have a CHOICE of the next 2 items at this level-->
               <sch:transactionalRequestDetail>
                  <sch:requestItemID>?</sch:requestItemID>
                  <!--Optional:-->
                  <sch:requestorItemRefNo>?</sch:requestorItemRefNo>
                  <!--Optional:-->
                  <sch:supplierItemRefNo>?</sch:supplierItemRefNo>
                  <!--Optional:-->
                  <sch:recipient>
                     <!--Optional:-->
                     <sch:recipientId>?</sch:recipientId>
                     <!--Optional:-->
                     <sch:idQualifier>?</sch:idQualifier>
                     <sch:deliveryMethod>?</sch:deliveryMethod>
                     <sch:recipientType>?</sch:recipientType>
                     <!--You have a CHOICE of the next 2 items at this level-->
                     <sch:organization>
                        <sch:name1>?</sch:name1>
                        <sch:name2>?</sch:name2>
                     </sch:organization>
                     <sch:person>
                        <sch:prefix>?</sch:prefix>
                        <sch:firstName>?</sch:firstName>
                        <sch:middleName>?</sch:middleName>
                        <sch:lastName>?</sch:lastName>
                        <sch:suffix>?</sch:suffix>
                     </sch:person>
                     <!--You have a CHOICE of the next 2 items at this level-->
                     <!--Optional:-->
                     <sch:MailToAddress>
                        <sch:Address1>?</sch:Address1>
                        <!--Optional:-->
                        <sch:Address2>?</sch:Address2>
                        <!--Optional:-->
                        <sch:Address3>?</sch:Address3>
                        <sch:City>?</sch:City>
                        <sch:State>?</sch:State>
                        <sch:Zip>?</sch:Zip>
                     </sch:MailToAddress>
                     <!--Optional:-->
                     <sch:MailToAddressInternational>
                        <sch:Address1>?</sch:Address1>
                        <!--Optional:-->
                        <sch:Address2>?</sch:Address2>
                        <!--Optional:-->
                        <sch:Address3>?</sch:Address3>
                        <sch:City>?</sch:City>
                        <sch:Province>?</sch:Province>
                        <sch:PostalCD>?</sch:PostalCD>
                        <sch:Country>?</sch:Country>
                     </sch:MailToAddressInternational>
                     <!--You have a CHOICE of the next 2 items at this level-->
                     <!--Optional:-->
                     <sch:ReturnToAddress>
                        <sch:Address1>?</sch:Address1>
                        <!--Optional:-->
                        <sch:Address2>?</sch:Address2>
                        <!--Optional:-->
                        <sch:Address3>?</sch:Address3>
                        <sch:City>?</sch:City>
                        <sch:State>?</sch:State>
                        <sch:Zip>?</sch:Zip>
                     </sch:ReturnToAddress>
                     <!--Optional:-->
                     <sch:ReturnToAddressInternational>
                        <sch:Address1>?</sch:Address1>
                        <!--Optional:-->
                        <sch:Address2>?</sch:Address2>
                        <!--Optional:-->
                        <sch:Address3>?</sch:Address3>
                        <sch:City>?</sch:City>
                        <sch:Province>?</sch:Province>
                        <sch:PostalCD>?</sch:PostalCD>
                        <sch:Country>?</sch:Country>
                     </sch:ReturnToAddressInternational>
                     <!--Optional:-->
                     <sch:faxNumber>?</sch:faxNumber>
                     <!--Optional:-->
                     <sch:emailAddress>?</sch:emailAddress>
                  </sch:recipient>
                  <!--1 or more repetitions:-->
                  <sch:template type="?">
                     <sch:category>?</sch:category>
                     <sch:templateName>?</sch:templateName>
                     <!--Optional:-->
                     <sch:data>?</sch:data>
                  </sch:template>
                  <!--Zero or more repetitions:-->
                  <sch:carbonRequest>
                     <sch:requestItemID>?</sch:requestItemID>
                     <!--Optional:-->
                     <sch:sourceItemRefNo>?</sch:sourceItemRefNo>
                     <!--Optional:-->
                     <sch:supplierItemRefNo>?</sch:supplierItemRefNo>
                     <!--Optional:-->
                     <sch:recipient>
                        <!--Optional:-->
                        <sch:recipientId>?</sch:recipientId>
                        <!--Optional:-->
                        <sch:idQualifier>?</sch:idQualifier>
                        <sch:deliveryMethod>?</sch:deliveryMethod>
                        <sch:recipientType>?</sch:recipientType>
                        <!--You have a CHOICE of the next 2 items at this level-->
                        <sch:organization>
                           <sch:name1>?</sch:name1>
                           <sch:name2>?</sch:name2>
                        </sch:organization>
                        <sch:person>
                           <sch:prefix>?</sch:prefix>
                           <sch:firstName>?</sch:firstName>
                           <sch:middleName>?</sch:middleName>
                           <sch:lastName>?</sch:lastName>
                           <sch:suffix>?</sch:suffix>
                        </sch:person>
                        <!--You have a CHOICE of the next 2 items at this level-->
                        <!--Optional:-->
                        <sch:MailToAddress>
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <sch:City>?</sch:City>
                           <sch:State>?</sch:State>
                           <sch:Zip>?</sch:Zip>
                        </sch:MailToAddress>
                        <!--Optional:-->
                        <sch:MailToAddressInternational>
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <sch:City>?</sch:City>
                           <sch:Province>?</sch:Province>
                           <sch:PostalCD>?</sch:PostalCD>
                           <sch:Country>?</sch:Country>
                        </sch:MailToAddressInternational>
                        <!--You have a CHOICE of the next 2 items at this level-->
                        <!--Optional:-->
                        <sch:ReturnToAddress>
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <sch:City>?</sch:City>
                           <sch:State>?</sch:State>
                           <sch:Zip>?</sch:Zip>
                        </sch:ReturnToAddress>
                        <!--Optional:-->
                        <sch:ReturnToAddressInternational>
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <sch:City>?</sch:City>
                           <sch:Province>?</sch:Province>
                           <sch:PostalCD>?</sch:PostalCD>
                           <sch:Country>?</sch:Country>
                        </sch:ReturnToAddressInternational>
                        <!--Optional:-->
                        <sch:faxNumber>?</sch:faxNumber>
                        <!--Optional:-->
                        <sch:emailAddress>?</sch:emailAddress>
                     </sch:recipient>
                     <!--1 or more repetitions:-->
                     <sch:template type="?">
                        <sch:category>?</sch:category>
                        <sch:templateName>?</sch:templateName>
                        <!--Optional:-->
                        <sch:data>?</sch:data>
                     </sch:template>
                  </sch:carbonRequest>
                  <sch:data>?</sch:data>
               </sch:transactionalRequestDetail>
               <!--1 or more repetitions:-->
               <sch:bulkRequestDetail>
                  <sch:filePath>?</sch:filePath>
                  <sch:fileName>?</sch:fileName>
                  <sch:fileSize>?</sch:fileSize>
                  <!--Optional:-->
                  <sch:ecgDetail>?</sch:ecgDetail>
                  <!--Optional:-->
                  <sch:sourceDetail>?</sch:sourceDetail>
               </sch:bulkRequestDetail>
            </sch:requestDetail>
            <!--Optional:-->
            <sch:extension>?</sch:extension>
         </sch:fulfillmentRequest>
      </sch:cancelFulfillmentRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://dms-fsl.uhc.com/fulfillment/definitions/fslSupplierService/processArchiveRequestRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://dms-fsl-sys.uhc.com:80/fsl_services/Supplier</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:sch="http://dms-fsl.uhc.com/fulfillment/schema">
   <soap:Header/>
   <soap:Body>
      <sch:processArchiveRequest>
         <sch:fulfillmentRequest>
            <sch:requestHeader>
               <sch:requestID>?</sch:requestID>
               <sch:sourceID>?</sch:sourceID>
               <!--Optional:-->
               <sch:destinationID>?</sch:destinationID>
               <sch:requestDate>?</sch:requestDate>
               <sch:requestType>?</sch:requestType>
               <sch:fulfillmentType>?</sch:fulfillmentType>
               <sch:requestCategory>?</sch:requestCategory>
               <!--Optional:-->
               <sch:serviceLevelCategory>?</sch:serviceLevelCategory>
               <sch:dataFormat>?</sch:dataFormat>
               <!--Optional:-->
               <sch:requestorRefNo>?</sch:requestorRefNo>
               <!--Optional:-->
               <sch:supplierRefNo>?</sch:supplierRefNo>
               <sch:requestItemCount>?</sch:requestItemCount>
            </sch:requestHeader>
            <!--Optional:-->
            <sch:requestDetail>
               <!--You have a CHOICE of the next 2 items at this level-->
               <sch:transactionalRequestDetail>
                  <sch:requestItemHeader>
                     <sch:requestItemID>?</sch:requestItemID>
                     <!--Optional:-->
                     <sch:requestorItemRefNo>?</sch:requestorItemRefNo>
                     <!--Optional:-->
                     <sch:supplierItemRefNo>?</sch:supplierItemRefNo>
                  </sch:requestItemHeader>
                  <sch:requestItemDetail>
                     <!--Optional:-->
                     <sch:recipient>
                        <!--Optional:-->
                        <sch:recipientId>?</sch:recipientId>
                        <!--Optional:-->
                        <sch:idQualifier>?</sch:idQualifier>
                        <!--Optional:-->
                        <sch:deliveryMethod>?</sch:deliveryMethod>
                        <!--Optional:-->
                        <sch:recipientType>?</sch:recipientType>
                        <!--You have a CHOICE of the next 2 items at this level-->
                        <!--Optional:-->
                        <sch:organization>
                           <!--Optional:-->
                           <sch:name1>?</sch:name1>
                           <!--Optional:-->
                           <sch:name2>?</sch:name2>
                        </sch:organization>
                        <!--Optional:-->
                        <sch:person>
                           <!--Optional:-->
                           <sch:prefix>?</sch:prefix>
                           <!--Optional:-->
                           <sch:firstName>?</sch:firstName>
                           <!--Optional:-->
                           <sch:middleName>?</sch:middleName>
                           <!--Optional:-->
                           <sch:lastName>?</sch:lastName>
                           <!--Optional:-->
                           <sch:suffix>?</sch:suffix>
                        </sch:person>
                        <!--You have a CHOICE of the next 2 items at this level-->
                        <!--Optional:-->
                        <sch:MailToAddress>
                           <!--Optional:-->
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <!--Optional:-->
                           <sch:City>?</sch:City>
                           <!--Optional:-->
                           <sch:State>?</sch:State>
                           <!--Optional:-->
                           <sch:Zip>?</sch:Zip>
                        </sch:MailToAddress>
                        <!--Optional:-->
                        <sch:MailToAddressInternational>
                           <!--Optional:-->
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <!--Optional:-->
                           <sch:City>?</sch:City>
                           <!--Optional:-->
                           <sch:Province>?</sch:Province>
                           <!--Optional:-->
                           <sch:PostalCD>?</sch:PostalCD>
                           <!--Optional:-->
                           <sch:Country>?</sch:Country>
                        </sch:MailToAddressInternational>
                        <!--You have a CHOICE of the next 2 items at this level-->
                        <!--Optional:-->
                        <sch:ReturnToAddress>
                           <!--Optional:-->
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <!--Optional:-->
                           <sch:City>?</sch:City>
                           <!--Optional:-->
                           <sch:State>?</sch:State>
                           <!--Optional:-->
                           <sch:Zip>?</sch:Zip>
                        </sch:ReturnToAddress>
                        <!--Optional:-->
                        <sch:ReturnToAddressInternational>
                           <!--Optional:-->
                           <sch:Address1>?</sch:Address1>
                           <!--Optional:-->
                           <sch:Address2>?</sch:Address2>
                           <!--Optional:-->
                           <sch:Address3>?</sch:Address3>
                           <!--Optional:-->
                           <sch:City>?</sch:City>
                           <!--Optional:-->
                           <sch:Province>?</sch:Province>
                           <!--Optional:-->
                           <sch:PostalCD>?</sch:PostalCD>
                           <!--Optional:-->
                           <sch:Country>?</sch:Country>
                        </sch:ReturnToAddressInternational>
                        <!--Optional:-->
                        <sch:faxNumber>?</sch:faxNumber>
                        <!--Optional:-->
                        <sch:emailAddress>?</sch:emailAddress>
                     </sch:recipient>
                     <!--1 or more repetitions:-->
                     <sch:template type="?">
                        <!--Optional:-->
                        <sch:category>?</sch:category>
                        <!--Optional:-->
                        <sch:templateName>?</sch:templateName>
                        <!--Optional:-->
                        <sch:data>?</sch:data>
                     </sch:template>
                  </sch:requestItemDetail>
                  <!--Zero or more repetitions:-->
                  <sch:carbonRequest>
                     <sch:requestItemHeader>
                        <sch:requestItemID>?</sch:requestItemID>
                        <!--Optional:-->
                        <sch:requestorItemRefNo>?</sch:requestorItemRefNo>
                        <!--Optional:-->
                        <sch:supplierItemRefNo>?</sch:supplierItemRefNo>
                     </sch:requestItemHeader>
                     <sch:requestItemDetail>
                        <!--Optional:-->
                        <sch:recipient>
                           <!--Optional:-->
                           <sch:recipientId>?</sch:recipientId>
                           <!--Optional:-->
                           <sch:idQualifier>?</sch:idQualifier>
                           <!--Optional:-->
                           <sch:deliveryMethod>?</sch:deliveryMethod>
                           <!--Optional:-->
                           <sch:recipientType>?</sch:recipientType>
                           <!--You have a CHOICE of the next 2 items at this level-->
                           <!--Optional:-->
                           <sch:organization>
                              <!--Optional:-->
                              <sch:name1>?</sch:name1>
                              <!--Optional:-->
                              <sch:name2>?</sch:name2>
                           </sch:organization>
                           <!--Optional:-->
                           <sch:person>
                              <!--Optional:-->
                              <sch:prefix>?</sch:prefix>
                              <!--Optional:-->
                              <sch:firstName>?</sch:firstName>
                              <!--Optional:-->
                              <sch:middleName>?</sch:middleName>
                              <!--Optional:-->
                              <sch:lastName>?</sch:lastName>
                              <!--Optional:-->
                              <sch:suffix>?</sch:suffix>
                           </sch:person>
                           <!--You have a CHOICE of the next 2 items at this level-->
                           <!--Optional:-->
                           <sch:MailToAddress>
                              <!--Optional:-->
                              <sch:Address1>?</sch:Address1>
                              <!--Optional:-->
                              <sch:Address2>?</sch:Address2>
                              <!--Optional:-->
                              <sch:Address3>?</sch:Address3>
                              <!--Optional:-->
                              <sch:City>?</sch:City>
                              <!--Optional:-->
                              <sch:State>?</sch:State>
                              <!--Optional:-->
                              <sch:Zip>?</sch:Zip>
                           </sch:MailToAddress>
                           <!--Optional:-->
                           <sch:MailToAddressInternational>
                              <!--Optional:-->
                              <sch:Address1>?</sch:Address1>
                              <!--Optional:-->
                              <sch:Address2>?</sch:Address2>
                              <!--Optional:-->
                              <sch:Address3>?</sch:Address3>
                              <!--Optional:-->
                              <sch:City>?</sch:City>
                              <!--Optional:-->
                              <sch:Province>?</sch:Province>
                              <!--Optional:-->
                              <sch:PostalCD>?</sch:PostalCD>
                              <!--Optional:-->
                              <sch:Country>?</sch:Country>
                           </sch:MailToAddressInternational>
                           <!--You have a CHOICE of the next 2 items at this level-->
                           <!--Optional:-->
                           <sch:ReturnToAddress>
                              <!--Optional:-->
                              <sch:Address1>?</sch:Address1>
                              <!--Optional:-->
                              <sch:Address2>?</sch:Address2>
                              <!--Optional:-->
                              <sch:Address3>?</sch:Address3>
                              <!--Optional:-->
                              <sch:City>?</sch:City>
                              <!--Optional:-->
                              <sch:State>?</sch:State>
                              <!--Optional:-->
                              <sch:Zip>?</sch:Zip>
                           </sch:ReturnToAddress>
                           <!--Optional:-->
                           <sch:ReturnToAddressInternational>
                              <!--Optional:-->
                              <sch:Address1>?</sch:Address1>
                              <!--Optional:-->
                              <sch:Address2>?</sch:Address2>
                              <!--Optional:-->
                              <sch:Address3>?</sch:Address3>
                              <!--Optional:-->
                              <sch:City>?</sch:City>
                              <!--Optional:-->
                              <sch:Province>?</sch:Province>
                              <!--Optional:-->
                              <sch:PostalCD>?</sch:PostalCD>
                              <!--Optional:-->
                              <sch:Country>?</sch:Country>
                           </sch:ReturnToAddressInternational>
                           <!--Optional:-->
                           <sch:faxNumber>?</sch:faxNumber>
                           <!--Optional:-->
                           <sch:emailAddress>?</sch:emailAddress>
                        </sch:recipient>
                        <!--1 or more repetitions:-->
                        <sch:template type="?">
                           <!--Optional:-->
                           <sch:category>?</sch:category>
                           <!--Optional:-->
                           <sch:templateName>?</sch:templateName>
                           <!--Optional:-->
                           <sch:data>?</sch:data>
                        </sch:template>
                     </sch:requestItemDetail>
                  </sch:carbonRequest>
                  <sch:data>?</sch:data>
               </sch:transactionalRequestDetail>
               <!--1 or more repetitions:-->
               <sch:bulkRequestDetail>
                  <sch:filePath>?</sch:filePath>
                  <sch:fileName>?</sch:fileName>
                  <sch:fileSize>?</sch:fileSize>
                  <!--Optional:-->
                  <sch:ecgDetail>?</sch:ecgDetail>
                  <!--Optional:-->
                  <sch:sourceDetail>?</sch:sourceDetail>
               </sch:bulkRequestDetail>
            </sch:requestDetail>
            <!--Optional:-->
            <sch:extension>?</sch:extension>
         </sch:fulfillmentRequest>
      </sch:processArchiveRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://dms-fsl.uhc.com/fulfillment/definitions/fslSupplierService/processArchiveRequestRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://dms-fsl.uhc.com/fsl_services/Supplier/processFulfillmentRequest" name="processFulfillmentRequest" bindingOperationName="processFulfillmentRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://dms-fsl-sys.uhc.com/fslservices/Supplier</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:sch="http://dms-fsl.uhc.com/fulfillment/schema">
   <soap:Header/>
   <soap:Body>
      <sch:processFulfillmentRequest>
         <sch:fulfillmentRequest>
            <sch:requestHeader>
               <sch:requestID>UHG-FSL-3</sch:requestID>
               <sch:sourceID>UHG-FSL-2</sch:sourceID>
               <!--Optional:-->
               <sch:destinationID>UHG-FSL-2</sch:destinationID>
               <sch:requestDate>2015-05-20T11:01:00-06:00</sch:requestDate>
               <sch:requestType>Process</sch:requestType>
               <sch:fulfillmentType>BillingInvoice</sch:fulfillmentType>
               <sch:requestCategory>BulkDataOnly</sch:requestCategory>
               <!--Optional:-->
               <sch:serviceLevelCategory>SLC</sch:serviceLevelCategory>
               <sch:dataFormat>pdf</sch:dataFormat>
               <!--Optional:-->
               <sch:requestorRefNo>123</sch:requestorRefNo>
               <!--Optional:-->
               <sch:supplierRefNo>123	</sch:supplierRefNo>
               <sch:requestItemCount>1</sch:requestItemCount>
            </sch:requestHeader>
            <!--Optional:-->
            <sch:requestDetail>
               <!--You have a CHOICE of the next 2 items at this level-->
                    <sch:bulkRequestDetail>
                  <sch:filePath>C:</sch:filePath>
                  <sch:fileName>UHG</sch:fileName>
                  <sch:fileSize>1</sch:fileSize>
                  <!--Optional:-->
                  <sch:ecgDetail>76jkh</sch:ecgDetail>
                  <!--Optional:-->
                  <sch:sourceDetail>hjh</sch:sourceDetail>
               </sch:bulkRequestDetail>
            </sch:requestDetail>
            <!--Optional:-->
            <sch:extension>1234</sch:extension>
         </sch:fulfillmentRequest>
      </sch:processFulfillmentRequest>
   </soap:Body>
</soap:Envelope>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://dms-fsl.uhc.com/fulfillment/definitions/fslSupplierService/processFulfillmentRequestRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://dms-fsl.uhc.com/fsl_services/Supplier/getFulfillmentRequestStatus" name="getFulfillmentRequestStatus" bindingOperationName="getFulfillmentRequestStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://dms-fsl-sys.uhc.com:80/fsl_services/Supplier</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:sch="http://dms-fsl.uhc.com/fulfillment/schema">
   <soap:Header/>
   <soap:Body>
      <sch:getFulfillmentRequestStatus>
         <sch:fulfillmentRequest>
            <sch:requestHeader>
               <sch:requestID>?</sch:requestID>
               <sch:sourceID>?</sch:sourceID>
               <!--Optional:-->
               <sch:destinationID>?</sch:destinationID>
               <sch:requestDate>?</sch:requestDate>
               <sch:requestType>?</sch:requestType>
               <!--Optional:-->
               <sch:requestorRefNo>?</sch:requestorRefNo>
               <!--Optional:-->
               <sch:supplierRefNo>?</sch:supplierRefNo>
            </sch:requestHeader>
         </sch:fulfillmentRequest>
      </sch:getFulfillmentRequestStatus>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://dms-fsl.uhc.com/fulfillment/definitions/fslSupplierService/getFulfillmentRequestStatusRequest"/></con:call></con:operation></con:interface><con:testSuite name="TestSuite1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="request" name="ProcessFulfillmentRequest"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>fslSupplierService</con:interface><con:operation>processFulfillmentRequest</con:operation><con:request name="ProcessFulfillmentRequest" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://apsrt1802.uhc.com:8080/fsl_services/Supplier</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:sch="http://dms-fsl.uhc.com/fulfillment/schema">
   <soap:Header/>
   <soap:Body>
      <sch:processFulfillmentRequest>
         <sch:fulfillmentRequest>
            <sch:requestHeader>
               <sch:requestID>${#TestCase#Property1}</sch:requestID>
               <sch:sourceID>${#TestCase#Property2}</sch:sourceID>
               <!--Optional:-->
               <sch:destinationID>${#TestCase#Property3}</sch:destinationID>
               <sch:requestDate>${#TestCase#Property4}</sch:requestDate>
               <sch:requestType>${#TestCase#Property5}</sch:requestType>
               <sch:fulfillmentType>${#TestCase#Property6}</sch:fulfillmentType>
               <sch:requestCategory>${#TestCase#Property7}</sch:requestCategory>
               <!--Optional:-->
               <sch:serviceLevelCategory>${#TestCase#Property8}</sch:serviceLevelCategory>
               <sch:dataFormat>${#TestCase#Property9}</sch:dataFormat>
               <!--Optional:-->
               <sch:requestorRefNo>${#TestCase#Property10}</sch:requestorRefNo>
               <!--Optional:-->
               <sch:supplierRefNo>${#TestCase#Property11}</sch:supplierRefNo>
               <sch:requestItemCount>${#TestCase#Property12}</sch:requestItemCount>
            </sch:requestHeader>
            <!--Optional:-->
            <sch:requestDetail>
               <!--You have a CHOICE of the next 2 items at this level-->
                    <sch:bulkRequestDetail>
                  <sch:filePath>${#TestCase#Property13}</sch:filePath>
                  <sch:fileName>${#TestCase#Property14}</sch:fileName>
                  <sch:fileSize>${#TestCase#Property15}</sch:fileSize>
                  <!--Optional:-->
                  <sch:ecgDetail>${#TestCase#Property16}</sch:ecgDetail>
                  <!--Optional:-->
                  <sch:sourceDetail>${#TestCase#Property17}</sch:sourceDetail>
               </sch:bulkRequestDetail>
            </sch:requestDetail>
            <!--Optional:-->
            <sch:extension>${#TestCase#Property18}</sch:extension>
         </sch:fulfillmentRequest>
      </sch:processFulfillmentRequest>
   </soap:Body>
</soap:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://dms-fsl.uhc.com/fulfillment/definitions/fslSupplierService/processFulfillmentRequestRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="ServiceTriggerFinal"><con:settings/><con:config><script><![CDATA[import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.poi.ss.util.*;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.IndexedColors;
import java.io.*;
import java.util.HashMap;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

//imports for xml parsing
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import org.xml.sax.Attributes;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;

Object.metaClass.globalColIndexCounter = 1
Object.metaClass.globalXMLTagRepetitionIndex = 0
Object.metaClass.bColIncrement = true
def HSSFWorkbook workbook
def HSSFSheet worksheet
def HSSFRow row1
def HSSFRow row2

class ReadXMLFile {
	def log
	def HSSFWorkbook workbook
	def HSSFSheet worksheet
	def HSSFRow row1
	def HSSFRow row2
	def duplicateFlag;
	HashMap <String, Integer> mapper = new HashMap<String, Integer>(); //hash map for storing xml tag repetition indexes
	//ArrayList arrXMLTags = new ArrayList(); //to track if a tag exists already in the output file
		
	def ReadXML(xmlPath) 
	{
		try {
			File fXmlFile = new File(xmlPath);
			DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
			//Code for Converting the xml response to UTF-8 compatible format
			InputStream inputStream= new FileInputStream(fXmlFile);
			Reader reader = new InputStreamReader(inputStream,"UTF-8");
			InputSource is = new InputSource(reader);
			is.setEncoding("UTF-8");
			Document doc = dBuilder.parse(is);
			//doc.getDocumentElement().normalize();
			log.info("Root element :" + doc.getDocumentElement().getNodeName())
			if (doc.hasChildNodes()) {
 				printNode(doc.getChildNodes());
 			}
 			//Globals.headerIndex = Globals.headerIndex + 2;
 			//Globals.contentIndex = Globals.contentIndex + 2;
		} catch (Exception e) {
			log.info(e.getMessage())
    		}
	}
	
	def printNode(NodeList nodeList) {
		//log.info(nodeList.getLength())
		for (int count = 0; count < nodeList.getLength(); count++) {
			Node tempNode = nodeList.item(count);
			if (tempNode.getNodeType() == Node.ELEMENT_NODE) {
				if((tempNode.getTextContent() != "") && (tempNode.getTextContent().contains("\n") != true)) {
					if (tempNode.hasAttributes() == false) {
						if ((tempNode.getNodeName().contains("soap:Body") == false) && (tempNode.getNodeName().contains("responseHeader") == false) && (tempNode.getNodeName().contains("internalUse") == false)) 
						{
							if((tempNode.getNodeName()).length() <= 500) {
								if(globalColIndexCounter>255){
									bColIncrement = false;
								}
								if(bColIncrement == true){
									log.info("Node Length: - " + (tempNode.getNodeName()).length());
									log.info("\nNode Name =" + tempNode.getNodeName())
									
									//Code to create a hash map object and store the repetition key values
									duplicateFlag = false;
									if (mapper.containsKey(tempNode.getNodeName())) {
										log.info("Duplicate or existing node - " + tempNode.getNodeName())
										log.info("Mapper Index Node Level: - " + mapper.get(tempNode.getNodeName()));
										mapper.put(tempNode.getNodeName(), mapper.get(tempNode.getNodeName())+1);
										duplicateFlag = true;
									} else { 
									    	mapper.put(tempNode.getNodeName(),0);
									}
		
									log.info("mapper key content - " + mapper.get(tempNode.getNodeName()));
									log.info("Col Index Counter: - " + globalColIndexCounter) //changed 5/12/2015

									HSSFCell cellA1 = row1.createCell((short) globalColIndexCounter);
									
									if(duplicateFlag==true) {
										cellA1.setCellValue(tempNode.getNodeName() + "_" + mapper.get(tempNode.getNodeName()));
									} else {
										cellA1.setCellValue(tempNode.getNodeName());
									}
									
									CellStyle style = workbook.createCellStyle();
									style.setFillForegroundColor(HSSFColor.YELLOW.index);
		        						style.setFillPattern(CellStyle.SOLID_FOREGROUND);
									style.setBorderLeft((short) 1);            
									style.setBorderRight((short) 1);          
									style.setBorderTop((short) 1);              
									style.setBorderBottom((short) 1);
									//worksheet.autoSizeColumn(globalColIndexCounter);
									worksheet.setColumnWidth(globalColIndexCounter, 7500);
									cellA1.setCellStyle(style);
									
									log.info("Node Value =" + tempNode.getTextContent())
			
									HSSFCell cellA2 = row2.createCell((short) globalColIndexCounter);
									cellA2.setCellValue(tempNode.getTextContent());
		
									CellStyle style1 = workbook.createCellStyle();
									if(tempNode.getTextContent().toUpperCase() == "SUCCESS") {
										style1.setFillForegroundColor(HSSFColor.GREEN.index);
		        							style1.setFillPattern(CellStyle.SOLID_FOREGROUND);
									} else if(tempNode.getTextContent().toUpperCase() == "ERROR" || tempNode.getTextContent().toUpperCase() == "FAILURE") {
										style1.setFillForegroundColor(HSSFColor.RED.index);
		        							style1.setFillPattern(CellStyle.SOLID_FOREGROUND);
									}
									style1.setBorderLeft((short) 1);            
									style1.setBorderRight((short) 1);          
									style1.setBorderTop((short) 1);              
									style1.setBorderBottom((short) 1);
									cellA2.setCellStyle(style1);
			
									globalColIndexCounter++;	//changed on 5/12/2015
								}
							}	
						}
					}
				}
				if (tempNode.hasChildNodes()) {
					// loop again if has child nodes
					printNode(tempNode.getChildNodes());
				}	
			}
		}
	}
}

class ExcelReader {
	def log
	def projectPath
	def readData(context) 
 	{
		//def path = "C:\\Backup\\PTP_Project\\SOAP_Services\\Input.xls";
		def path = context.expand( '${#TestCase#InputFile}' )
		InputStream inputStream = new FileInputStream(projectPath + "\\" + path);
		Workbook workbook = WorkbookFactory.create(inputStream);
		Sheet sheet = workbook.getSheetAt(0);
              
		Iterator rowIterator = sheet.rowIterator();
		rowIterator.next()
		Row row;                       
		def rowsData = []
		while(rowIterator.hasNext())
		{
			row = rowIterator.next()
			def rowIndex = row.getRowNum()
			def colIndex;
			def rowData = []
			for (Cell cell : row) 
			{
				colIndex = cell.getColumnIndex()
				
				def value;
				//cell.setCellType(Cell.CELL_TYPE_STRING);
				switch (cell.cellType)
				{
					case HSSFCell.CELL_TYPE_NUMERIC:
						if(HSSFDateUtil.isCellDateFormatted(cell))
						{
							value = new DataFormatter().formatCellValue(cell);		
							//value = cell.dateCellValue;
						}
						else
						{
							value = new DataFormatter().formatCellValue(cell);
						}
		                    break;
					case HSSFCell.CELL_TYPE_BOOLEAN:
						value = cell.booleanCellValue
						break;
 					default:
						value = new DataFormatter().formatCellValue(cell);
						break;
				}
				//log.info("Excel reader value = " + value)
				 rowData[colIndex] = value
			}                    
			rowsData << rowData
         }
		rowsData
	}
}

//Below two lines of groovy script is to get the project directory, we will be saving the soapUI log contents on a file in that directory.
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath 

//** LOG FILE DEFINITION - Place somewhere at the top of the script **//
def logDirectoryName = projectPath
def testCaseLogFileName = "\\FrameworkLogs"
def filext = ".log";
def fn = "$logDirectoryName$testCaseLogFileName$filext"
def FileName = new PrintWriter( new FileWriter(fn));

// Add for optional timestamp logging
def sdf = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS"); 
def myTime = "";

// "soapUI log" can be replaced with http log, jetty log, script log, error log etc based on the need.
//def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "error log" );  // to be commented when running through test runner

def logFile = new File(projectPath + "\\ErrorLog.txt")

//Code to check and write the execution tracker file
try{
    String sExecutionStatus = "Started";
    def sExeTrackerFile = new File(projectPath + "\\ExecutionTracker.txt");

    // if file doesnt exists, then create it
    if (!sExeTrackerFile.exists()) {
        sExeTrackerFile.createNewFile();
    }else{
		sExeTrackerFile.delete()
    }

    FileWriter fw = new FileWriter(sExeTrackerFile.getAbsoluteFile());
    BufferedWriter bw = new BufferedWriter(fw);
    bw.write(sExecutionStatus);
    bw.close();
}catch(IOException e){
    e.printStackTrace();
}

//def mex = com.eviware.soapui.model.iface.MessageExchange
def myTestCase = context.testCase

//def pathout = "C:\\Backup\\PTP_Project\\SOAP_Services\\TestOutput.xls";
def pathout = projectPath

class Globals {
	static int headerIndex = 0
	static int contentIndex = 1
	static int dataIterationIndex = 1
}

String datetime=new Date().toGMTString();
datetime=datetime.replace(" ", "");
datetime=datetime.replace(":", "");
//String outputpath = pathout + "Output_" + datetime + ".xls"  //commented to get rid of time stamp
String outputpath = pathout + "\\Output.xls"

FileOutputStream OutStream = new FileOutputStream(outputpath);
workbook = new HSSFWorkbook();

//code to read the input excel file for each of the request
ExcelReader excelReader = new ExcelReader(projectPath:projectPath, log:log);
List rows = excelReader.readData(context);

//Code to read the service name and validate it if the service step is matching with the current request step.
Iterator i = rows.iterator();

//Define the object for the collection of requests in the soapUI test case
def soapuiRequests = testRunner.testCase.getTestStepsOfType(com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep.class )
log.info("SOAP UI Requests count - " + soapuiRequests.size())

def restRequests = testRunner.testCase.getTestStepsOfType(com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep)
log.info("REST Requests count - " + restRequests.size())

//Define mapper class for tracking the sheet level indexes
HashMap <String, Integer> mapperSheet = new HashMap<String, Integer>(); //hash map for storing xml tag repetition indexes

while(i.hasNext())
{
	def d = []
	int num = 1;
	int set = 0;
	Globals.headerIndex = 0;
	Globals.contentIndex = 1;
	Globals.dataIterationIndex = 1;
	
	d = i.next();
	colArraySize = d.size;
	String ServiceName = d[0]; //Service Name
	String ExecutionFlag = d[1]; //ExecutionFlag

	log.info(ServiceName)
	log.info(ExecutionFlag)

	if((ServiceName != null) && (ExecutionFlag != null)) 
	{
		if(ExecutionFlag.toUpperCase() == "YES")
		{
			if(soapuiRequests.size() != 0)
			{
				//Groovy Script to loop through each requests in the test case.
				soapuiRequests.each
				{
					if(ServiceName.toUpperCase() == it.name.toUpperCase())
					{
						//Code to remove all the properties prior to execution
						String[] propToRemove = new String[myTestCase.getPropertyCount()];
						propToRemove = myTestCase.getPropertyNames();
						for ( int propIterator = 0 ; propIterator < propToRemove.size();propIterator++ ){
							if(propToRemove[propIterator].toUpperCase() != "INPUTFILE" && propToRemove[propIterator].toUpperCase() != "OUTPUTPROPERTY") 
							{
								myTestCase.removeProperty( propToRemove[propIterator] );	
							}
						}
						
						//code to retrieve the parameters from input excel file and create the properties at runtime
						int InputPropertyIndex = 1;
						for(colArrayIndex = 3; colArrayIndex <= colArraySize; colArrayIndex++)
						{
							def sArrayPointerValue = d[colArrayIndex-1]
							if(sArrayPointerValue != null && !sArrayPointerValue.isEmpty())
							{
								if(!myTestCase	.hasProperty("Property" + InputPropertyIndex)) {
		          					 myTestCase.addProperty("Property" +  InputPropertyIndex)
								}
								myTestCase.setPropertyValue("Property" +  InputPropertyIndex, sArrayPointerValue)
								log.info("Property" +InputPropertyIndex+ " - " + context.expand( '${#TestCase#Property'+InputPropertyIndex+'}' ));
								InputPropertyIndex++;
							}
						}
		
						//Code to create a hash map object and store the repetition key values
						if (mapperSheet.containsKey(it.name + "_HeaderIndex")) {
							mapperSheet.put(it.name + "_HeaderIndex", mapperSheet.get(it.name + "_HeaderIndex")+2);
							mapperSheet.put(it.name + "_ContentIndex", mapperSheet.get(it.name + "_ContentIndex")+2);
							mapperSheet.put(it.name + "_DataIterationIndex", mapperSheet.get(it.name + "_DataIterationIndex")+1);
						} else { 
						    	mapperSheet.put(it.name + "_HeaderIndex",0);
						    	mapperSheet.put(it.name + "_ContentIndex",1);
						    	mapperSheet.put(it.name + "_DataIterationIndex",1);
						}
						Globals.headerIndex = mapperSheet.get(it.name + "_HeaderIndex");
						Globals.contentIndex = mapperSheet.get(it.name + "_ContentIndex");
						Globals.dataIterationIndex = mapperSheet.get(it.name + "_DataIterationIndex");

						log.info("Header Index While loop for Request " + it.name  + " - " + Globals.headerIndex)
						log.info("Content Index While loop for Request " + it.name  + " - " + Globals.contentIndex)
						log.info("DataIteration Index While loop for Request " + it.name  + " - " + Globals.dataIterationIndex)
						
						//code to create response output in the output workbook with request step name as sheet name
						if(workbook.getSheetIndex(it.name) == -1)
						{
							worksheet = workbook.createSheet(it.name);
							row1 = worksheet.createRow((short) Globals.headerIndex);
							row2 = worksheet.createRow((short) Globals.contentIndex);
						}else{
							log.info("Worksheet Exists at Index - " + workbook.getSheetIndex(it.name))
							worksheet = workbook.getSheetAt(workbook.getSheetIndex(it.name))
							row1 = worksheet.createRow((short) Globals.headerIndex);
							row2 = worksheet.createRow((short) Globals.contentIndex);
						}
						
						//Code to mention the header index to know which data iteration it belongs
						HSSFCell cellA1 = row1.createCell((short) 0);
						cellA1.setCellValue(it.name + "_" + Globals.dataIterationIndex);
						CellStyle style = workbook.createCellStyle();
						style.setFillForegroundColor(HSSFColor.YELLOW.index);
						style.setFillPattern(CellStyle.SOLID_FOREGROUND);
						style.setBorderLeft((short) 1);            
						style.setBorderRight((short) 1);          
						style.setBorderTop((short) 1);              
						style.setBorderBottom((short) 1);
						//worksheet.autoSizeColumn(globalColIndexCounter);
						worksheet.setColumnWidth(globalColIndexCounter, 7500);
						cellA1.setCellStyle(style);
		
						myTime = sdf.format( new Date());
						FileName.println( "$myTime Start " + it.name ); //timestamp
						testRunner.runTestStepByName( it.name)
					
						//xml file for response to be stored in local project path
						testCaseResponseFileName = projectPath + "\\" +  it.name + "_Response.xml"
						def resFileName = new File(testCaseResponseFileName)
									
						//def holder = groovyUtils.getXmlHolder (it.name + “#Response”).toString()
						def request =testRunner.testCase.getTestStepByName( it.name ); // Get the WS
						def req = request.getProperty( "Request" ); // Get the request of the WS
						def resp = request.getProperty( "Response" ); // Get the response of the WS
						FileName.println( it.name + " - Request:" ); // Print WS Name & Request: 
						FileName.println( req.value ); // Print WS request
						FileName.println( it.name + " - Response:" ); // Print WS Name & Response:
						FileName.println( resp.value ); // Print WS respone
						resFileName.write( resp.value ); //Print response into xml file in the project path
						
						//log.info(mex.getResponseContentAsXml.toString())
						testRunner.runTestStepByName( "PropertyTransfer")
						myTime = sdf.format( new Date());
						FileName.println( "$myTime End " + it.name ); //timestamp
					
						ReadXMLFile readXMLObj = new ReadXMLFile(log:log, workbook:workbook, worksheet:worksheet, row1:row1, row2:row2);
						readXMLObj.ReadXML(testCaseResponseFileName);
						resFileName.delete()
		
						//Globals.headerIndex = Globals.headerIndex + 2; // change made on 5/12/2015
						//Globals.contentIndex = Globals.contentIndex + 2; // change made on 5/12/2015
						//Globals.dataIterationIndex = Globals.dataIterationIndex + 1;
					}	
				}
			}

			if( restRequests.size() != 0)
			{
				//Groovy Script to loop through each requests in the test case.
				restRequests.each
				{
					if(ServiceName.toUpperCase() == it.name.toUpperCase())
					{
						//Code to remove all the properties prior to execution
						String[] propToRemove = new String[myTestCase.getPropertyCount()];
						propToRemove = myTestCase.getPropertyNames();
						for ( int propIterator = 0 ; propIterator < propToRemove.size();propIterator++ ){
							if(propToRemove[propIterator].toUpperCase() != "INPUTFILE" && propToRemove[propIterator].toUpperCase() != "OUTPUTPROPERTY") 
							{
								myTestCase.removeProperty( propToRemove[propIterator] );	
							}
						}
						
						//code to retrieve the parameters from input excel file and create the properties at runtime
						int InputPropertyIndex = 1;
						for(colArrayIndex = 3; colArrayIndex <= colArraySize; colArrayIndex++)
						{
							def sArrayPointerValue = d[colArrayIndex-1]
							if(sArrayPointerValue != null && !sArrayPointerValue.isEmpty())
							{
								if(!myTestCase	.hasProperty("Property" + InputPropertyIndex)) {
		          					 myTestCase.addProperty("Property" +  InputPropertyIndex)
								}
								myTestCase.setPropertyValue("Property" +  InputPropertyIndex, sArrayPointerValue)
								log.info("Property" +InputPropertyIndex+ " - " + context.expand( '${#TestCase#Property'+InputPropertyIndex+'}' ));
								InputPropertyIndex++;
							}
						}
		
						//Code to create a hash map object and store the repetition key values
						if (mapperSheet.containsKey(it.name + "_HeaderIndex")) {
							mapperSheet.put(it.name + "_HeaderIndex", mapperSheet.get(it.name + "_HeaderIndex")+2);
							mapperSheet.put(it.name + "_ContentIndex", mapperSheet.get(it.name + "_ContentIndex")+2);
							mapperSheet.put(it.name + "_DataIterationIndex", mapperSheet.get(it.name + "_DataIterationIndex")+1);
						} else { 
						    	mapperSheet.put(it.name + "_HeaderIndex",0);
						    	mapperSheet.put(it.name + "_ContentIndex",1);
						    	mapperSheet.put(it.name + "_DataIterationIndex",1);
						}
						Globals.headerIndex = mapperSheet.get(it.name + "_HeaderIndex");
						Globals.contentIndex = mapperSheet.get(it.name + "_ContentIndex");
						Globals.dataIterationIndex = mapperSheet.get(it.name + "_DataIterationIndex");

						log.info("Header Index While loop for Request " + it.name  + " - " + Globals.headerIndex)
						log.info("Content Index While loop for Request " + it.name  + " - " + Globals.contentIndex)
						log.info("DataIteration Index While loop for Request " + it.name  + " - " + Globals.dataIterationIndex)
						
						//code to create response output in the output workbook with request step name as sheet name
						if(workbook.getSheetIndex(it.name) == -1)
						{
							worksheet = workbook.createSheet(it.name);
							//row1 = worksheet.createRow((short)0); // change made on 5/12/2015
							row1 = worksheet.createRow((short) Globals.headerIndex);
							row2 = worksheet.createRow((short) Globals.contentIndex);
						}else{
							log.info("Worksheet Exists at Index - " + workbook.getSheetIndex(it.name))
							worksheet = workbook.getSheetAt(workbook.getSheetIndex(it.name))
							row1 = worksheet.createRow((short) Globals.headerIndex);
							row2 = worksheet.createRow((short) Globals.contentIndex);
						}
		
						//Code to mention the header index to know which data iteration it belongs
						HSSFCell cellA1 = row1.createCell((short) 0);
						cellA1.setCellValue(it.name + "_" + Globals.dataIterationIndex);
						CellStyle style = workbook.createCellStyle();
						style.setFillForegroundColor(HSSFColor.YELLOW.index);
						style.setFillPattern(CellStyle.SOLID_FOREGROUND);
						style.setBorderLeft((short) 1);            
						style.setBorderRight((short) 1);          
						style.setBorderTop((short) 1);              
						style.setBorderBottom((short) 1);
						//worksheet.autoSizeColumn(globalColIndexCounter);
						worksheet.setColumnWidth(globalColIndexCounter, 7500);
						cellA1.setCellStyle(style);
		
						myTime = sdf.format( new Date());
						FileName.println( "$myTime Start " + it.name ); //timestamp
						testRunner.runTestStepByName( it.name)
					
						//xml file for response to be stored in local project path
						testCaseResponseFileName = projectPath + "\\" +  it.name + "_Response.xml"
						def resFileName = new File(testCaseResponseFileName)
									
						//def holder = groovyUtils.getXmlHolder (it.name + “#Response”).toString()
						def request =testRunner.testCase.getTestStepByName( it.name ); // Get the WS
						def req = request.getProperty( "Request" ); // Get the request of the WS
						def resp = request.getProperty( "ResponseAsXML" ); // Get the response of the WS
						FileName.println( it.name + " - Request:" ); // Print WS Name & Request: 
						FileName.println( req.value ); // Print WS request
						FileName.println( it.name + " - Response:" ); // Print WS Name & Response:
						FileName.println( resp.value ); // Print WS respone
						resFileName.write( resp.value ); //Print response into xml file in the project path
						
						//log.info(mex.getResponseContentAsXml.toString())
						testRunner.runTestStepByName( "PropertyTransfer")
						myTime = sdf.format( new Date());
						FileName.println( "$myTime End " + it.name ); //timestamp
					
						ReadXMLFile readXMLObj = new ReadXMLFile(log:log, workbook:workbook, worksheet:worksheet, row1:row1, row2:row2);
						readXMLObj.ReadXML(testCaseResponseFileName);
						resFileName.delete()
		
						//headerIndex = headerIndex + 2; // change made on 5/12/2015
						//contentIndex = contentIndex + 2; // change made on 5/12/2015
						//dataIterationIndex = dataIterationIndex + 1;
					}	
				}
			}
		}
	}
}

workbook.write(OutStream);
OutStream.flush();
OutStream.close();

//This is the first line in the soapUI log file. ------ this code snippet should be commented when running through test runner as the getlog area is deactivated while running from test runner
//   if (logArea != null) // code to verify if the error get log area is not null before saving anything
//   {
//   	logFile.write("soapUI Logs In a file.\r\n")
//      def model = logArea.model
//      if( model.size > 0 )            
//         for( c in 0..(model.size-1) )         
//           logFile.append(model.getElementAt( c ))       
//      
//   }

//Code to check and write the execution tracker file
try{
    String sExecutionStatus = "Completed";
    def sExeTrackerFile = new File(projectPath + "\\ExecutionTracker.txt");

    // if file doesnt exists, then create it
    if (!sExeTrackerFile.exists()) {
        sExeTrackerFile.createNewFile();
    }else{
		sExeTrackerFile.delete()
    }

    FileWriter fw = new FileWriter(sExeTrackerFile.getAbsoluteFile());
    BufferedWriter bw = new BufferedWriter(fw);
    bw.write(sExecutionStatus);
    bw.close();
}catch(IOException e){
    e.printStackTrace();
}

FileName.flush();
FileName.close();]]></script></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="groovy" name="JSONBuildTest"><con:settings/><con:config><script>import groovy.json.JsonOutput
import java.lang.*
import java.util.*

def jsonBuilder = new groovy.json.JsonBuilder()
HashMap &lt;String, Object> mapper = new HashMap&lt;String, Object>();

class MyActivityInfo{
	def sourceTransactionId
	def activityId
	def activityDate
	def publishDate
	def transactionType
	def firstName
	def lastName
	def dateOfBirth
	def searchID
	def contractNumber

	public void setData (srcTransactionId, actyId, actyDate, pubDate, transType, fstName, lstName, dtOfBirth, srchID, ctrctNum) {
   		this.sourceTransactionId = srcTransactionId
   		this.activityId = actyId
   		this.activityDate = actyDate
   		this.publishDate = pubDate
   		this.transactionType = transType
   		this.firstName = fstName
   		this.lastName = lstName
   		this.dateOfBirth = dtOfBirth
   		this.searchID = srchID
   		this.contractNumber = ctrctNum
	} 
	
	@Override
	public String toString() {
		def content = "{ \"sourceTransactionId\" : \"" + this.sourceTransactionId + "\", \"activityId\" : \"" + this.activityId + "\", \"activityDate\" : \"" + this.activityDate + "\", \"publishDate\" : \"" + this.publishDate + "\", \"transactionType\" : \"" + this.transactionType + "\", \"memberEligibilityIdentifier\" : { \"firstName\" : \"" + this.firstName + "\", \"lastName\" : \"" + this.lastName + "\", \"dateOfBirth\" : \"" + this.dateOfBirth + "\", \"searchID\" : \"" + this.searchID + "\", \"contractNumber\" : \"" + this.contractNumber + "\" }}";
		return content;
    }
}

def sRecordCount = 3
List&lt;Object> myActivityList = new ArrayList&lt;>();
for(iRecPtr = 1; iRecPtr&lt;=sRecordCount; iRecPtr++)
{
	def myActivityInfo1 = new MyActivityInfo();
	myActivityInfo1.setData('201501290113', 'RALLY.HEALTH_SURVEY.LONG', '2015-01-29T00:00:00Z', '2015-01-29T00:00:00Z', 'NEW', 'COKLEY', 'ROBBIE', '1970-02-04T00:00:00Z', '316228379', '0777783');
	mapper.put("Object_" + iRecPtr , myActivityInfo1);

	myActivityList.add(mapper.get("Object_" + iRecPtr))
}

log.info(myActivityList.size())

jsonBuilder(activityInformation: myActivityList)
//log.info(jsonBuilder.toPrettyString())
String content
content = jsonBuilder.getContent();
content = content.replaceAll("activityInformation=", "\"activityInformation\":");
log.info(content);</script></con:config></con:testStep><con:properties><con:property><con:name>InputFile</con:name><con:value>Input.xls</con:value></con:property><con:property><con:name>Property1</con:name><con:value>test-UHG-12345-Req</con:value></con:property><con:property><con:name>Property2</con:name><con:value>test-UHG-12345-SRC</con:value></con:property><con:property><con:name>Property3</con:name><con:value>test-UHG-12345-SRC</con:value></con:property><con:property><con:name>Property4</con:name><con:value>2015-05-20T11:01:00-06:00</con:value></con:property><con:property><con:name>Property5</con:name><con:value>Proc</con:value></con:property><con:property><con:name>Property6</con:name><con:value>BillingInvoice</con:value></con:property><con:property><con:name>Property7</con:name><con:value>BulkDataOnly</con:value></con:property><con:property><con:name>Property8</con:name><con:value>test-UHG-12345SLC</con:value></con:property><con:property><con:name>Property9</con:name><con:value>test-UHG-12345-DF</con:value></con:property><con:property><con:name>Property10</con:name><con:value>UHG123</con:value></con:property><con:property><con:name>Property11</con:name><con:value>UHGSlRN</con:value></con:property><con:property><con:name>Property12</con:name><con:value>1</con:value></con:property><con:property><con:name>Property13</con:name><con:value>C:</con:value></con:property><con:property><con:name>Property14</con:name><con:value>test-UHG-12345-Req</con:value></con:property><con:property><con:name>Property15</con:name><con:value>1</con:value></con:property><con:property><con:name>Property16</con:name><con:value>test-UHG-12345-Req</con:value></con:property><con:property><con:name>Property17</con:name><con:value>test-UHG-12345-Req</con:value></con:property><con:property><con:name>Property18</con:name><con:value>1234</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:properties/><con:encryptedContent xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:wssContainer><con:crypto><con:source>C:/Backup/PTP_Project/SOAP_Services/WebServiceFramework/odin-keystore.jks</con:source><con:password>1n5tallm3</con:password><con:type>KEYSTORE</con:type></con:crypto><con:crypto><con:source>C:/Backup/PTP_Project/SOAP_Services/WebServiceFramework/optumservicesApi2015new.jks</con:source><con:password>optumapi</con:password><con:type>KEYSTORE</con:type></con:crypto><con:crypto><con:source>C:/Backup/PTP_Project/SOAP_Services/WebServiceFramework/findConsumerKeyStore.jks</con:source><con:password>wesbfc</con:password><con:type>KEYSTORE</con:type></con:crypto><con:outgoing><con:name>test</con:name><con:entry type="Username" username="ptpcm" password="mBC/1234"><con:configuration><addCreated>true</addCreated><addNonce>true</addNonce><passwordType>PasswordText</passwordType></con:configuration></con:entry><con:entry type="Timestamp"><con:configuration><timeToLive>180</timeToLive><strictTimestamp>true</strictTimestamp></con:configuration></con:entry></con:outgoing><con:outgoing><con:name>findConsumer</con:name><con:entry type="Timestamp"><con:configuration><timeToLive>60</timeToLive><strictTimestamp>true</strictTimestamp></con:configuration></con:entry><con:entry type="Signature" username="findconsumer"><con:configuration><crypto>findConsumerKeyStore.jks</crypto><keyIdentifierType>0</keyIdentifierType><signatureAlgorithm/><signatureCanonicalization/><useSingleCert>false</useSingleCert><digestAlgorithm/></con:configuration></con:entry><con:entry type="Username"><con:configuration/></con:entry></con:outgoing></con:wssContainer><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>